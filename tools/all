------ Function return types ------

Total func: 704612
None: 23751
str: 11417
bool: 6511
int: 3748
dict: 1527
float: 1171
List[str]: 1154
bytes: 949
Any: 857
list: 790
Optional[str]: 587
np.ndarray: 497
Dict: 476
Dict[(str, Any)]: 449
HttpResponse: 420
tf.Tensor: 412
Response: 329
List[int]: 323
tuple: 299
pd.DataFrame: 215
Path: 214
Text: 208
object: 207
Dict[(str, str)]: 205
datetime: 175
Callable: 166
typing.List[str]: 161
Optional[float]: 160
Optional[int]: 153
Set[str]: 139
List: 139
Iterable[str]: 137
Tuple[(str, str)]: 124
T: 122
List[Dict[(str, Any)]]: 121
Callable[([Observable], Observable)]: 112
KtrResult: 100
Tuple[(int, int)]: 97
torch.Tensor: 91
Str: 86
typing.Disposable: 80
typing.Any: 79
Iterable[PackageMaker]: 79
Bool: 78
ndarray: 77
Iterator[str]: 74
gg.ggplot: 74
datetime.datetime: 73
List[float]: 73
List[List[str]]: 72
Tensor: 71
Dict[(str, int)]: 71
Generator[(PackageMaker, None, None)]: 67
List[Any]: 66
QuerySet: 66
List[Dict]: 64
Iterable[T]: 62
Instance: 61
NoReturn: 60
List[List[int]]: 59
Node: 58
rest.Response: 57
Union[(str, None)]: 56
argparse.Namespace: 56
Optional[bool]: 56
List[Text]: 55
List[dict]: 54
[str]: 52
np.array: 51
pd.Series: 51
FeedDict: 51
OrderedDict: 50
requests.Response: 50
typing.Optional[str]: 50
Tuple: 49
pathlib.Path: 49
Generator: 49
DataFrame: 47
User: 47
List[Str]: 47
Observable: 47
Optional[Dict[(str, Any)]]: 46
fmt.indentable: 46
Value: 46
Dict[(str, float)]: 45
Tuple[(float, float)]: 44
typing.Sequence[str]: 44
Tuple[(List[str], List[str])]: 44
xr.Dataset: 44
Dict[(str, torch.Tensor)]: 44
Decimal: 43
cirq.OP_TREE: 43
Dict[(Text, Any)]: 41
'int': 40
numpy.ndarray: 40
type: 39
Optional[dict]: 39
Message: 39
Optional[List[str]]: 39
Dict[(str, List[str])]: 39
Optional[Text]: 38
JsonDict: 38
Action: 37
Dict[(str, tf.Tensor)]: 37
ObjPath: 37
tibrv_status: 37
URL: 36
argparse.ArgumentParser: 36
List[Result]: 36
Optional[Any]: 35
Iterator: 35
bytearray: 35
Tuple[(float, float, float)]: 35
'Units': 35
Iterator[int]: 34
List[Dict[(str, str)]]: 33
TreeNode: 33
Transact: 32
[ResponseBaseInfo]: 32
Sequence[str]: 31
Iterable: 31
(str or None): 31
Generator[(str, None, None)]: 31
ListNode: 31
BaseQuery: 31
dt.datetime: 30
logging.Logger: 30
_Signal: 30
typing.List[typing.Dict[(str, typing.Any)]]: 30
Image: 29
Token: 29
iter: 29
Int: 29
Set[int]: 28
set: 28
BELGraph: 28
NextExecute: 28
Changeset: 28
Optional[bytes]: 27
typing.Dict: 27
IO: 27
IRCLine.ParsedLine: 27
SaQuery: 26
Session: 26
List[Tuple[(str, str)]]: 26
Mapping[(str, Any)]: 26
Point: 26
Event: 26
FrozenSet[Flag]: 26
WorkerResponse: 26
Tuple[(str, ...)]: 25
timedelta: 25
True: 25
List[Token]: 25
ops.OP_TREE: 25
typing.Dict[(str, typing.Any)]: 25
Link: 25
Entities: 25
(bool, str): 24
Tuple[(int, int, int)]: 24
JSON_TYPE: 24
Iterator[None]: 24
parsing.ir.IR: 24
Position: 24
Model: 23
Union[(int, float)]: 23
Element: 23
scoring_base.ExplainedScore: 23
Optional[Dict]: 22
Tuple[(str, int)]: 22
Optional[Sequence[str]]: 22
Platform: 22
NodePredicate: 22
Address: 22
ObjCInstance: 22
TokenNetworkAddress: 22
Request: 21
beam.pvalue.PCollection: 21
Tuple[(str, str, str)]: 21
Region: 21
protocols.CircuitDiagramInfo: 21
tf.Variable: 21
List[Extraction]: 21
ChannelID: 21
Dict[(str, Option)]: 21
UnaryOp: 21
Database: 20
Hashable: 20
List[Event]: 20
[]: 20
Namespace: 20
Pagination: 20
'State': 20
'Request': 20
numpy.array: 19
Tuple[(np.ndarray, np.ndarray)]: 19
Counter: 19
circuits.Circuit: 19
typing.List[typing.Any]: 19
typing.Optional[int]: 19
Program: 19
Union[(str, int)]: 19
TestResult: 19
Result: 18
Callable[(..., bool)]: 18
State: 18
RouteDef: 18
lt.LabeledTensor: 18
List[Tuple[(int, int)]]: 18
Optional[np.ndarray]: 18
ContextManager[None]: 18
BitVec: 18
'SASresults': 18
LdapObject: 18
WebElement: 18
Tuple[(int, str)]: 17
Tuple[(bytes, bytes)]: 17
Container: 17
discord.Embed: 17
Sequence[_InstanceMetadata]: 17
ActionType: 17
AsyncObservable: 17
Iterable[Instance]: 17
subprocess.CompletedProcess: 16
Config: 16
Dict[(str, Dict[(str, str)])]: 16
Dict[(str, Dict[(str, Any)])]: 16
JSON: 16
ET.Element: 16
_Deco: 16
xarray.Dataset: 16
Validator: 16
EdgePredicate: 16
Location: 16
ty.Iterable[str]: 16
Attrs: 16
'Position': 16
Optional[datetime.datetime]: 15
Type: 15
Group: 15
Tuple[(Optional[str], Optional[str])]: 15
Tuple[(int, ...)]: 15
Dict[(int, str)]: 15
typing.Union[(str, None)]: 15
Optional[Tuple[(str, str)]]: 15
typing.Tuple[(str, str)]: 15
[Action]: 15
Block: 15
BrightsideMessage: 15
namedtuple: 15
MaybeBytes: 15
Entity: 15
StyleAndTextTuples: 15
Optional[Callable]: 15
Unit('Ω'): 15
x509.Certificate: 15
np.dtype: 15
Number: 15
Dict[(str, tldap.fields.Field)]: 15
'(n -- n)': 15
lex.LexToken: 15
Move: 15
Kvetch: 15
Channel: 14
Optional[datetime]: 14
_T: 14
(str, str): 14
ArgumentParser: 14
FrozenSet[str]: 14
'bool': 14
Match: 14
Dict[(str, bool)]: 14
Sequence: 14
TableDescription: 14
List[UserProfile]: 14
'Addressee': 14
Optional[Mapping[(str, int)]]: 14
Optional[QuirkOp]: 14
Optional[TrotterStep]: 14
Iterable[dict]: 14
Writeable: 14
AnyFormattedText: 14
List[RplintFail]: 14
Citation: 14
'SignLattice': 14
(int, Union[(str, dict, None)]): 14
Optional[WorkerResponse]: 14
Dict[(Any, Any)]: 13
Tag: 13
ssl.SSLContext: 13
ModuleType: 13
Dict[(int, int)]: 13
List[User]: 13
Optional[Path]: 13
List[Container]: 13
Stream: 13
Iterable[Tuple[(str, str)]]: 13
Awaitable: 13
'Event': 13
Optional[Dict[(Text, Any)]]: 13
Optional[tf.Tensor]: 13
Dict[(str, tf.DType)]: 13
Sequential: 13
Identity: 13
List[Document]: 13
List[TestCase]: 13
List[Dimension]: 13
List[Substitution]: 13
PropertyBase: 13
Generator[(int, None, None)]: 12
Filter: 12
ZhaDeviceEntry: 12
List[bytes]: 12
Mapping: 12
Generator[(None, None, None)]: 12
Flask: 12
HydraError: 12
'Type': 12
UserProfile: 12
Iterable[BaseEntity]: 12
ParseResults: 12
ParserElement: 12
List[Edge]: 12
Document: 12
typing.Callable: 12
Optional[User]: 12
Iterable[Completion]: 12
Optional[List[Path]]: 12
Tuple[(OutputProjection, int)]: 12
sample.Sample: 12
List[Dict[(int, Dict[(str, Any)])]]: 12
Genome: 12
Dict[(str, tf.TensorShape)]: 12
Z3Term: 12
'ProductState': 12
List[requests.Response]: 12
ObservationSpace: 12
Callable[([List[int]], List[int])]: 12
LintCheckResult: 12
Dict[(object, ResultVariable)]: 12
typing.Iterable[str]: 11
requests.Session: 11
Card: 11
Graph: 11
collections.OrderedDict: 11
'Node': 11
Iterator[Any]: 11
Callable[([str, str], bool)]: 11
bin: 11
Tuple[(tf.Tensor, tf.Tensor)]: 11
Markup: 11
Set[BaseEntity]: 11
'TSelf': 11
Union[(np.ndarray, NotImplementedType)]: 11
'AtomicVar[T]': 11
Task: 11
Image.Image: 11
AnyDimension: 11
Job: 11
ir.f32: 11
ir.f64: 11
'AsyncChainedObservable': 11
'C': 11
Generator[(sample.Sample, None, None)]: 11
S: 11
'Schedule': 11
SigningKeyType: 11
List[Structure]: 11
'APRONState': 11
ObservationType: 11
nd_sym_type: 11
'Point2': 11
Union[(None, Any)]: 11
sql_query_data.SQLQueryData: 11
Sequence[DbTicket]: 11
mx.sym.Symbol: 11
'Feed': 11
ICDM: 11
RightAction: 11
Logger: 10
Tuple[(Dict[(str, Any)], Dict[(str, Any)])]: 10
T.Iterable[BaseResult]: 10
Workspace: 10
Callable[([], None)]: 10
aiohttp.ClientSession: 10
Mapping[(str, str)]: 10
Data: 10
complex: 10
pipeline.Pipeline: 10
List[np.ndarray]: 10
UUID: 10
Track: 10
callable: 10
'str': 10
Optional[T]: 10
vol.Schema: 10
Service: 10
Exception: 10
typing.List: 10
'BIP32Node': 10
Tuple[(bool, bytes)]: 10
network.TensorNetwork: 10
P: 10
List[Card]: 10
Environment: 10
flask.Response: 10
List[List[Any]]: 10
datetime.date: 10
'Pipeline': 10
MagicMock: 10
HttpResponseRedirect: 10
gym.Space: 10
Iterator[Tuple[(str, Any)]]: 10
PolygraphType: 10
Selector: 10
ir.i32: 10
ir.i64: 10
'Observable': 10
List[tf.Tensor]: 10
EventType: 10
Layer: 10
SMTExprNonatom_: 10
Asset: 10
Type[ContextDelegate]: 10
MutableMapping: 10
Optional[SomeActionsType]: 10
(tibrv_status, str): 10
Iter(Post): 10
ParamTable: 10
Annotation: 10
Expr: 10
BoardState: 10
sqlite3.Connection: 9
asyncio.Future: 9
asyncio.Task: 9
'User': 9
Tuple[(str, List[str])]: 9
Union[(bool, str)]: 9
Client: 9
Application: 9
List[State]: 9
Engine: 9
Tuple[(Any, ...)]: 9
Optional[Dict[(str, str)]]: 9
'TreeNode': 9
Union[(List, Dict)]: 9
Tuple[(str, bool)]: 9
_Middleware: 9
Item: 9
datetime.timedelta: 9
dm_env.Environment: 9
Optional[Abstract_Wallet]: 9
Search: 9
Tuple[(int, Optional[int])]: 9
Dict[(str, Set[str])]: 9
typing.Counter[str]: 9
'Seeding': 9
SetOfNodeTriples: 9
Union[(int, None)]: 9
Dict[(str, np.ndarray)]: 9
(int, int): 9
value.LinearDict[str]: 9
'Heatmap': 9
op_tree.OP_TREE: 9
'cirq.OP_TREE': 9
Tuple[(Sequence[cirq.Qid], Optional[cirq.Qid])]: 9
Callable[(..., Any)]: 9
List[Unit]: 9
HTTPResponse: 9
List[Package]: 9
Query: 9
Deferred: 9
APIReturnType: 9
QUrl: 9
'List': 9
MLModel: 9
Gradients: 9
Iterable[Batch]: 9
List[Instance]: 9
Story: 9
FileGenerator: 9
Vind: 9
Embed: 9
EventList: 9
typing.Optional[typing.Dict[(str, str)]]: 9
Point2: 9
Iterable[Rule]: 9
'environ.Response': 9
Dict[(str, TorrentEntryAttrs)]: 9
typing.List['KademliaPeer']: 9
[str, None]: 9
hints.Bool: 9
LTS: 9
Branch: 9
Generator[(Any, None, None)]: 8
Member: 8
date: 8
configparser.ConfigParser: 8
response.Response: 8
configargparse.ArgumentParser: 8
AreaEntry: 8
ulid.ULID: 8
Tuple[(Text, Text)]: 8
statistics_pb2.DatasetFeatureStatistics: 8
List[bool]: 8
_State: 8
Command: 8
AnnData: 8
Optional[ValueType]: 8
Template: 8
Iterator[dict]: 8
types.ModuleType: 8
any: 8
Foo: 8
Team: 8
List[Message]: 8
'XY': 8
List[T]: 8
Tuple[(Tensor, Tensor, Tensor, Tensor)]: 8
tink_pb2.KeyTemplate: 8
pyref: 8
typing.List[DataAndMetadata.DataAndMetadata]: 8
Dataset: 8
Union[(int, str)]: 8
Category: 8
TaxBenefitSystem: 8
Network: 8
Vector: 8
Tuple[(raw_types.Qid, ...)]: 8
cirq.CircuitDiagramInfo: 8
binary80: 8
[[int]]: 8
Schema: 8
KeyBindings: 8
KeyBindingsBase: 8
List[KeyPress]: 8
Serializer: 8
ManagesNamesProxy: 8
QRect: 8
Version: 8
AsyncObservable[T]: 8
'AsyncObservable[T]': 8
vm.XenonStackItem: 8
PlainTextFileReader: 8
Batch: 8
Iterator[Instance]: 8
Dict[(str, List[int])]: 8
List[JsonDict]: 8
Tuple[bool]: 8
Tuple[(np.ndarray, np.ndarray, np.ndarray, np.ndarray)]: 8
typing.Set[str]: 8
Configuration: 8
'Selector': 8
IntegerValue: 8
List[CropObject]: 8
Transaction: 8
(dict or tuple): 8
Optional[list]: 8
'Dict[str, Any]': 8
'(turtle n -- turtle)': 8
SnippetVersion: 8
Iterator[Metric]: 8
QStandardItemModel: 8
SimResult: 8
models.MetricScore: 8
Union[(Sequence[float], np.ndarray)]: 8
VersionContainer: 8
COMPONENT: 8
BlogPost.Id: 8
'Expr': 8
'TestResult2': 8
typing.Dict[(str, str)]: 7
Status: 7
Bag: 7
Optional[Set[str]]: 7
Optional[Tuple[(float, float)]]: 7
Context: 7
Future: 7
Gtk.Widget: 7
Dict[(Text, List[types.Artifact])]: 7
beam.PTransform: 7
statistics_pb2.FeatureNameStatistics: 7
statistics_pb2.DatasetFeatureStatisticsList: 7
TextIO: 7
Enum: 7
time: 7
FunctionType: 7
Repository: 7
Coroutine: 7
PandasDataFrame: 7
Tuple[int]: 7
U: 7
Callable[([Callable], Callable)]: 7
Union[(str, bool)]: 7
Dict[(str, Dict[(str, float)])]: 7
Tuple[(Any, Any)]: 7
Profile: 7
subprocess.Popen: 7
Tuple[(str, Dict[(str, Any)], Dict[(str, Any)])]: 7
tink_pb2.KeyData: 7
Tuple[(bool, Optional[str])]: 7
defaultdict: 7
Optional[List[int]]: 7
DataArray: 7
Optional[Tuple[(int, int)]]: 7
Mapping[(str, int)]: 7
Tuple[(Dict[(str, Any)], List[str])]: 7
IO[bytes]: 7
Union[(str, float)]: 7
Iterable[Any]: 7
'Duration': 7
List[GridQubit]: 7
'linear_combinations.LinearCombinationOfGates': 7
'GridQubit': 7
ty.Tuple[(bool, ty.Optional[str], ty.Optional[dict])]: 7
Iterable[bytes]: 7
QVariant: 7
typing.Iterator[TViewLine]: 7
Optional[UnstructuredHeader]: 7
Note: 7
Optional[Suggestion]: 7
Size: 7
'Output': 7
typing.Iterator[str]: 7
Iterable[Dict[(str, Any)]]: 7
ServerReflectionResponse: 7
Unit('V'): 7
Unit('s'): 7
QIcon: 7
RtlSignalBase: 7
RtlSignal: 7
'b': 7
Account: 7
'Polygon': 7
Maybe: 7
Shape: 7
'QuerySet': 7
Audio: 7
Tuple[(str, Optional[str])]: 7
List[List[Token]]: 7
Iterator[Dict[(str, Any)]]: 7
([str], str): 7
Individual: 7
'BitVec': 7
List[discord.TextChannel]: 7
Learner: 7
SourceVector: 7
SourceSummary: 7
Tuple[(List[str], List[Result])]: 7
(str, dict): 7
SuccessResponse: 7
[[]]: 7
Popen: 7
'SimpleUsageState': 7
'LivenessState': 7
'Notification': 7
Source: 7
List[HIDEvent]: 7
WeightableList: 7
typing.Iterator[typing.Dict[(str, typing.Any)]]: 7
(int, Union[(dict, str, None)]): 7
UpgradeResult: 7
List[Type[PluginScanCommand]]: 7
OrderEventData: 7
'APIResult': 7
'PaginatedListProxy[objects.User]': 7
'Configuration': 7
Nat: 7
ProtocolLabel: 7
Iter(BlogPost): 7
Visibility: 7
Automaton: 7
PageModel: 7
'Layer': 7
Tuple[(int, int, int, int)]: 6
Tuple[(bool, Model)]: 6
'Bag': 6
Dict[(str, Callable[([], Any)])]: 6
NpMatrix: 6
Window: 6
Dict[(str, Filter)]: 6
Dispatcher: 6
concurrent.futures.Future: 6
Tuple[(int, Callable)]: 6
Optional[AreaEntry]: 6
Callable[([str], bool)]: 6
Awaitable[_T]: 6
asyncio.AbstractEventLoop: 6
Timestamp: 6
tf.train.Example: 6
Type[Any]: 6
List[List[float]]: 6
List[Tuple[(int, str)]]: 6
ACCTYPE: 6
yaml.Node: 6
Series: 6
Metadata: 6
List[MountInfo]: 6
sa.Column: 6
Button: 6
void: 6
Package: 6
'BaseCookie[str]': 6
TagContext: 6
List['Rune']: 6
base.Action: 6
List[Track]: 6
Tuple[(bool, str)]: 6
Union[(float, np.ndarray)]: 6
List[Path]: 6
typing.Optional[bytes]: 6
Callable[(..., T)]: 6
type_pb2.Type: 6
spanner_orm.NoUpdate: 6
Tuple[(Optional[int], ...)]: 6
Velocity: 6
NlpServerResult: 6
Pattern: 6
(dict or None): 6
pandas.DataFrame: 6
Remote: 6
etree.Element: 6
Union[(HttpResponse, _RespondAsynchronously)]: 6
Tuple[(List[int], List[int])]: 6
Callable[(..., Tuple[Simulation])]: 6
Dict[(str, Dict)]: 6
typing.Tuple[(str, int)]: 6
LearnerBase: 6
Mapping[(str, Set[str])]: 6
ModifierDict: 6
nx.DiGraph: 6
Generator[(Volume, None, None)]: 6
SignalSender: 6
Frame: 6
List[ops.Operation]: 6
cirq.LinearDict[str]: 6
Timer: 6
Operation: 6
List[Minutia]: 6
NistBeaconValue: 6
typing.Sequence[flow.Flow]: 6
DialogueStateTracker: 6
socket.socket: 6
ComponentTypeName: 6
[ast.stmt]: 6
IMAPConfig: 6
Tuple[('Command', memoryview)]: 6
{str: str}: 6
Optional[Package]: 6
List[Movie]: 6
Tuple[(str, Dict[(str, Any)])]: 6
Tuple[(float, int)]: 6
Iterable[JsonPropertyMapping]: 6
SupportStatus: 6
typing.AbstractSet[str]: 6
'Customer': 6
'ApiKey': 6
'Blackout': 6
'Permission': 6
'AbstractQuantumSimulator': 6
AbstractSession: 6
Oracle: 6
typing.Dict[(str, grpclib.const.Handler)]: 6
'Substitution': 6
rsa.RSAPrivateKey: 6
Either: 6
io.BytesIO: 6
IAction: 6
Objective: 6
Executable: 6
Iterable[np.ndarray]: 6
'Dataset': 6
Vocabulary: 6
Iterable[List[str]]: 6
Time: 6
Wad: 6
Dict[(int, Any)]: 6
CodeBlock: 6
List[Transition]: 6
GlobalState: 6
G: 6
snug.Query[bool]: 6
Histogram1D: 6
HelloResponse: 6
array.array: 6
AnsiDecorator: 6
Sort: 6
UInt64: 6
Content: 6
Unit: 6
Disposable: 6
List[object]: 6
SignLattice: 6
'ControllerMixin': 6
'Optional[str]': 6
Optional[List[AssociatedData]]: 6
Dimensions: 6
List[List[Ball]]: 6
Set[Point2]: 6
Optional[ArchiverResponse]: 6
Iterator[Package]: 6
List[QFormLayout]: 6
List[Classroom]: 6
'objects.User': 6
'PaginatedListProxy[objects.Repo]': 6
Tuple[(np.datetime64, int)]: 6
AirCargoProblem: 6
'KX_VertexProxy': 6
List[Game]: 6
Repo: 6
AnyStr: 6
TokenAmount: 6
'Response': 6
Entropy: 6
QMenu: 6
(tibrv_status, int): 6
typing.Optional[float]: 6
Dict[(str, Dict[(str, Union[(str, bytes)])])]: 6
Dict[(str, Dict[(str, object)])]: 6
Tuple[(List, str)]: 6
ConfigType: 6
QA: 6
BinOp: 6
VAO: 6
'dt_guild.Guild': 5
Game: 5
'Embed': 5
uuid.UUID: 5
Role: 5
R: 5
Weather: 5
Optional[rest.Response]: 5
Tuple[(datetime, datetime)]: 5
T.Any: 5
CheckResult: 5
Connection: 5
List[tuple]: 5
Generator[(None, Any, None)]: 5
List[EsummaryResult]: 5
Awaitable[None]: 5
Union[(str, bytes)]: 5
Dict[(Text, Text)]: 5
List[Tuple[('Device', List[Note], List[Note])]]: 5
Optional[Node]: 5
Dict[(str, List[Dict[(str, Any)]])]: 5
Entry: 5
(str, {str: str}): 5
BeautifulSoup: 5
Iterable[SpatialImage]: 5
arrow.Arrow: 5
List[Union[(int, str)]]: 5
Random: 5
'ImmutableList[T]': 5
Optional[jsonrpclib.Server]: 5
BytesIO: 5
'Currency': 5
StrHeaderListType: 5
List[Union[(str, int)]]: 5
MutableMapping[(Path, float)]: 5
Mapping[(str, float)]: 5
List[migration.Migration]: 5
Type[P]: 5
Tuple[(List, List)]: 5
Module: 5
Optional[Response]: 5
PullRequest: 5
Commit: 5
'Markup': 5
Union[(None, int)]: 5
Tuple[(int, float)]: 5
Tuple[(bool, float)]: 5
logging.LogRecord: 5
'Schema': 5
Optional[pathlib.Path]: 5
DataSet: 5
Mapping[(str, List[str])]: 5
Pipeline: 5
Dict[(str, pd.DataFrame)]: 5
Index: 5
Reader: 5
Tuple[(float, float, int)]: 5
StateGridTensors: 5
List[Group]: 5
'Frame': 5
'LineQubit': 5
Iterator[Params]: 5
Iterator[float]: 5
Union[(sympy.Basic, float)]: 5
ops.Operation: 5
Iterable[Dict]: 5
'LinearCombinationOfGates': 5
OrderStatus: 5
Tuple[(Optional[str], str)]: 5
Dict[(int, float)]: 5
JsonResponse: 5
mitmproxy.types.Data: 5
Iterable[Token]: 5
models.QuerySet: 5
protobuf.MessageType: 5
'TrainingData': 5
List[Dict[(Text, Any)]]: 5
'PrettyDir': 5
([ast.stmt] or ast.expr): 5
Union[(Request, None)]: 5
Union[(Any, None)]: 5
Sequence[bytes]: 5
Record: 5
Iterable[int]: 5
Optional[Sequence[AddressHeader]]: 5
List[Release]: 5
Symbol: 5
Reference: 5
Callable[([int], StyleAndTextTuples)]: 5
ClipboardData: 5
PrimitiveJsonType: 5
List[tf.Variable]: 5
'Point': 5
'Heartbeat': 5
'Participant': 5
Iterable[Dict[(str, str)]]: 5
List[List[List[str]]]: 5
Unit('°C'): 5
Tuple[(bool, bool)]: 5
QtGui.QFont: 5
Stats: 5
Generator[(Dict, None, None)]: 5
discord.Member: 5
Parser: 5
QImage: 5
'Path': 5
Optional[Position]: 5
Pose: 5
Field: 5
'Reader': 5
'Maybe': 5
'Writer': 5
Callable[([AsyncObservable], AsyncObservable)]: 5
List[Episode]: 5
Writer: 5
'Model': 5
Maybe['Model']: 5
Optional[Address]: 5
List['K.variable']: 5
Tuple[(torch.Tensor, torch.Tensor)]: 5
UTF8: 5
ScraperResult: 5
Union[(Note, None)]: 5
Literal: 5
snug.Query[dict]: 5
discord.TextChannel: 5
'Rule': 5
AttentionLoopState: 5
'Tickfilter': 5
LineString: 5
typing.List[pathlib.Path]: 5
RenderResultType: 5
Corpus: 5
Iterable[Tuple[(Location, str)]]: 5
SearchOptions: 5
csr_matrix: 5
coo_matrix: 5
_User: 5
VerticalRegionDeclStmt: 5
Awaitable[bool]: 5
SExpr: 5
Optional[Term]: 5
'Term': 5
Structure: 5
Dict[(Str, Str)]: 5
Figure: 5
_FileSizeType: 5
typing.Optional[bool]: 5
'UsageLattice': 5
'StringSetLattice': 5
'LivenessLattice': 5
Character: 5
typing.Union[(None, str)]: 5
'Optional[sublime.View]': 5
'Optional[Session]': 5
Passage: 5
'(turtle -- turtle)': 5
'(path -- )': 5
'(url -- response_object)': 5
'Segment': 5
RewardSpace: 5
Generator[(components.Component, None, None)]: 5
'Cost': 5
(dict, int): 5
[sql_query_column_model.SQLColumnModel]: 5
Dict[(UserID, User)]: 5
NextState: 5
'Config': 5
Opt[EngineQueue]: 5
List[Number]: 5
Snapshot: 5
VersionContainer[SemVerAdapter]: 5
VersionContainer[DebianVersion]: 5
List[RouteState]: 5
SimpleControllerState: 5
MatchConfig: 5
typing.Union[(None, dict)]: 5
typing.Union[('steps.ProjectStep', None)]: 5
List[SelectorType]: 5
File: 5
Optional[CacheValue]: 5
ArithUint256: 5
List[basetransaction.BaseOutputEffectiveAmountEstimator]: 5
Dict[(str, Iterable)]: 5
GainTable: 5
List[Setting]: 5
List[Task]: 5
List[dbWorkLine]: 5
ListProxy: 5
moderngl.Context: 5
ModeratorModel: 5
array: 5
ConfigFile: 4
Blueprint: 4
FrozenObj: 4
Tuple[(str, dict)]: 4
HardwareRule: 4
Optional[Account]: 4
WeatherForecast: 4
BNode: 4
model.User: 4
Dict[(str, Tuple[(SaColumn, str)])]: 4
Callable[([RouteHandler], RouteHandler)]: 4
List[db.Card]: 4
Optional[Deck]: 4
Deck: 4
List[HistoryItem]: 4
Post: 4
List[Tag]: 4
URLRecord: 4
'Optional[Integration]': 4
Optional[ModuleType]: 4
ModuleWrapper: 4
Optional[dt.tzinfo]: 4
Optional[dt.date]: 4
yaml.nodes.Node: 4
Sequence[T]: 4
Optional[DeviceEntry]: 4
List[DeviceEntry]: 4
List[EfetchPackage]: 4
Gtk.Label: 4
hints.Bytes: 4
hints.Str: 4
'HeaderArrayObj': 4
_AggState: 4
(int, str): 4
sqlalchemy.engine.Engine: 4
List[Site]: 4
Dict[(str, Optional[str])]: 4
Callable[([Any], Any)]: 4
List[Command]: 4
Tuple[(DeviceType, ...)]: 4
Optional['supriya.daw.Application']: 4
BusGroup: 4
Optional[Server]: 4
List[Dict[(str, Union[(str, int)])]]: 4
Thread: 4
'pexpect.spawn[str]': 4
HgRepository: 4
FakeEdenFS: 4
typing.Iterator: 4
Vowel: 4
Cluster: 4
List[TreeNode]: 4
Callable[([CALLABLE_T], CALLABLE_T)]: 4
(datetime or None): 4
Iterable[Tuple[(Any, Any)]]: 4
Callable[(..., Callable)]: 4
ValueType: 4
t.Any: 4
t.List[str]: 4
MongoQuery: 4
Union[(dict, None)]: 4
'Iterator[Morsel[str]]': 4
Iterable[Path]: 4
wrappers.EnumType: 4
wrappers.Method: 4
'Address': 4
Sequence[dict]: 4
Summoner: 4
Champion: 4
PILImage: 4
Sprite: 4
Resource: 4
Sequence[np.ndarray]: 4
Optional[VersionedSeed]: 4
Dict[(Tuple[(int, int)], int)]: 4
s2.LatLngRect: 4
Dict[(str, Track)]: 4
Callable[(..., None)]: 4
tink_pb2.Keyset: 4
tink_pb2.EncryptedKeyset: 4
Variable: 4
FLOATS_TYPE: 4
List[Column]: 4
MetaData: 4
Tuple[(str, str, int)]: 4
discord.Client: 4
SetInfoType: 4
Tuple[(np.array, np.array)]: 4
Tree: 4
Optional[Realm]: 4
redis.StrictRedis: 4
Tuple[(Stream, Recipient, Optional[Subscription])]: 4
Tuple[(List[Stream], List[Stream])]: 4
Callable[([int, str], bool)]: 4
'TimeTrackingCursor': 4
Optional[UserProfile]: 4
Uploader: 4
Tuple[(List[ZerverFieldsT], List[ZerverFieldsT])]: 4
tf.Operation: 4
List[BaseEntity]: 4
EdgeIterator: 4
'Query': 4
Seeding: 4
List[Node]: 4
List[Tuple[(str, int)]]: 4
Iterable[NodeTriple]: 4
Tuple[(Dict, Dict)]: 4
Optional['EFBMsg']: 4
'EFBChat': 4
Q: 4
Dict[(str, Union[(str, int, bool)])]: 4
tf.data.Dataset: 4
Dict[(Text, int)]: 4
Board: 4
Widget: 4
Tuple[(bool, dict)]: 4
Generator[(Tuple[(str, str)], None, None)]: 4
Dict[(str, Callable)]: 4
CommandOutput: 4
collections.Counter: 4
value.Duration: 4
Optional[GridQubit]: 4
GridQubit: 4
GridQubitLineTuple: 4
sweeps.Sweep: 4
'PauliStringPhasor': 4
'QubitOrder': 4
'Operation': 4
Optional[Sequence[Tuple[(float, float)]]]: 4
Sequence[cirq.Qid]: 4
OptimizationResult: 4
'Command': 4
MesosTaskParameters: 4
Signal: 4
'Payload': 4
Payload: 4
Iterator[bool]: 4
np.matrix: 4
QObject: 4
TEventGenerator: 4
typing.Sequence[http.HTTPFlow]: 4
List[TSetCookie]: 4
List[Item]: 4
decimal.Decimal: 4
'Transport': 4
Fingerprint: 4
Tuple[(Set[Text], Set[Text])]: 4
Optional['Interpreter']: 4
Optional['EventChannel']: 4
Optional[DialogueStateTracker]: 4
DialogueTrainingData: 4
'FallbackPolicy': 4
AbstractEventLoop: 4
parsing.Node: 4
Signature: 4
ast.expr: 4
CurrentUser: 4
DatabaseHandler: 4
Tuple[(float, float, float, float)]: 4
Tuple[(KeyType, ValueType)]: 4
gpd.GeoDataFrame: 4
AsyncContextManager[None]: 4
LoginProtocol: 4
_RT: 4
'MessageContent': 4
Sequence[MessageContent]: 4
'CMake': 4
HTTPMethod: 4
BQuerySet: 4
ConfigTree: 4
Community: 4
'Symbol': 4
Iterable[Container]: 4
Style: 4
np.float64: 4
Transition: 4
defer.Deferred: 4
Task.ExtraData: 4
ClusterStats: 4
Manifest: 4
'Action': 4
'SharedSession': 4
Optional[List[Tuple[(str, str)]]]: 4
Tuple[(List[float], List[float])]: 4
'QUrl': 4
Optional[Exception]: 4
'AbstractPublication': 4
'MagicCollection': 4
fields.Field: 4
Dict[(str, Dict[(str, int)])]: 4
(int, str, str): 4
[(str, str)]: 4
Unit('A'): 4
Unit('W'): 4
ManagementObject: 4
QColor: 4
Generator[('RtlSignal', None, None)]: 4
Tuple[(bool, List[str])]: 4
Iterator[Tuple[(int, str)]]: 4
'd': 4
Optional[XMSS]: 4
XMSS: 4
discord.Channel: 4
dns.message.Message: 4
PEMCertificatePayload: 4
Set[Tuple[(int, int)]]: 4
MeshData: 4
Optional['ContainerNode']: 4
ContainerInterface: 4
'Pose': 4
TeamColor: 4
'Cont': 4
'DaGroup': 4
'Chunks': 4
Iterable[pendulum.Date]: 4
Union[(dict, str)]: 4
ColorStr: 4
SafeString: 4
Callable[([], ImageNetSpec)]: 4
Tuple[(tf.Tensor, tf.Tensor, int)]: 4
Tuple[(Tuple[(tf.Tensor, tf.Tensor)], Tuple[(tf.Tensor, tf.Tensor)])]: 4
RNNCellTuple: 4
EncoderProjection: 4
ExecutionResult: 4
Tuple[(tf.Tensor, Any)]: 4
Union[(str, list)]: 4
Mapping[(str, object)]: 4
List[LogCreated]: 4
Extraction: 4
List[Element]: 4
Iterator[TensorDict]: 4
Dict[(str, List[List[int]])]: 4
Set[Object]: 4
Set: 4
Iterable[Tuple[(TensorType, TensorType)]]: 4
Iterator[Tuple[(str, str)]]: 4
Iterable[AnkiDeck]: 4
pd.Timestamp: 4
Direction: 4
Dict[(int, SimpleNamespace)]: 4
Sequence[Individual]: 4
Settings: 4
Union[(bool, None)]: 4
'Constraints': 4
(str, int): 4
TrainingData: 4
Runner: 4
'HistogramCollection': 4
Histogram2D: 4
'Vocabulary': 4
nx.MultiDiGraph: 4
provmodel.ProvDocument: 4
Union[(Dict, List)]: 4
clgen_pb2.Instance: 4
'keras.models.Sequential': 4
Generator[(Tuple[(int, int, str, type)], Any, None)]: 4
Tuple[(Generator[(Tuple[(str, Comment)], None, None)], str)]: 4
List[nn.Module]: 4
Type[ResourceObject]: 4
ItemsView: 4
SchemaMessage: 4
ResponseMessage: 4
'Edit': 4
PartialSerialization: 4
Edit: 4
Sentence: 4
Language: 4
Sequence[Token]: 4
Server: 4
Iterable[Request]: 4
typing.Tuple[(typing.List[str], typing.List[str])]: 4
typing.Optional[typing.List[str]]: 4
types.FunctionType: 4
pymysql.connections.Connection: 4
List[Job]: 4
List[tsrc.Repo]: 4
Patch: 4
_WSRequestContextManager: 4
Optional['tile.Tile']: 4
'Optimization': 4
_Case[(_S, _T)]: 4
'SExpr': 4
StateVarId: 4
Tuple[(ndarray, ndarray)]: 4
Tuple[(dict, dict)]: 4
[ResponseDimmerCorrectionConfig]: 4
_FuncT: 4
struct_time: 4
Set[Node]: 4
'Store': 4
'JSONMixin': 4
AnalysisResult: 4
TypeLattice: 4
'VectorContract': 4
BaseLoader: 4
List[Language]: 4
List[onlinejudge.type.TestCase]: 4
'Optional[ClientConfig]': 4
Sequence[Resource]: 4
'(path -- bool)': 4
DatabaseMedia: 4
nc.Variable: 4
List[Tuple[(str, Callable)]]: 4
UserAuthInfo: 4
ColorSource: 4
ColorSegment: 4
'EventGroupList': 4
List[SingleCheckpoint]: 4
DiscreteActionSpace: 4
RewardType: 4
LossInputSchema: 4
typing.Optional[typing.Dict[(str, typing.Any)]]: 4
association_pb2.VolunteeringMissions: 4
FakeResultSet: 4
(bool, Union[(None, str)], Union[(None, dict)]): 4
'Pointlike': 4
(dict,): 4
(str,): 4
ArchiverResponse: 4
Optional[Payload]: 4
Optional[DispatcherResponse]: 4
'DynamicConnectivity': 4
Heap: 4
Union[(None, T)]: 4
Party: 4
List[Party]: 4
Shop: 4
Sequence[DbUser]: 4
Brand: 4
Iterator[UserEvent]: 4
'PackageMaker': 4
'VersionStripper': 4
DataSetController: 4
BuildingsProvider: 4
Union[(List[str], None)]: 4
Optional[List[Action]]: 4
List[LaunchDescriptionEntity]: 4
LaunchDescription: 4
Callable[(['ExecuteProcess'], bool)]: 4
List[Tuple[(str, List[str])]]: 4
Build: 4
'PaginatedListProxy[objects.Event]': 4
LocalDevice: 4
aiormq.Channel: 4
Optional[SvcEndpointSet]: 4
CGRect: 4
Iterable[Tuple[(str, Any)]]: 4
Sequence[Object]: 4
List[Player]: 4
FileObject: 4
DRS: 4
RaceInfo: 4
'ResponseMessage': 4
'CommandClient': 4
List[Tuple[(int, int, int, float)]]: 4
Callable[([List[LabeledExample]], Tuple[(List[LabeledExample], List[LabeledExample])])]: 4
hex: 4
Iterator[CaptureResult[Identifier]]: 4
QItemSelectionModel: 4
(tibrv_status, tibrvQueue): 4
(tibrv_status, tibrvTransport): 4
typing.ContextManager[typing.BinaryIO]: 4
'KademliaPeer': 4
'RequestDatagram': 4
DictWrapper: 4
Tuple[(ParsingStateStack, ChunkStore)]: 4
Tuple[(float, pd.DataFrame)]: 4
'RoleSpec': 4
'QueryOpSpec': 4
List[Visibility]: 4
typing.Tuple[(typing.List[str], np.ndarray)]: 4
DataPack: 4
List[Vulnerability]: 4
List[Addon]: 4
InteractiveContext: 4
typing.Union[(str, dict)]: 4
SessionAttachContext: 4
SessionLocation: 4
'Generator[str]': 4
[WebElement]: 4
EchoFormat: 4
List[Metric]: 4
(List[str] or None): 4
Optional[DiscoveredNode]: 4
PostResultModel: 4
List[BoardModel]: 4
'List[BoardModeratorModel]': 4
Color: 4
BaseTransaction: 3
List[Role]: 3
'AvatarUrl': 3
App: 3
DriverSettings: 3
LightPlatformInterface: 3
'SwitchPlatformInterface': 3
twispy.handler.API: 3
tweepy.API: 3
List[Model]: 3
Optional[model.User]: 3
model.Comment: 3
List[model.Tag]: 3
model.Tag: 3
model.TagCategory: 3
Tuple[bytes]: 3
T.Tuple[(str, T.Sequence[str])]: 3
AutoTagSettings: 3
Iterable[_ThirdPartyTag]: 3
URLInfo: 3
BaseRequest: 3
Reply: 3
PokemonStats: 3
Dict[(int, HeosSource)]: 3
Sequence[InputSource]: 3
Optional[dt.datetime]: 3
Optional[dt.time]: 3
NodeListClass: 3
NodeStrClass: 3
DICT_T: 3
List[JSON_TYPE]: 3
yaml.MappingNode: 3
Optional[logging.Formatter]: 3
'TextSensorInfo': 3
Optional['TextSensorState']: 3
Union[(CIMultiDict, Dict[(str, str)])]: 3
CloudPreferences: 3
asyncio.BaseEventLoop: 3
aiohttp.web.AppRunner: 3
RGBColorState: 3
'astral.Location': 3
Optional[RegistryEntry]: 3
List[RegistryEntry]: 3
Iterable[AreaEntry]: 3
'StoredState': 3
List[StoredState]: 3
aiohttp.BaseConnector: 3
Scalar: 3
networkx.Graph: 3
Optional[requests.Response]: 3
typing.IO: 3
hints.Int: 3
NotebookNode: 3
RequestHandler: 3
Iterator[bytes]: 3
data_types.ExecutionDecision: 3
Set[Text]: 3
Dict[(Text, List[Artifact])]: 3
types.Channel: 3
List[deephol_pb2.Tactic]: 3
Tuple[(List[Text], List[Text])]: 3
proof_assistant_pb2.Theorem: 3
_PartialNLStats: 3
_PartialTimeStats: 3
_PartialImageStats: 3
_PartitionedStatisticsAnalyzerAccumulator: 3
extractor.Extractor: 3
evaluator.Evaluator: 3
List[types.Extracts]: 3
evaluator.Evaluation: 3
'Mod': 3
'Game': 3
addon.File: 3
Generator[(Dict[(str, Any)], None, None)]: 3
'ValidatorCallable': 3
Pattern[str]: 3
'Any': 3
'DataclassType': 3
List[Post]: 3
List['Node']: 3
Send: 3
Union[(str, List[str])]: 3
Optional[pd.DataFrame]: 3
pd.Index: 3
tornado.web.Application: 3
(lambda a, c: (a == c)): 3
List[pathlib.Path]: 3
repobase.Repository: 3
typing.List[typing.Tuple[(str, str)]]: 3
'FakeEdenFS': 3
ExpectedFileBase: 3
_TConfigValue: 3
List[ProcessID]: 3
Output: 3
ProblemSeverity: 3
(str, str, str): 3
KazooClient: 3
Input: 3
'WaterButlerPath': 3
'None': 3
asyncio.coroutine: 3
Optional[U]: 3
Dict[(str, Project)]: 3
Tuple[(couchbaseConstants.PUMP_ERROR, Optional[pump.Batch])]: 3
torch.Size: 3
'Message': 3
Collection: 3
slice: 3
Tuple[str]: 3
'Device': 3
HookValue: 3
Base: 3
HttpRequest: 3
Class: 3
Compiler: 3
[dict]: 3
'Builder': 3
(list, list): 3
wrappers.MessageType: 3
LeagueEntries: 3
Union[(None, str)]: 3
SummonerSpell: 3
Queue: 3
'Patch': 3
List[Image]: 3
NextStateType: 3
Iterator[nodes.Node]: 3
Tuple[(int, dict)]: 3
Tuple[(pd.DataFrame, List[Text])]: 3
Currency: 3
Tuple[(str, ParamDictType)]: 3
FuncType: 3
SpannerApi: 3
SpannerAdminApi: 3
Tuple[tf.Tensor]: 3
List[P]: 3
XarrayObject: 3
Table: 3
np.datetime64: 3
TYPE_WSGI_APP_RESULT: 3
Optional[arrow.Arrow]: 3
Tuple[(Any, bool)]: 3
Optional[datetime.date]: 3
'Processor': 3
List[Index]: 3
NlprpError: 3
AbstractSet[str]: 3
List[Dict[(str, Union[(str, Dict[(str, str)])])]]: 3
match.Match: 3
wrappers.Response: 3
Github: 3
List[Deck]: 3
DeckType: 3
Issue: 3
Project: 3
Optional[Container]: 3
DecklistType: 3
Optional[List[Dict[(str, Any)]]]: 3
SearchResult: 3
Term: 3
List[WordFormOut]: 3
'Channel': 3
List[Dict[(str, Optional[str])]]: 3
ViewFuncT: 3
Optional[Stream]: 3
Attachment: 3
Callable[(..., ReturnT)]: 3
EmailMultiAlternatives: 3
FuncT: 3
'Logger': 3
Variant: 3
typing.Counter[BaseEntity]: 3
Union[(None, int, str)]: 3
Optional[Citation]: 3
Set[Tuple[(BaseEntity, BaseEntity)]]: 3
SetOfNodePairs: 3
DiGraph: 3
ConcordanceResult: 3
Effect: 3
Optional[Tuple[(BaseEntity, str, bool, bool, BaseEntity)]]: 3
Iterable[Tuple]: 3
Property: 3
ExitCode: 3
Revision: 3
Optional[Document]: 3
Optional[Batch]: 3
UserState: 3
Generator[(Event, None, None)]: 3
Rule: 3
nd.array: 3
typing.List[dict]: 3
Optional[PointOptimizationSummary]: 3
devices.Device: 3
LogicalMapping: 3
Optional[protocols.CircuitDiagramInfo]: 3
'Timestamp': 3
'NotImplementedOperation': 3
_STATE: 3
Optional[circuits.PointOptimizationSummary]: 3
'raw_types.Operation': 3
Union[(np.ndarray, None, NotImplementedType)]: 3
'PauliSum': 3
'ParallelGateOperation': 3
'Pauli': 3
Union[(None, NotImplementedType, str)]: 3
Sequence['cirq.OP_TREE']: 3
List['GridQubit']: 3
Iterable[sympy.Symbol]: 3
prepared_env.PreparedEnv: 3
TextureType: 3
Optional[Mapping[(str, Any)]]: 3
Collection[str]: 3
FormData: 3
(int, int, int): 3
common.Result: 3
AbstractResource: 3
_AppSignal: 3
'Application': 3
(str, ReadError): 3
QStandardItem: 3
QQuickItem: 3
List[Entry]: 3
TopicListingParser: 3
Tuple[(Topic, QuerySet)]: 3
Union[(HttpResponse, DjangoHttpResponsePermanentRedirect)]: 3
[[str]]: 3
master.Master: 3
Cell: 3
TSerializable: 3
Optional[AnyStr]: 3
TViewResult: 3
'UdpTransport': 3
'Interpreter': 3
Policy: 3
Grammar: 3
ListNodeItem: 3
Edge: 3
KeyValueStore: 3
Union[(bytes, None)]: 3
Union[(dict, list)]: 3
Union[(tuple, None)]: 3
HTML: 3
'Subsystem': 3
'ReadWriteLock': 3
Params: 3
ResponseNo: 3
MessageT: 3
EnvelopeStructure: 3
BodyStructure: 3
Iterable[ListEntry]: 3
MailboxSet: 3
FilterSet: 3
_UDT: 3
Iterable[_Parts]: 3
'Writeable': 3
web.Application: 3
[xml.XMLElement]: 3
Dict[(str, User)]: 3
Optional[discord.Guild]: 3
Optional[discord.TextChannel]: 3
Tuple[(Dict, List)]: 3
AbstractVarsQuerySet: 3
git.Repo: 3
Tuple[(Path, bool)]: 3
Tuple[(np.ndarray, np.ndarray, np.ndarray)]: 3
Folder: 3
Locale: 3
Changes: 3
'SymbolMap': 3
Dimension: 3
'Filter': 3
SerializableType: 3
Optional[Tuple[(str, int, bool)]]: 3
Tuple[(bool, Optional[DenyReason])]: 3
AclStatus: 3
F: 3
'SupportStatus': 3
TaskDefinition: 3
Iterable[compatibility_store.CompatibilityResult]: 3
Worker: 3
io.TestIO: 3
NearestNeighbor: 3
Seq: 3
Alert: 3
Optional['User']: 3
'WriteTransaction': 3
'SharedSessionSecret': 3
Elasticsearch: 3
Participant: 3
'AbstractCall': 3
'AbstractInvocation': 3
'AbstractRegistration': 3
'AbstractPublisher': 3
'AbstractSubscription': 3
ScryfallDataSet: 3
ScryfallCardCount: 3
Tuple[(str, int, str)]: 3
MagicCollection: 3
Callable[([int], int)]: 3
ControlFlowGraph: 3
Dict[(Union[(astroid.FunctionDef, astroid.Module)], ControlFlowGraph)]: 3
_Status: 3
Tuple[(List[int], int)]: 3
webelem.JsValueType: 3
Unit(''): 3
Unit('K'): 3
Unit('dB'): 3
Union[(int, type(None))]: 3
Tuple[(str, str, bool)]: 3
Tuple[(int, str, str)]: 3
Replacement: 3
Expression: 3
KeyValueStateStore[(KT, VT)]: 3
Tuple[(bytes, str)]: 3
x509.CertificateSigningRequest: 3
VPP: 3
rsa.RSAPrivateKeyWithSerialization: 3
Union[(None, dict)]: 3
'Account': 3
PycksonModel: 3
GlobalStack: 3
ExtruderStack: 3
Optional['UserProfile']: 3
'AuthenticationResponse': 3
List['MachineAction']: 3
List[SceneNode]: 3
QNetworkRequest: 3
Union[(SceneNode, List[SceneNode])]: 3
Optional[Vector]: 3
'AxisAlignedBox': 3
Optional['SceneNode']: 3
Optional[MeshData]: 3
SettingDefinition: 3
'Jar': 3
Optional[List]: 3
AICommand: 3
'Identity': 3
'IO': 3
'Either': 3
AsyncObservable[T2]: 3
Callable[([AsyncObservable[T]], AsyncObservable[T])]: 3
ListMeasure: 3
AbsBaseGroup: 3
Iterator['BangumiItem']: 3
Iterable[VideoMetadata]: 3
PreparedVideoInfo: 3
List[ExecutionResult]: 3
Set[ModelPart]: 3
MultilayerPerceptron: 3
Callable[([List[str]], Iterable[str])]: 3
Dict[(Any, Callable)]: 3
ClassSymbol: 3
List[BeamSearchRunner]: 3
AttentionLoopStateTA: 3
QGroupBox: 3
QSize: 3
'Punkt': 3
'Vektor': 3
Iterator[Batch]: 3
cx.Batch: 3
Web3: 3
Dict[(str, numpy.ndarray)]: 3
Dict[(int, List[Tuple[(int, Any, Any, Any, List[int])]])]: 3
torch.FloatTensor: 3
T1: 3
Tuple[(bool, Opt[str])]: 3
Instruction: 3
Method: 3
Dict[(str, Union[(int, str)])]: 3
Tuple[(int, bytes)]: 3
List[CauseAction]: 3
Tuple[(List[Dict], List[Dict])]: 3
Sequence[int]: 3
Sequence[Instruction]: 3
List[Callable]: 3
C: 3
List[Bool]: 3
snug.Request: 3
discord.Guild: 3
Dict[(str, List[Question])]: 3
Dict[(str, List[Dict])]: 3
Result[(str, str)]: 3
Tuple[(tf.Tensor, AttentionLoopState)]: 3
(scoped_session or Session): 3
typing.List[telemetry_pb2.ModelEpochTelemetry]: 3
typing.List[int]: 3
typing.Optional[pathlib.Path]: 3
typing.Optional[datetime.datetime]: 3
Optional[timedelta]: 3
Optional[DataSource]: 3
nn.Sequential: 3
Rank0Tensor: 3
nn.Module: 3
DataBunch: 3
Optional[plt.Figure]: 3
'.game.Game': 3
ErrorResponse: 3
OpenAPISchema: 3
V: 3
_Value: 3
Snake: 3
RepositoryMetadata: 3
'SourceVector': 3
Iterable[Sentence]: 3
PurePath: 3
UserGroup: 3
List[UserGroup]: 3
ObjectId: 3
Optional[ObjectId]: 3
ImmutableDictEntity: 3
CodeType: 3
'finders.BaseSketchFinder': 3
'context.BaseSketchContext': 3
BlockStorage: 3
'SketchRuntime': 3
List[EmojiChar]: 3
URIRef: 3
List[LanguageName]: 3
System: 3
urllib.request.OpenerDirector: 3
'typing.Union[bool, NotImplemented]': 3
typing.Iterator[typing.Tuple[(str, str)]]: 3
MsgRouter.message_route: 3
Iterable[django.core.files.uploadedfile.UploadedFile]: 3
Optional[AbstractEndpoint]: 3
T.Callable: 3
List[WebElement]: 3
NEMFile: 3
'ManifestConfig': 3
BlockUID: 3
Optional[Event]: 3
Optional[entity.Entity]: 3
'IOTree': 3
Bounds: 3
List[V]: 3
SMTCommand_: 3
Iterable[Action]: 3
LayoutObject: 3
Quantity: 3
Tuple[(Callable, Callable)]: 3
Pipe: 3
Trampoline: 3
Recorded: 3
Udict: 3
Tf: 3
'lib.packet.scion_addr.ISD_AS': 3
Set[Edge]: 3
'CharacterLattice': 3
IntermineResult: 3
AuthenticationContinuation: 3
AbstractSet[PKey]: 3
Union[(dict, int, float, str)]: 3
OrderedSet: 3
Tuple[(bytes, Optional[str])]: 3
CharTrie: 3
HTTPFound: 3
Tuple[(str, Optional[datetime])]: 3
Iterable[ImageManifest]: 3
ClientConfig: 3
'Optional[Client]': 3
'List[str]': 3
TFTPPathAndComponents: 3
(str, None): 3
SectionProxy: 3
ImportResult: 3
'(x y -- n)': 3
'(path -- path)': 3
Object: 3
DB: 3
Company: 3
Optional[Task]: 3
Optional[OAuthToken]: 3
LucidModel: 3
Tuple[(np.ndarray, ...)]: 3
L1AProcessingData: 3
Function: 3
[typing.BinaryIO, str, datetime.datetime]: 3
BinaryIO: 3
Tuple[(Variable, State)]: 3
Tuple[(List[Variable], State)]: 3
LIST_3D: 3
ActorCriticNetwork: 3
Union[(None, SingleCheckpoint)]: 3
SaverCollection: 3
(ActionType, List[float]): 3
Tuple[(List[LevelManager], List[Environment])]: 3
List[Tuple[(nd_sym_type, str)]]: 3
Union[(None, Transition)]: 3
typing.Iterator[typing.Dict[(str, str)]]: 3
typing.List[typing.Dict[(str, str)]]: 3
typing.Optional[typing.Tuple[(str, str)]]: 3
application_pb2.ResumeTips: 3
'scoring_test._Persona': 3
(int, None): 3
DfLibName: 3
Optional[DeepDispatcherResponse]: 3
(MetarData, Units): 3
socket.SocketType: 3
List[psutil.Process]: 3
PartySetting: 3
Dict[(BrandID, int)]: 3
Optional[NumberSequence]: 3
Sequence[DbArticle]: 3
ImageType: 3
Optional[Token]: 3
DbUser: 3
Optional[DbUser]: 3
BrandSetting: 3
'Scope': 3
Dict[(Role, Set[Permission])]: 3
Optional[Version]: 3
TicketEvent: 3
Optional[DbTicket]: 3
SiteSetting: 3
Site: 3
Iterator[List[Package]]: 3
PackageMaker: 3
NormalizerResult: 3
Tuple[(str, Tuple[(int, int)])]: 3
OID: 3
SignedTransaction: 3
Classroom: 3
List[Building]: 3
(Entity, 'Parser'): 3
Optional['Entity']: 3
List['Entity']: 3
Optional[Union[(List[Union[(int, str, float, bool)]], Union[(int, str, float, bool)], List['Entity'])]]: 3
Optional[asyncio.Future]: 3
APIResult: 3
Callable[(..., RT)]: 3
catalog.Catalog: 3
BodyState: 3
Iterator[BodyState]: 3
Mapping[(UUID, Permission)]: 3
objects.PartialUser: 3
'PaginatedListProxy[objects.PartialUser]': 3
List[objects.PartialUser]: 3
List[SimResult]: 3
CoreConfig: 3
'ExportDialog': 3
typing.Iterator[ExtensionInfo]: 3
'IRTLSContext': 3
Tuple[(str, List[dict])]: 3
Union[(str, Tuple[(Node, str)])]: 3
DNSQueryResult: 3
Optional[mx.nd.NDArray]: 3
mx.nd.NDArray: 3
'test::Item[]': 3
Optional[Resource]: 3
Sequence[ResourceClass]: 3
Sequence[ObjectType]: 3
List[AnalysedGame]: 3
Opt[AnalysedGame]: 3
Opt[Player]: 3
PublishEndpoint: 3
List[DebianVersion]: 3
Dict[(str, Type)]: 3
I: 3
List[CommonSubSeq[S]]: 3
PrivateKey: 3
ChainID: 3
Iterator[Port]: 3
TokenAddress: 3
Optional[Schema]: 3
AsyncResult: 3
List[BlockchainEvent]: 3
List[AbstractTrade]: 3
List[Order]: 3
StepOutput: 3
Optional[discord.Member]: 3
(int or None): 3
NecroUser: 3
MatchInfo: 3
Optional[Job]: 3
ConfigObject: 3
'exposed.ExposedProject': 3
StepTestRunResult: 3
STEP_DATA: 3
ECDS: 3
'PositionalLabel': 3
ConsoleOutputSegment: 3
SurveyJob: 3
TibrvError: 3
(tibrv_status, tibrvEvent): 3
Certificate: 3
PILImage.Image: 3
List[Dormitory]: 3
Optional[Dormitory]: 3
vimba_c.VmbFeatureInfo: 3
StoppableQueue: 3
Assembly: 3
Source.Id: 3
HasBlog.HasAccess: 3
types.GeneratorType: 3
List[Snapshot]: 3
NewSnapshotIdentifier: 3
SnapshotStatus: 3
Iterable[AudioSourceInfo]: 3
AudioFileParams: 3
typing.List[typing.Tuple[(bytes, str, int)]]: 3
List[Type[Plugin]]: 3
NetworkStatus: 3
ModelBase: 3
Union[(str, Dict)]: 3
Optional['CodeReference']: 3
RefModel: 3
Set[RecipientSpec]: 3
RegistryContextSpec: 3
List[WirelessAccessPoint]: 3
List[JobConfig]: 3
list(): 3
BlockVisibility: 3
collections.Iterable: 3
'DataArray': 3
Set[Hashable]: 3
Gtk.ResponseType: 3
Tier: 3
'ParameterGroup': 3
ParameterGroup: 3
typing.Union[(matchzoo.DataPack, tuple)]: 3
keras.layers.Layer: 3
'mz.DataPack': 3
IndexDefinition: 3
typing.List[Timer]: 3
List[Tuple[(str, int, Callable)]]: 3
Union[(IRCResponse, List[IRCResponse])]: 3
ReturnTuple: 3
Header: 3
GoogleCredentials: 3
typing.Optional[SessionRequest]: 3
SessionInformation: 3
typing.Iterable[DirectoryListEntry]: 3
typing.List[DirectoryListEntry]: 3
'Union[Node|None]': 3
'List[Node]': 3
Relation: 3
Sequence[TickData]: 3
Sequence[BarData]: 3
QtGui.QPicture: 3
QtCore.QRectF: 3
BarData: 3
Optional['BarData']: 3
Optional['TickData']: 3
ResultGenerator: 3
(LTS or None): 3
Spec: 3
cmd2.plugin.PostparsingData: 3
'TestResult1': 3
Sequence[Union[(int, str)]]: 3
Scene: 3
Type[Effect]: 3
Optional[ReportModel]: 3
BanModel: 3
List[PageModel]: 3
'Hardware': 3
ArrayType: 3
[Branch, Tag]: 3
'PluginInfo': 3
StorageBase: 3
'md_session.Session': 2
'Column': 2
'OperatorResponse': 2
etree._Element: 2
Awaitable[BytesIO]: 2
'dt_channel.Channel': 2
'dt_message.Message': 2
'typing.Tuple[dt_message.Message, dt_message.Message]': 2
'SearchResults': 2
'typing.Union[dt_channel.Channel, None]': 2
'dt_role.Role': 2
property: 2
Generator[(int, None, int)]: 2
'DriverPlatformInterface': 2
Optional[MongoDB]: 2
Optional[Slack]: 2
distutils.version.LooseVersion: 2
HTTPConnection: 2
models.CharField: 2
MessageLog: 2
Iterable[IPAddress]: 2
Course: 2
(dict, np.ndarray, int): 2
(int, dict): 2
Union[(bool, int)]: 2
model.UserToken: 2
Tuple[(model.Base, Callable[([model.Base], Any)])]: 2
model.Base: 2
elasticsearch.Elasticsearch: 2
Optional[model.TagCategory]: 2
Optional[Card]: 2
T.Optional[Path]: 2
T.Optional[AssEvent]: 2
configargparse.Namespace: 2
List[_ThirdPartyTag]: 2
Dict[(int, Tag)]: 2
Optional[AddressInfo]: 2
Iterable[AddressInfo]: 2
DataEventDispatcher: 2
ListingResponse: 2
'Limiter': 2
CALLABLE_T: 2
Optional[PipelineExecution]: 2
MarkDecorator: 2
'CompareTask': 2
DiffItem: 2
'DiffHead': 2
HTTPHeaders: 2
Dict[(str, List[bytes])]: 2
'Generator[Any, Any, List[Tuple[int, Any]]]': 2
Dict[(str, object)]: 2
'ScratchDir': 2
Iterable[Tuple[(str, int, int)]]: 2
Type[Streamer]: 2
bpy.types.GPencilLayer: 2
seproxer_enums.ResultLevel: 2
queue.Queue: 2
t.Tuple[(set, set, set)]: 2
models.Volume: 2
Iterator[models.Volume]: 2
List[models.Environment]: 2
Verbosity: 2
'[str]': 2
base_handler.BaseHandler: 2
component_spec._PropertyDictWrapper: 2
Artifact: 2
schema_pb2.Schema: 2
proof_assistant_pb2.TheoremDatabase: 2
THM_EMB_TYPE: 2
STATE_ENC_TYPE: 2
BATCH_GOAL_EMB_TYPE: 2
BATCH_THM_EMB_TYPE: 2
Dict[(Text, tf.train.Feature)]: 2
Dict[(NodeID, int)]: 2
'FeaturePath': 2
Iterable[types.SlicedTable]: 2
statistics_pb2.Histogram: 2
Optional[types.FeatureNameStatisticsType]: 2
Set[types.FeaturePath]: 2
Dict[(types.FeaturePath, Dict[(Text, float)])]: 2
CrossFeatureStatsGeneratorAccumulator: 2
Dict[(types.FeaturePath, _ValueCounts)]: 2
List[Tuple[(slicer.SliceKeyType, Any)]]: 2
List[Dict[(Text, Union[(Dict[(Text, Any)], Text)])]]: 2
types.FeaturesPredictionsLabels: 2
Generator[(types.Extracts, None, None)]: 2
Generator[(Tuple[(slicer.SliceKeyType, Dict[(Text, Any)])], None, None)]: 2
types.Extracts: 2
'Authorization': 2
'File': 2
Callable[([Any], T)]: 2
curse.Game: 2
Tuple[(File, dict, Sequence)]: 2
curse.Database: 2
addon.Mod: 2
responses.RequestsMock: 2
Set[Any]: 2
'Number': 2
'StrBytes': 2
Callable[([T], T)]: 2
typing.List[ValidationWarning]: 2
List[Point]: 2
(None or int): 2
Dict[('supriya.nonrealtime.Node', Tuple['supriya.nonrealtime.Node'])]: 2
DeviceContainer: 2
Synth: 2
TrackContainer: 2
Transport: 2
anndata.AnnData: 2
Neighbors: 2
Dict[(str, List[Any])]: 2
fpm.relguard((lambda a, c: (a == c))): 2
SystemdService: 2
typing.Union[(pathlib.Path, OSError)]: 2
HealthStatus: 2
eden.thrift.EdenClient: 2
Dict[(str, bytes)]: 2
hgrepo.HgRepository: 2
'LinuxCgroup': 2
pathlib.PosixPath: 2
typing.Iterator[pathlib.Path]: 2
'MdvHeader': 2
'InodeMetadataV0': 2
Optional[ExpectedFileBase]: 2
ExpectedFile: 2
ExpectedSymlink: 2
ExpectedSocket: 2
_ExpectedFile: 2
argparse._SubParsersAction: 2
Callable[([Type[Subcmd]], Type[Subcmd])]: 2
Tuple[(doctor.ProblemFixer, str)]: 2
Optional[eden_ttypes.ScmStatus]: 2
typing.Iterator[None]: 2
EmailMessage: 2
typing.AbstractSet: 2
AbsoluteUrl: 2
Submission: 2
LazyI18nString: 2
List[Dict[(str, int)]]: 2
Dict[(int, None)]: 2
Union[(Length, None)]: 2
(paramiko.Transport or None): 2
Result[Output]: 2
Callable[(..., A)]: 2
oechem.OEMol: 2
'WaterButlerPathPart': 2
List[Interval]: 2
Generator[(CoroutineMock, Any, None)]: 2
Sequence[HeosSource]: 2
'MultiDict[str]': 2
Coroutine[(Any, Any, Any)]: 2
FanInfo: 2
Optional[FanState]: 2
CameraInfo: 2
Optional[CameraState]: 2
LightInfo: 2
Optional[LightState]: 2
CoverInfo: 2
Optional[CoverState]: 2
BinarySensorInfo: 2
Optional[BinarySensorState]: 2
ClimateInfo: 2
Optional[ClimateState]: 2
SwitchInfo: 2
Optional[SwitchState]: 2
SensorInfo: 2
Optional[SensorState]: 2
List[GoogleEntity]: 2
alexa_config.AlexaConfig: 2
google_config.CloudGoogleConfig: 2
SmartDevices: 2
NotificationLightChannel: 2
'BMWConnectedDriveAccount': 2
Callable[([ConfigType, bool], Callable[(..., bool)])]: 2
Optional[State]: 2
_SlotsType: 2
'IntentResponse': 2
Dict[(str, Dict[(str, Dict[(str, Any)])])]: 2
perm_mdl.AbstractPermissions: 2
PolicyType: 2
CategoryType: 2
Callable[([str, str], Optional[bool])]: 2
List[IPNetwork]: 2
Dict[(IPNetwork, Any)]: 2
Credentials: 2
HydraDoc: 2
Union[(Response, None)]: 2
scoped_session: 2
Tuple[(str, List[IriTemplateMapping])]: 2
Tuple[(float, ...)]: 2
Callable[([List, PandasDataFrame], None)]: 2
CollectionsOrderedDict: 2
NumpyNdarray: 2
Tuple[(str, str, ViewQuery)]: 2
Union[(float, None)]: 2
Bucket: 2
Iterator[Tuple[(str, dict)]]: 2
Key: 2
Tuple[(couchbaseConstants.PUMP_ERROR, Dict[(str, Any)])]: 2
Tuple[(couchbaseConstants.PUMP_ERROR, Optional[str])]: 2
Tuple[(couchbaseConstants.PUMP_ERROR, Optional[Dict[(str, Any)]])]: 2
BaseParser: 2
torch.nn.Module: 2
'Timer': 2
Flag: 2
ColorTuple: 2
ImageBuilderResult: 2
Positions: 2
StagedAjaxFile: 2
'Tuple[Foo, List[Enum], Any]': 2
'FooBar': 2
List[SingleConditionSpec]: 2
(Package or None): 2
LocalCache: 2
GlobalProperties: 2
Dep: 2
'EnotConfig': 2
(str, (str or None), (list or None), bool): 2
(list or None): 2
'asyncio.Future[bool]': 2
'SSLContext': 2
Callable[([Request], Awaitable[StreamResponse])]: 2
Callable[([Request], Awaitable[None])]: 2
Optional[HTTPException]: 2
Tuple[(Application, ...)]: 2
Generator[(Any, None, StreamResponse)]: 2
Tuple[(str, List[KeyMethod])]: 2
Iterable[Tuple[(str, Callable[([BaseRequest, StreamResponse, float], str)])]]: 2
StaticDef: 2
AbstractRouteDef: 2
List[AbstractRouteDef]: 2
Iterator[AbstractRouteDef]: 2
Set[BaseSite]: 2
List[RequestHandler]: 2
OSError: 2
Union[(SSLContext, None, bool, 'Fingerprint')]: 2
_Func: 2
'CIMultiDict[str]': 2
SimpleNamespace: 2
descriptor_pb2.SourceCodeInfo.Location: 2
wrappers.Service: 2
Dict[(str, CodeGeneratorResponse.File)]: 2
'Metadata': 2
storage.Blob: 2
MasterLeague: 2
GrandmasterLeague: 2
ChallengerLeague: 2
FeaturedMatches: 2
CurrentMatch: 2
ChampionMasteries: 2
ChampionMastery: 2
Champions: 2
Runes: 2
SummonerSpells: 2
Items: 2
Maps: 2
ProfileIcons: 2
Realms: 2
ShardStatus: 2
LanguageStrings: 2
VerificationString: 2
ChampionRotation: 2
Map: 2
ProfileIcon: 2
DataPipeline: 2
Side: 2
'Team': 2
List[Participant]: 2
List[Team]: 2
'CassiopeiaObject': 2
SearchableLazyList: 2
(int, bytes, dict): 2
(Union[(dict, list, str, bytes)], dict): 2
ChampionMasteryDto: 2
Generator[(ChampionMasteryDto, None, None)]: 2
ChampionMasteryListDto: 2
Generator[(ChampionMasteryListDto, None, None)]: 2
ChampionMasteryScoreDto: 2
Generator[(ChampionMasteryScoreDto, None, None)]: 2
SummonerDto: 2
VerificationStringDto: 2
Generator[(VerificationStringDto, None, None)]: 2
CurrentGameInfoDto: 2
FeaturedGamesDto: 2
MatchDto: 2
Generator[(MatchDto, None, None)]: 2
MatchListDto: 2
Generator[(MatchListDto, None, None)]: 2
TimelineDto: 2
Generator[(TimelineDto, None, None)]: 2
LeagueEntriesDto: 2
LeagueSummonerEntriesDto: 2
LeagueDto: 2
ChallengerLeagueListDto: 2
Generator[(ChallengerLeagueListDto, None, None)]: 2
GrandmasterLeagueListDto: 2
Generator[(GrandmasterLeagueListDto, None, None)]: 2
MasterLeagueListDto: 2
Generator[(MasterLeagueListDto, None, None)]: 2
ShardStatusDto: 2
Generator[(ShardStatusDto, None, None)]: 2
ChampionRotationDto: 2
Generator[(ChampionRotationDto, None, None)]: 2
'RateLimiter': 2
Capture: 2
Union[(Match, None)]: 2
Iterator[SymbolNode]: 2
RouteResolved: 2
dm_env.TimeStep: 2
'Lazy[T, W]': 2
Union[('Maybe[U]', 'Maybe[None]')]: 2
'Left[T]': 2
GridDict: 2
Union[(List, Dict, int, str)]: 2
'URL': 2
Rating: 2
NextcloudRelease: 2
XY: 2
List[List[Tuple[(float, float)]]]: 2
Tuple[(ValueRange, ValueRange)]: 2
Tuple[(Optional[float], Optional[Tuple[(int, int)]])]: 2
'ValueRange': 2
CookieType: 2
MsmsSpectrum: 2
Iterator[SpectrumSpectrumMatch]: 2
List[UserConfigFile]: 2
QueryParams: 2
Decorator: 2
FeatureProvider: 2
'ToplevelWriter': 2
ir.Expr: 2
List[ir.VarReference]: 2
ir.TemplateSpecialization: 2
'PrecalculatedTextMeasurer': 2
List[RelationshipConstraint]: 2
List[Iterable[Any]]: 2
CallableReturn: 2
spanner_database.SpannerDatabase: 2
Optional[Callable[([], update.SchemaUpdate)]]: 2
api.SpannerAdminApi: 2
List[Set[int]]: 2
tensornetwork.Node: 2
tink_pb2.KeysetInfo: 2
KeysetHandle: 2
List[xarray.Dataset]: 2
Iterator[h5py.File]: 2
rocat.ref.BaseActorRef: 2
Iterable[Column]: 2
dt.date: 2
List[Tuple]: 2
typing.Optional[UndoableCommand]: 2
'Connection': 2
typing.Tuple[(typing.Optional[dict], bool)]: 2
StructuredModel.RecordModel: 2
'Player': 2
ProvisionedServiceSpec: 2
DeprovisionServiceSpec: 2
Callable[([FuncType], FuncType)]: 2
Generator[(List[Any], None, None)]: 2
'Pep249DatabaseCursorType': 2
List[Tuple[(Type, Any)]]: 2
Sequence[_DATABASE_ROW_TYPE]: 2
Optional[HttpResponse]: 2
Tuple[(Sequence[Sequence[Any]], Sequence[str])]: 2
Dialect: 2
Page: 2
Type[ChangeList]: 2
JsonArrayType: 2
Dict[(int, List[int])]: 2
Tuple[(str, int, Dict[(str, str)])]: 2
Tournament: 2
Union[(Tuple[(str, int)], Response)]: 2
PriceListType: 2
Optional[PriceDataType]: 2
List[Competition]: 2
deck.Deck: 2
Tuple[(int, List[str], List[str])]: 2
datetime.tzinfo: 2
Optional[List[Any]]: 2
Optional[Union[(str, List[str], int, float)]]: 2
List[SetInfoType]: 2
Tuple[(Sequence[Card], Sequence[Card])]: 2
[Gateway]: 2
Manufacturer: 2
Tuple[(Markup, ClassificationResult)]: 2
Tuple[(str, int, int, bool)]: 2
Tuple[(str, int, int)]: 2
List[List[WordFormOut]]: 2
DecisionManager: 2
List[Sessions]: 2
'Project': 2
ExtractedMetadata: 2
Dict[(str, Union[(str, List[str])])]: 2
'Step': 2
List['Step']: 2
'GlobalState': 2
Extension: 2
Dict[(str, Union[(List[str], str)])]: 2
BasePage: 2
Tuple[(Remote, Head)]: 2
TagReference: 2
Generator[(Request, None, None)]: 2
List[Tuple[(str, str, bool)]]: 2
List[Dict[(str, Dict[(str, str)])]]: 2
List[Session]: 2
Dict[(str, UserProfile)]: 2
Tuple[(Recipient, Optional[Subscription])]: 2
DefaultStreamGroup: 2
'AbstractEnum': 2
Dict[(int, List[str])]: 2
ahocorasick.Automaton: 2
HttpResponseNotAllowed: 2
Dict[(int, Dict[(str, str)])]: 2
pika.ConnectionParameters: 2
SimpleQueueClient: 2
Dict[(int, List[Tuple[(Subscription, Stream)]])]: 2
Callable[([FuncT], FuncT)]: 2
CursorObj: 2
TimeTrackingCursor: 2
sourcemap.SourceMapDecoder: 2
Match[str]: 2
APICodeExamplesGenerator: 2
BaseHandler: 2
FencedCodeExtension: 2
Callable[(..., str)]: 2
Optional['ClientDescriptor']: 2
Callable[([ViewFuncT], ViewFuncT)]: 2
AdminNotifyHandler: 2
Iterator[logging.Logger]: 2
Tuple[(ZerverFieldsT, List[ZerverFieldsT], Dict[(str, int)])]: 2
Tuple[(List[ZerverFieldsT], List[ZerverFieldsT], Dict[(str, int)])]: 2
Tuple[(str, List[int], bool)]: 2
Tuple[(str, Optional[int])]: 2
Union[(None, Dict[(str, str)])]: 2
Generator[(Message, None, None)]: 2
Iterable[Sequence[str]]: 2
Tuple[(List[int], str)]: 2
Optional[SourceMap]: 2
FlaskClient: 2
List[Tuple[(str, bool)]]: 2
Dict[(str, Sat)]: 2
RecordStatusSat: 2
List[DvEntity]: 2
StandardRNN: 2
Optional[Mapping[(str, float)]]: 2
Sequence[pd.DataFrame]: 2
BaseEntity: 2
ListAbundance: 2
Iterable[Tuple[(str, Iterable[EdgeTuple])]]: 2
List[Tuple[(BaseEntity, int)]]: 2
Optional[BaseEntity]: 2
Mapping[(X, Mapping[(X, float)])]: 2
Iterable[Tuple[(BaseEntity, Dict, str)]]: 2
Set[Protein]: 2
Mapping[(str, typing.Counter[str])]: 2
Iterable[Tuple[(BaseEntity, BaseEntity)]]: 2
Counter[str]: 2
Mapping[(str, Mapping[(str, float)])]: 2
Mapping[(BaseEntity, int)]: 2
Mapping[(str, Set[BaseEntity])]: 2
Tuple[type(CanonicalBot)]: 2
Dict[(int, Tuple[type(CanonicalBot)])]: 2
Lemma: 2
Union[(Lemma, None)]: 2
Dict[(str, Union[(str, Dict[(str, str)])])]: 2
Dict[(ExtraCommandName, Callable)]: 2
EFBMsg: 2
List[HeaderCheckFailure]: 2
Iterator[Rule]: 2
Fund: 2
List[Dict[(str, Dict)]]: 2
Generator[(Column, None, None)]: 2
KeyedTensors: 2
grids.Grid: 2
(int, float, datetime.datetime.date, datetime.datetime.date): 2
typing.Tuple[(np.ndarray, np.ndarray)]: 2
Label: 2
Union[(dict, BOrderedDict)]: 2
List[Strand]: 2
Generator[('Strand', None, None)]: 2
List[Star]: 2
List[Tuple[(int, str, str)]]: 2
PreparedEnv: 2
doctest.TestResults: 2
List[check.Check]: 2
'Sweep': 2
List[study.TrialResult]: 2
List['cirq.TrialResult']: 2
UndirectedGraphDevice: 2
Tuple[(Hashable, ...)]: 2
Iterable[ops.Operation]: 2
'CircuitDag': 2
Duration: 2
Union[(circuits.Circuit, schedules.Schedule)]: 2
ops.GateOperation: 2
Iterator[MeasureInfo]: 2
Schedule: 2
'GoodGate': 2
Circuit: 2
List[ScheduledOperation]: 2
cirq.Circuit: 2
List[ops.SingleQubitGate]: 2
OP_TREE: 2
'SingleQubitMatrixGate': 2
'TwoQubitMatrixGate': 2
Union[(float, sympy.Symbol)]: 2
'PhasedXPowGate': 2
raw_types.Gate: 2
Sequence[Tuple[(float, Any)]]: 2
TSelf_PauliStringGateOperation: 2
Union[(CircuitDiagramInfo, TDefault)]: 2
Union[(np.ndarray, TDefault)]: 2
'cirq.Gate': 2
'cirq.Operation': 2
Union[(TDefault, 'cirq.Gate')]: 2
Union[(TDefault, 'cirq.Operation')]: 2
Union[(TDefault, 'cirq.Circuit')]: 2
Tuple[(numpy.ndarray, numpy.ndarray)]: 2
Dict[(str, 'SurfaceProp')]: 2
VarType: 2
'Material': 2
Callable[([Callable[(..., Awaitable[T])]], Callable[(..., Awaitable[T])])]: 2
Tuple[(str, Any)]: 2
Dict[(str, MesosTaskParameters)]: 2
Set[InstanceTuple]: 2
TimerProtocol: 2
GaugeProtocol: 2
CounterProtocol: 2
SignalByTrigger: 2
Tuple[(List[Any], Optional[str], Optional[datetime])]: 2
_Logger: 2
Args: 2
version_xso.Query: 2
typing.Iterable[typing.Coroutine]: 2
typing.Coroutine: 2
ConnectionState: 2
Dict[(bytes, bytes)]: 2
Union[(CloseReason, RsvBits)]: 2
Union[(bytes, CloseReason)]: 2
Union[(bytes, CloseReason, None)]: 2
Tuple[(RsvBits, bytes)]: 2
Tuple[(Optional[int], Optional[int])]: 2
UserSequence: 2
ty.Tuple[(str, dict)]: 2
ty.Optional[str]: 2
ty.Optional[dict]: 2
(str, List): 2
Tuple[(Dict[(str, str)], List[str])]: 2
threading.Event: 2
ChannelName: 2
ChannelState: 2
Process: 2
'TemplateString': 2
Alliance: 2
'AtomicCounter': 2
Dict[(str, Tuple[(str, int)])]: 2
Leaderboard: 2
QTextCharFormat: 2
UnitKey: 2
FileVersionResult: 2
'NistBeaconValue': 2
[int]: 2
CutSpec: 2
flow.Flow: 2
_BaseType: 2
typing.Optional[Binding]: 2
typing.Sequence[Binding]: 2
typing.List[urwid.Columns]: 2
typing.Optional[CommandBuffer]: 2
http.HTTPResponse: 2
typing.Optional[typing.Union[(str, int, float)]]: 2
ServerConnection: 2
multidict.MultiDictView: 2
Tuple[(List[TPairs], int)]: 2
typing.Sequence[Type]: 2
Optional[View]: 2
Unsupported: 2
httpclient.HTTPResponse: 2
Union[(HttpResponseRedirect, HttpResponse)]: 2
Union[(CashdeskPrinter, DummyPrinter)]: 2
BaseDocTemplate: 2
TransactionPosition: 2
Tuple[(User, Token)]: 2
Ed25519PublicPoint: 2
Ed25519Signature: 2
Tuple[(int, int, bytes)]: 2
Protocol: 2
ScopeMap: 2
'OrientedDNASegment': 2
'OrientedRead': 2
UserUttered: 2
'Agent': 2
Optional['Component']: 2
'MitieNLP': 2
'SpacyNLP': 2
'DucklingHTTPExtractor': 2
'EventChannel': 2
Optional['PikaProducer']: 2
Optional['FileProducer']: 2
Optional['KafkaProducer']: 2
List['Policy']: 2
KeysView[Text]: 2
List['InputChannel']: 2
Type['Policy']: 2
Type['TrackerFeaturizer']: 2
Dict[(Text, Dict[(Text, Text)])]: 2
'NaturalLanguageGenerator': 2
'MappingPolicy': 2
Optional[tf.ConfigProto]: 2
'Policy': 2
'MemoizationPolicy': 2
tf.keras.models.Sequential: 2
'KerasPolicy': 2
'LocationInfo': 2
TypeName: 2
reversed: 2
ListNodeItemIterator: 2
List[JSONAnnotator.Tag]: 2
KeyType: 2
Arbitrary.TYPE: 2
Awaitable[RetT]: 2
'_AsyncioEvent': 2
'_ThreadingEvent': 2
SequenceSet: 2
Optional[SSLContext]: 2
SASLAuth: 2
FilterCompilerInterface[FilterValueT]: 2
MessageContent: 2
AppendMessage: 2
FlagsKey: 2
Sequence[_socket.socket]: 2
'InheritedSockets': 2
Sequence[Tuple[(str, str)]]: 2
SelectedSet: 2
'_FileReadWith[_RT]': 2
_MFT: 2
_ST: 2
Maildir: 2
_Parts: 2
Tuple[('AuthenticateCommand', memoryview)]: 2
FetchRequirement: 2
memoryview: 2
Tuple[('ExtensionOptions', memoryview)]: 2
'SequenceSet': 2
FrozenSet[int]: 2
Tuple[(str, memoryview)]: 2
Sequence[_Lines]: 2
'MessageDecoder': 2
SearchCommand: 2
ParserMethod: 2
ParseResult: 2
'typing.NoReturn': 2
Notes: 2
navigation.NavigationEntry: 2
xml.XMLElement: 2
GroupQuerySet: 2
HostQuerySet: 2
ENV_VARS_TYPE: 2
Tuple[(tf.Tensor, ...)]: 2
Optional[BaseContent]: 2
Optional[Folder]: 2
'Lock': 2
_Element: 2
IO[str]: 2
Union[(str, Response)]: 2
Iterator[Tuple[(str, int)]]: 2
'LoginSession': 2
'Status': 2
PosixPath: 2
Optional[PosixPath]: 2
Tuple[(List[Any], List[Any])]: 2
Iterator[RequestContext]: 2
Optional[uuid.UUID]: 2
'Info': 2
QWebEngineScript: 2
List[TimedMessage]: 2
Handler: 2
Tuple[(bytes, int)]: 2
SymbolMap: 2
RootNode: 2
Results: 2
'Event[_Sender]': 2
Application[_T]: 2
Application[None]: 2
UIContent: 2
'NodeSequence': 2
'AnyNode': 2
'Dimension': 2
UIControl: 2
Optional[Buffer]: 2
Condition: 2
Generator[(None, str, None)]: 2
'HTML': 2
'Input': 2
xarray.DataArray: 2
'Serializer': 2
'Deserializer': 2
Callable[([Any, Any], None)]: 2
Optional[Iterable[JSONEncoder]]: 2
Type[Serializer]: 2
Sequence[PropertyMapping]: 2
_OpenStackId: 2
RunConfiguration: 2
ServiceResponse: 2
typing.Tuple[(int, int)]: 2
semantic_version.Version: 2
Optional[Tuple[(str, str, str)]]: 2
RESPONSE_FOR_RCT: 2
Optional[semantic_version.Version]: 2
Optional[List[Offer]]: 2
typing.Dict[(str, bool)]: 2
List[model.TaskPayment]: 2
model.TaskPayment: 2
Union[(_DenyAcl, _AllowAcl)]: 2
Dict[(str, Union[(str, dict)])]: 2
AcceptClientVerdict: 2
RuntimePayload: 2
ExtractedPackage: 2
DockerDirMapping: 2
'Hypervisor': 2
'EnvironmentsConfig': 2
ComputeTaskDef: 2
Optional[List[Tuple[(Actor, Any, VerificationResult)]]]: 2
List[tornado.web.URLSpec]: 2
(bool, list): 2
Mapping[(FrozenSet[package.Package], List[compatibility_store.CompatibilityResult])]: 2
requests.models.Response: 2
Tuple[(pd.DataFrame, pd.DataFrame, pd.DataFrame)]: 2
List[NearestNeighborResult]: 2
'ClusteringFeature': 2
AttentionSeq2Seq: 2
List[etree.Element]: 2
Tuple[(Response, int)]: 2
'Jwt': 2
Optional['ApiKey']: 2
List['ApiKey']: 2
List[Scope]: 2
Tuple[(Alert, str, str)]: 2
Optional[Match[str]]: 2
HmipConfig: 2
Friend: 2
Inbound: 2
Outbound: 2
Wavefunction: 2
GeneratorType: 2
AbstractConnection: 2
Optional[IRegistration]: 2
AbstractInvocation: 2
AbstractRegistration: 2
AbstractPublication: 2
AbstractSubscription: 2
Tuple[(Optional[int], Optional[str])]: 2
Optional[Tuple[(Any, ...)]]: 2
'Monad': 2
Failable: 2
Generator[(CFGBlock, None, None)]: 2
Generator[(CFGEdge, None, None)]: 2
'IProtoMessage': 2
typing.Optional['WebKitElement']: 2
typing.Optional[QRect]: 2
typing.List[QWebFrame]: 2
FileStore: 2
ChunkedFileStore: 2
{}: 2
Subscriber: 2
Callable[([Reducer], Reducer)]: 2
Unit('m'): 2
Unit('Hz'): 2
Unit('dBµV'): 2
Unit('F'): 2
Unit('J'): 2
List[Tuple[(str, ...)]]: 2
'XStream': 2
AbstractHlsOp: 2
Generator[(HWProcess, None, None)]: 2
HdlType: 2
Tuple[(List['HdlStatement'], bool)]: 2
'x': 2
's': 2
Union[(Expression, Sequence[Expression])]: 2
'Client': 2
Serializer[TSer]: 2
Deserializer[TDe]: 2
Serializer[T]: 2
Deserializer[T]: 2
VT: 2
StateStore[(KT, VT)]: 2
ValueStoreFactory[int]: 2
KeyValueStoreFactory[(KT, int)]: 2
keyinfo.KeyInfo: 2
unitgroup.Group: 2
typing.Tuple[str]: 2
Generator[(Flask, None, None)]: 2
Generator[(SQLAlchemy, None, None)]: 2
Generator[(scoped_session, None, None)]: 2
MDMClient: 2
DEP: 2
(rsa.RSAPrivateKey, x509.CertificateSigningRequest): 2
(rsa.RSAPrivateKey, x509.Certificate): 2
x509.Name: 2
apns2.APNSClient: 2
apns2.Response: 2
DEPProfileRemovals: 2
inventory_models.InstalledCertificate: 2
inventory_models.InstalledPayload: 2
inventory_models.InstalledProfile: 2
Union[(None, Type[Schema])]: 2
Callable[([Type[Schema]], Type[Schema])]: 2
models.SCEPPayload: 2
models.MDMPayload: 2
List[Schema]: 2
Organization: 2
SCEPConfig: 2
SCEPPayload: 2
Optional[Certificate]: 2
Tuple[(List[x509.Certificate], bytes)]: 2
'Flag': 2
List[Seqdiff]: 2
DateFormatter: 2
PycksonAttribute: 2
Mesh: 2
Optional['QObject']: 2
Optional['PrinterOutputModel']: 2
Optional['FirmwareUpdater']: 2
Optional[MaterialOutputModel]: 2
Optional['QualityNode']: 2
'CuraSceneNode': 2
Optional[GlobalStack]: 2
'InstanceContainer': 2
Dict[(str, 'ExtruderStack')]: 2
List['ExtruderStack']: 2
Optional['GlobalStack']: 2
Optional[Tuple[(List[str], List[str])]]: 2
ManualDeviceAdditionAttempt: 2
Dict[(str, LocalClusterOutputDevice)]: 2
Optional[FileWriter]: 2
Tuple[(int, Dict[(str, Any)])]: 2
ExtruderConfigurationModel: 2
Matrix: 2
Optional[SceneNode]: 2
MimeType: 2
Optional['OutputDevice']: 2
Optional['FileWriter']: 2
Optional[Camera]: 2
QFont: 2
robocup.Point: 2
robocup.Robot: 2
List[Position]: 2
RobotState: 2
List[Tuple[(Player, str, str, Role)]]: 2
Dict[(Role, Callable)]: 2
'Point2D': 2
OrderField: 2
Optional[BaseAction]: 2
'KeyValueJsonDb': 2
'KeyValueDb': 2
'Put': 2
Tuple[(Any, Log)]: 2
TT: 2
DaGroup: 2
'SolutionResults': 2
'List[Subtitle]': 2
List[models.Episode]: 2
List[FlowItem]: 2
List[contract.Instrument]: 2
TextImage: 2
(dict or str): 2
[str, bool, int]: 2
'Manager': 2
'_Q': 2
_Q: 2
'Reference': 2
InlineKeyboardMarkup: 2
List['Book']: 2
ImageNetSpec: 2
RNNSpec: 2
Callable[([], RNNCell)]: 2
TransformerLayer: 2
List[Tuple[(tf.Tensor, tf.Tensor)]]: 2
Set['ModelPart']: 2
Optional[Iterable]: 2
LogitsExecutable: 2
BeamSearchExecutable: 2
PerplexityExecutable: 2
MultiHeadLoopStateTA: 2
Tuple[(tf.Tensor, AttentionLoopStateTA)]: 2
Generator[(List[str], None, None)]: 2
Callable[([List[str]], List[str])]: 2
'str 0xNNNNNNNN': 2
List[DateTime]: 2
Date: 2
DateTime: 2
'Gruppe': 2
Z_plus: 2
'List[int]': 2
(Address, HexBytes): 2
Tuple[(int, bytes, bytes)]: 2
Deployment: 2
List[Routing]: 2
Routing: 2
List[URLPattern]: 2
Predictor: 2
predictors.SemanticRoleLabelerPredictor: 2
predictors.BidafPredictor: 2
predictors.DecomposableAttentionPredictor: 2
predictors.SentenceTaggerPredictor: 2
predictors.BiaffineDependencyParserPredictor: 2
Iterator[Field]: 2
Iterable[OntonotesSentence]: 2
Set[Type]: 2
'Predictor': 2
Dict[(int, List[StateType])]: 2
List[StateType]: 2
Dict[(int, List[torch.Tensor])]: 2
'GrammarBasedState': 2
'CoverageState': 2
PytorchSeq2SeqWrapper: 2
PytorchSeq2VecWrapper: 2
CellReference: 2
ConstantClass: 2
ClassFile: 2
_AttrValueType: 2
Optional['WebEventTarget']: 2
Tuple[(int, Optional[str])]: 2
Optional[Story]: 2
Iterator[Tuple[(int, bytes)]]: 2
Iterator[Story]: 2
List[FreeStyleProject]: 2
FreeStyleProject: 2
List[StringParameterDefinition]: 2
DiskSpaceMonitorDescriptorDiskSpace: 2
ExtensionClassImpl: 2
FreeStyleBuild: 2
spider.ActsSpider: 2
typing.Optional[ScraperResult]: 2
pubsub.Client: 2
storage.Storage: 2
QgsMapLayer: 2
NoteCollection: 2
List[NoteListItem]: 2
DictStrAny: 2
TProlog: 2
miniaudio.PlaybackCallbackGeneratorType: 2
Optional[Sample]: 2
IO[Any]: 2
'Direction': 2
miniaudio.AudioProducerType: 2
(float, float): 2
Sequence[type]: 2
Optional[PushType]: 2
Atom: 2
L: 2
List[L]: 2
List[List[BaseLayer]]: 2
BaseMedia: 2
List[Issue]: 2
KeysView: 2
List[StateAnnotation]: 2
Union[(int, BitVec)]: 2
z3.BitVecRef: 2
'Bool': 2
Optional[discord.Role]: 2
discord.Permissions: 2
Dict[(int, BonusQuestion)]: 2
List[Question]: 2
List[List[Tuple[(Page, float)]]]: 2
List[Partial]: 2
HistogramND: 2
LevelType: 2
HistogramBase: 2
'Iterable[str]': 2
workinfo.Work: 2
Union[(str, float, int)]: 2
List[tf.Operation]: 2
[WallpaperProvider]: 2
[TerminalProvider]: 2
List[model.ProductDisruption]: 2
List[model.RegionDisruption]: 2
EdgeClass: 2
AsyncIterable[Dict]: 2
model.AutonomousSystem: 2
Dict[(int, bool)]: 2
List[Polygon]: 2
GPX: 2
Feature: 2
List[LinestringEdge]: 2
('date', 'pollen_ct'): 2
Dict[(str, Dict[(str, dict)])]: 2
typing.Union[(str, typing.List[str])]: 2
'Instance': 2
typing.List[model_pb2.Sample]: 2
sampler_pb2.Sampler: 2
'AtomizerBase': 2
model_pb2.Model: 2
typing.Generator[(DataBatch, typing.Any, None)]: 2
PreprocessorFunction: 2
MockEngine: 2
Gen[(MdImageRef, None, None)]: 2
Generator[(Tuple[(str, Comment)], None, None)]: 2
List[TestFunctionMatch]: 2
Hook: 2
Hooks: 2
Tuple[(Sizes, Tensor, Hooks)]: 2
FilePathList: 2
Sequence[BeautifulSoup]: 2
Dict[(str, Union[(str, int, Resource)])]: 2
RouteMapping: 2
ResourceObject: 2
APIRequestFactory: 2
(int, Any): 2
Union[(Dict[(str, Any)], List[Dict[(str, Any)]])]: 2
List[Tuple[(str, str, str)]]: 2
CaseInsensitiveDict: 2
Player: 2
StringsDict: 2
_M: 2
Type[_VT]: 2
'ConverterField[_VT, _PT]': 2
Optional['RequestContext']: 2
Callable[([Any], _Value)]: 2
Callable[([_Value], Any)]: 2
List['DevicePair']: 2
Dict[(str, List['Device'])]: 2
List['Runtime']: 2
'Runtime': 2
List['DeviceType']: 2
'DeviceType': 2
'LocationFactory': 2
SourceFileInRepository: 2
'Insertion': 2
'Deletion': 2
'LanguageProxy': 2
FixEvent: 2
Iterator[Mistake]: 2
PurePosixPath: 2
github3.GitHub: 2
Iterable[TokenResult]: 2
List[Configuration]: 2
RemoteZulipServer: 2
ResultT: 2
Tuple[(List[Dict[(str, Any)]], List[Dict[(str, Any)]])]: 2
Tuple[(str, str, str, str)]: 2
Generator[(str, WebSocketClientConnection, None)]: 2
RealmEmoji: 2
List[datetime]: 2
ContainerResult: 2
typing.Dict[(str, int)]: 2
KeysView[str]: 2
ItemsView[(str, any)]: 2
FileType: 2
Optional[Party]: 2
'statements.Root': 2
'statements.Statement': 2
Callable[(..., Awaitable[str])]: 2
Lexer: 2
List[Description]: 2
Lattice: 2
Dict[(str, dict)]: 2
Optional[tuple]: 2
Optional[Embed]: 2
(str, bytes): 2
CustomArgumentParser: 2
wrap.Wrap: 2
typing.Optional[typing.Union[(str, typing.List[str])]]: 2
Optional[Awaitable]: 2
AsyncClient: 2
PrOpenedHookDetails: 2
OCSPResponse: 2
Article: 2
Mapping[(str, UploadPlugin)]: 2
Optimizer: 2
TransformerResult: 2
Optional['base_server.BaseServer']: 2
'base_network.BaseNetwork': 2
Tuple[(FilterFields, Footprints)]: 2
_T_Installed: 2
Union[(Tuple[(str, Any)], Tuple[(None, None)])]: 2
Tuple[(str, Dict[(str, str)])]: 2
Optional[E]: 2
Result[(T, E)]: 2
Tuple[(str, str, Mapping[(str, Dict)])]: 2
Optional[Group]: 2
tsrc.Workspace: 2
ProjectMergeRequest: 2
RPCMethod: 2
Tuple[(str, str, str, str, str)]: 2
Optional[Cable]: 2
Optional[List[Cable]]: 2
Membership: 2
BlockUIDType: 2
RevocationType: 2
IdentityType: 2
CertificationType: 2
MembershipType: 2
CRCPubkeyType: 2
openhab.items.Item: 2
typing.Callable[(..., typing.Any)]: 2
List[MacroStep]: 2
Statechart: 2
Builder: 2
Optional[light.Light]: 2
Optional[_light.Light]: 2
Optional[filetype.ImageFile]: 2
'Loop': 2
'Token': 2
'ComparisonSet': 2
Confirmation: 2
'GeneratedProtocolMessageType()': 2
XMLElement: 2
Tuple[(Dict[(str, SMTPResponse)], str)]: 2
Union[(List[str], str)]: 2
APIStatus: 2
PhonemeList: 2
SExprOrStr: 2
Iterator[Tuple[(T, T)]]: 2
'LedgerDict': 2
Optional[V]: 2
TDMap[K]: 2
SortOpApp: 2
StatementList: 2
'Statement': 2
'IfElse': 2
'LocalVarDec': 2
'FVRequirement': 2
'StateVarAssign': 2
Dict[(RuleParamId, int)]: 2
Iterator[EventRule]: 2
Iterable[Situation]: 2
SituationId: 2
'SimpleFnType': 2
List[ObjPath]: 2
ImportedRecord: 2
List[RelationDescription]: 2
Union[(bool, Tuple[(str, str)])]: 2
FileManager: 2
BCTOption: 2
TokenizerOption: 2
DendroOption: 2
SimilarityFrontEndOption: 2
Optional[RequestData]: 2
MatrixFrontEndOption: 2
List[list]: 2
Mapping[(str, Mapping)]: 2
Callable[([CommandType], CommandType)]: 2
MChannel: 2
'Preston': 2
[ResponseModuleConfig]: 2
operator: 2
'Member': 2
Dict[(str, Event)]: 2
typing.AbsoluteTime: 2
'CatchScheduler': 2
'ImmediateScheduler': 2
'TimeoutScheduler': 2
MockObserver: 2
Callable[([Observable], Union[(Observable, ConnectableObservable)])]: 2
Callable[([Observable], List[Observable])]: 2
E: 2
abjad.OrderedDict: 2
Transcript: 2
List['WiFiInterface']: 2
SiteConfig: 2
Num: 2
Iterator[Tf]: 2
List[Tf]: 2
'UsageStore': 2
'RangeState': 2
'WordSetState': 2
'AlphabetState': 2
'QuantityState': 2
VariableIdentifier: 2
'StrongLivenessState': 2
DSLContractSubclass: 2
CDLL: 2
SandboxMixin: 2
JudgeResult: 2
RuntimeContext: 2
ProblemMetadata: 2
GroupSet: 2
TxOut: 2
MutableTransaction: 2
PAParams: 2
Constants: 2
Tuple[(int, Dict)]: 2
{str: Quest}: 2
PluginManager: 2
CourseFactory: 2
TaskFactory: 2
WebAppSubmissionManager: 2
UserManager: 2
TemplateHelper: 2
GridFS: 2
LTIOutcomeManager: 2
Tuple[(List[Dict], Optional[str])]: 2
Tuple[(TwitchVideo, Path)]: 2
Column: 2
Iterable[Episode]: 2
Minio: 2
(Dict or str): 2
map: 2
conu.DockerContainer: 2
'xml.etree.ElementTree.Element': 2
SymbolType: 2
Problem: 2
Optional[Submission]: 2
onlinejudge.type.Submission: 2
AOJService: 2
bs4.Tag: 2
Dict[(bytes, ComplexIndexEntry)]: 2
ComplexIndexEntry: 2
RunnerConfig: 2
Exchange: 2
AzureTextStorage: 2
AccessInfo: 2
TarFile: 2
Iterable[Iterable[T]]: 2
Component: 2
sublime.Phantom: 2
'Tuple[int, int]': 2
'Dict[str, LanguageConfig]': 2
'List[ClientConfig]': 2
'ClientConfig': 2
'SignatureInformation': 2
'Session': 2
'Range': 2
AddressMap: 2
Mapping[(str, ResourcesResultType)]: 2
MotifBatch: 2
VerseRange: 2
ServiceManager: 2
TypedConfigParser: 2
ProgramParser: 2
Optional[ImportResult]: 2
'(turtle s -- turtle)': 2
'(turtle c i -- turtle)': 2
'( -- )': 2
'(sequence -- a)': 2
'(n n -- l)': 2
'( -- s)': 2
'(s1 -- l)': 2
'(url data -- response_object)': 2
'RuleLogging': 2
OAuthToken: 2
PageRevision: 2
BaseController: 2
InputData: 2
Dict[(str, List[dict])]: 2
typing.Iterator[Message]: 2
dt.timedelta: 2
Iterator[L1AProcessingData]: 2
L1bProductInspector: 2
'Workspace': 2
List[ModuleType]: 2
Dict[(str, Function)]: 2
Union[(Address, str)]: 2
HIDEvent: 2
CompanionInfo: 2
TargetDescription: 2
Optional[CompanionInfo]: 2
RunDAO: 2
GameDriver: 2
zipfile.ZipFile: 2
Iterator[Message]: 2
Tuple[(Variable, Dict[(str, Variable)], Variable)]: 2
corpora.Dictionary: 2
MusicVideo: 2
ImageSegment: 2
VideoSegment: 2
Segment: 2
'VideoSegment': 2
List[LIST_3D]: 2
Enumeration: 2
ExperiencesMemory: 2
ActorCriticNetworkDiscrete: 2
ActorCriticNetworkDiscreteCNN: 2
ActorCriticNetworkContinuous: 2
'VersionInfo': 2
Sequence['RestaurantsConfigEntry']: 2
SingleCheckpoint: 2
RunPhase: 2
BoxActionSpace: 2
Union[(None, EnvResponse)]: 2
Tuple[(float, List[float], float, list)]: 2
Loss: 2
typing.Dict[(str, typing.List[typing.Any])]: 2
typing.Iterator[_JobseekerCriteria]: 2
typing.Dict[(str, typing.Union[(str, int)])]: 2
models.Response: 2
use_case_pb2.UseCases: 2
use_case_pb2.UseCaseDistribution: 2
typing.KeysView[str]: 2
typing.Optional[geo_pb2.FrenchCity]: 2
_SentMessage: 2
_JsonDict: 2
reorient_jobbing_pb2.JobbingReorientJobs: 2
skill_pb2.JobSkills: 2
seasonal_jobbing_pb2.MonthlySeasonalJobbingStats: 2
reorient_to_close_pb2.ReorientCloseJobs: 2
typing.Iterator[_T]: 2
(list, datetime, datetime): 2
PIL.Image.Image: 2
Sequence[ScopedValue]: 2
Generator[(Component, None, None)]: 2
Tuple[(Dict[(int, Any)], Dict[(int, Any)], Dict[(int, Any)])]: 2
AbstractSet[ImageName]: 2
'Point3': 2
Optional[UnitTypeId]: 2
DispatcherResponse: 2
Optional[DecoratorResponse]: 2
sublime.Settings: 2
'Report': 2
PriorityQueue: 2
Union[(None, '_Node')]: 2
Union[(TreeNode, None)]: 2
Dict[(Vertex, Edge)]: 2
List[Vertex]: 2
SslConnection: 2
Type[Plugin]: 2
'TrustStoresRepository': 2
([sql_query_column_model_data.SQLColumnModelData], [sql_query_column_model_timestamp.SQLColumnModelTimestamp]): 2
[sql_query_column_model_timestamp.SQLColumnModelTimestamp]: 2
models.Model: 2
IStrategy: 2
tools.make_subplots: 2
Optional[Shop]: 2
List[Shop]: 2
Purpose: 2
ArticleNumber: 2
OrderNumber: 2
NumberSequence: 2
Sequence[OrderAction]: 2
Dict[(PaymentState, int)]: 2
OrderEvent: 2
Optional[DbOrder]: 2
Sequence[DbOrder]: 2
Dict[(ShopID, int)]: 2
PaymentState: 2
Optional[DbArticle]: 2
ArticleCompilation: 2
Range: 2
Optional[Category]: 2
Sequence[Category]: 2
Optional[DbPosting]: 2
Optional[DbTopic]: 2
Sequence[OrgaTeam]: 2
Optional[Membership]: 2
Sequence[Membership]: 2
'CurrentUser': 2
DbArea: 2
Sequence[DbSeat]: 2
Sequence[UserEvent]: 2
Badge: 2
Optional[Badge]: 2
Set[Badge]: 2
Dict[(UserID, Set[Badge])]: 2
BadgeAwarding: 2
Scope: 2
Set[UserID]: 2
Sequence[Permission]: 2
Optional[Channel]: 2
DbItemVersion: 2
Set[PartyID]: 2
TicketCategory: 2
TicketCode: 2
List[SiteSetting]: 2
SubscriptionState: 2
Iterator[DateTimeRange]: 2
Iterator[datetime]: 2
QueryManager: 2
RepositoryManager: 2
RepositoryProcessor: 2
PackageTransformer: 2
List[RepositoryMetadata]: 2
'AtomicDir': 2
'AtomicFile': 2
'StreamDeserializer': 2
Tuple[(str, None)]: 2
RulesetStatistics: 2
'Dimensions': 2
'Lightsd': 2
Generator[(Tuple[(Path, Dict)], None, None)]: 2
DatasetDoc: 2
'Window': 2
MaybePath: 2
Union[(Path, None)]: 2
LinearSegmentGroup: 2
ProjectTreeModel: 2
'VirtualBaseController': 2
Union[(FlightController, GravimeterController)]: 2
sa.Table: 2
typing.Tuple: 2
EventsSource: 2
ClassroomSource: 2
UserSource: 2
Scheduler: 2
Building: 2
List[SpiderEvent]: 2
Type(db.Model): 2
Optional[List[LaunchDescriptionEntity]]: 2
Optional[List['Action']]: 2
Tuple[(Text, List[SomeActionsType])]: 2
List[Tuple[(Text, Iterable['LaunchDescriptionEntity'])]]: 2
BaseEventHandler: 2
SomeSubstitutionsType: 2
'ExecuteProcess': 2
List[QoSEventHandler]: 2
datetime.time: 2
QAction: 2
Tuple[(State, Optional[str])]: 2
TaskInstance: 2
LogRecord: 2
models.Build: 2
'PaginatedListProxy[objects.Commit]': 2
'PaginatedListProxy[objects.Comment]': 2
objects.Milestone: 2
RateLimitDetail: 2
'objects.PaginatedListProxy[objects.Comment]': 2
'PaginatedListProxy[objects.Issue]': 2
FieldABC: 2
JSONPointer: 2
typing.MutableMapping: 2
'Delta': 2
List[SimAlgorithm]: 2
SimScore: 2
Set[ClassId]: 2
Tuple[(ICValue, ICValue, ICValue)]: 2
Dict[(AnnotationKey, InferenceValue)]: 2
ResultType: 2
Person: 2
VerifyKey: 2
OrganizationID: 2
UserID: 2
DeviceName: 2
Tuple[(DeviceID, Pendulum, bytes)]: 2
CertifiedDeviceData: 2
CertifiedRevokedDeviceData: 2
CertifiedUserData: 2
CertifiedRealmRoleData: 2
WorkspaceEntry: 2
'WorkspaceEntry': 2
FileDescriptor: 2
LocalManifest: 2
Tuple[(Dict, str)]: 2
'QueueIterator': 2
typing.Sequence[usertypes.Backend]: 2
Tuple[(decimal.Decimal, decimal.Decimal)]: 2
Optional[SecretInfo]: 2
Type[IRBaseMappingGroup]: 2
IRCluster: 2
List[IRCluster]: 2
'ACResource': 2
Gtk.Box: 2
RunningJob: 2
'MessageListener': 2
Optional[LearningRateScheduler]: 2
'Loss': 2
'MSEMetric': 2
Tuple[('data_io.BaseParallelSampleIter', List[vocab.Vocab], vocab.Vocab, model.ModelConfig)]: 2
'Entity': 2
ResultVariable: 2
DuplicateException: 2
'Namespace': 2
List[Anchor]: 2
AssignStatement: 2
'number': 2
[MetricEntry]: 2
Sequence[models.MetricResult]: 2
agithub_base.IncompleteRequest: 2
models.MetricResult: 2
Optional[TypeImport]: 2
List[TypeImport]: 2
asyncpg.pool.Pool: 2
'tuples of index and KX_VertexProxy pair': 2
'boolean': 2
'tuple of KX_VertexProxies': 2
[None, timedelta]: 2
Optional[Project]: 2
dateutil.parser.parserinfo: 2
List[EngineQueue]: 2
List[Emt]: 2
Opt[Game]: 2
List[GameTensor]: 2
MoveTensor: 2
Opt[User]: 2
Tuple[(Opt[User], Authorised)]: 2
Opt[int]: 2
List[AnalysedGameActivation]: 2
List[BasicGameActivation]: 2
Sequence[Package]: 2
FileReport: 2
'VersionContainer': 2
Dict[(str, 'BaseAssembler')]: 2
Union[(Dict[(str, VersionContainer)], None)]: 2
DebianVersionParser: 2
Union[(Dict[(str, VersionContainer[DebianVersion])], None)]: 2
IDType: 2
List[List]: 2
Optional[BlackJackGame]: 2
BaseAccessPermissions: 2
AllData: 2
List[I]: 2
List[SubSeq[S]]: 2
Option(str): 2
ModuleNode: 2
'Enum': 2
BalanceProofUnsignedState: 2
BlockNumber: 2
TokenNetwork: 2
Balance: 2
Optional[BlockNumber]: 2
StatelessFilter: 2
Optional[NettingChannelState]: 2
Optional[StateChangeRecord]: 2
Optional[EventRecord]: 2
typing.Address: 2
typing.Optional[typing.Address]: 2
Iterable[List[App]]: 2
APIServer: 2
Mock: 2
ContractProxy: 2
Optional[CanonicalIdentifier]: 2
AddressHex: 2
Tuple[(bool, int)]: 2
FlaskResponse: 2
List[discord.CategoryChannel]: 2
(discord.Member or None): 2
(discord.User or discord.Member): 2
ConfigHeader: 2
ExternalClassWrapper: 2
GameState: 2
Optional[Result]: 2
typing.Union[(None, Exception)]: 2
typing.Tuple[(bool, typing.Union[(None, Exception)])]: 2
STEP_RENAME: 2
typing.Tuple[(int, str)]: 2
typing.Union[(tuple, str)]: 2
server.Responses: 2
Responses: 2
typing.Union[(None, SharedCache)]: 2
typing.Union[('projects.Project', None)]: 2
typing.Union[(datetime, None)]: 2
'SharedCache': 2
typing.List[tuple]: 2
file_io.FILE_WRITE_ENTRY: 2
WEB_INCLUDE: 2
Tuple[(int, Any)]: 2
CommandGraphNode: 2
'CommandObject': 2
InteractiveCommandClient: 2
Optional[command_graph.CommandGraphNode]: 2
'InteractiveCommandClient': 2
Generator[(ocr_record, None, None)]: 2
List[Tuple[(str, int, int, float)]]: 2
(dict, str): 2
Sequence[Point]: 2
ECSS: 2
Iterable[List[LabeledSpectrogram]]: 2
LabeledExample: 2
List[E]: 2
LabeledSpectrogramBatchGenerator: 2
Wav2Letter: 2
'ConsoleOutput': 2
List['Atom']: 2
'TorrentEntryAttrs': 2
'Torrent': 2
TorrentsCache: 2
'List[Type[BasePlugin]]': 2
email.mime.multipart.MIMEMultipart: 2
(int, object): 2
(int, list, list): 2
Set[Sample]: 2
id: 2
DownloaderJob: 2
Iterator[CaptureResult[str]]: 2
Iterator[Revision]: 2
Iterator[Page]: 2
VirtualDevice: 2
FieldType: 2
ProtocolAnalyzer: 2
QDialog: 2
GeneratorTreeModel: 2
HorizontalSelection: 2
TibrvQueue: 2
TibrvTx: 2
(tibrv_status, tibrvcmTransport): 2
(tibrv_status, float): 2
ISignEnvironment: 2
MobileCertificateResponse: 2
MobileLoginResponse: 2
MobileLoginStatusResponse: 2
MobileSignResponse: 2
MobileSignStatusResponse: 2
Files: 2
DateTimeStr: 2
PipelineStageMatch: 2
DecoratedOutType: 2
List[_dorm_summary]: 2
PaymentDetails: 2
engine.base.Engine: 2
typing.Optional[datetime.date]: 2
DataTemplate: 2
vimba_c.VmbCameraInfo: 2
vimba_c.VmbInterfaceInfo: 2
SignalData: 2
task.Task: 2
'yak.users.models.User': 2
Iter(BlogSync): 2
Iter(Action): 2
Iter(Source): 2
Iter(Blog): 2
Iter(Collaborator): 2
pendulum.Pendulum: 2
DiskIdentifier: 2
'BlobRequest': 2
ClaimList: 2
'Outputs': 2
HashBlobWriter: 2
typing.List[bytes]: 2
typing.Iterator['KademliaPeer']: 2
'TXRefImmutable': 2
'ElmPackage': 2
'ChunkLine': 2
Tuple[(str, float, np.ndarray)]: 2
Tuple[(pd.DataFrame, Optional[pd.DataFrame])]: 2
Tuple[(pd.DataFrame, pd.DataFrame)]: 2
Tuple[(float, pd.DataFrame, pd.DataFrame)]: 2
bpy.types.Texture: 2
List[Field]: 2
Optional['BaseSpecification']: 2
'Job': 2
Optional[List[Dict]]: 2
Optional[List[Union[(str, int)]]]: 2
'Owner': 2
Optional[Tuple[('User', 'Token')]]: 2
Optional[Tuple[('InternalUser', None)]]: 2
Iterable['RoleSpec']: 2
Optional['EventItemContextSpec']: 2
PointingTable: 2
(Image, numpy.ndarray): 2
List[Tuple[(List[int], List[int], float, float, float)]]: 2
Tuple[(Gdk.RGBA, Gdk.RGBA, Gdk.RGBA, Gdk.RGBA)]: 2
Tuple[(RecentType, List[Gio.File])]: 2
RecentType: 2
Optional[Gio.File]: 2
Optional[Message]: 2
can.broadcastmanager.CyclicSendTaskABC: 2
LocalizedIntegerValue: 2
'KMatrix': 2
'Parameter': 2
typing.Dict[(str, xr.Dataset)]: 2
Optional[GdbController]: 2
LookupTable: 2
GreedyDiarizationErrorRate: 2
StoredIdEdgeDefinition: 2
PentContext: 2
pymysql.Connection: 2
Iterable[GrappleTypeDef]: 2
Optional[UUID]: 2
Dict[(UUID, KvetchData)]: 2
KvetchShard: 2
ConnectionInfo: 2
scipy.sparse.coo_matrix: 2
Iterable[Tuple[(str, np.ndarray)]]: 2
Iterable[Tuple[(str, sparse.coo_matrix)]]: 2
sparse.coo_matrix: 2
Optional[builtins.str]: 2
List['QtWidgets.QWizardPage']: 2
typing.List[typing.Tuple[(str, typing.Optional[str])]]: 2
typing.Optional[BufferLine]: 2
typing.Optional[typing.Any]: 2
ModuleDefinition: 2
typing.Optional[LoadedModule]: 2
LoadedModule: 2
typing.Optional[IRCServer.Server]: 2
typing.List[IRCLine.ParsedLine]: 2
Dict[(str, Dict[(str, List[float])])]: 2
'CommandCursor': 2
Dict[(str, List[List[str]])]: 2
MPDClient: 2
typing.Set[AccountPermissionType]: 2
typing.Optional[ProjectPermissionType]: 2
ItemType: 2
'Tuple[List[Node], List[Node]]': 2
'List[dict]': 2
'Control': 2
Iterator[list]: 2
'psi4.core.Matrix': 2
pt.DataType: 2
BigQueryClient: 2
IntSequenceFormatV2: 2
List[Channel]: 2
ConfigParser: 2
'TableIterator': 2
dd.DataFrame: 2
Sequence[OrderData]: 2
Driver: 2
Changelog: 2
Tuple[Note]: 2
Verse: 2
t.Dict[(str, int)]: 2
Chair: 2
t.List: 2
(Label or None): 2
Set[Label]: 2
Callable[([str, int], str)]: 2
Custom_Generic[int]: 2
SearchObject: 2
dbWorkLine: 2
dbOpus: 2
CALLBACK_TYPE: 2
BaseWindow: 2
moderngl.Program: 2
Union[(moderngl.Texture, moderngl.TextureArray, moderngl.Texture3D, moderngl.TextureCube)]: 2
List[ResourceDescription]: 2
BufferFormat: 2
RSAPrivateKey: 2
'Certificate': 2
PostInfo: 2
PostingList: 2
git.refs.head.Head: 2
SiteConfigModel: 2
List[Tuple[(BoardModel, ThreadModel, PostModel)]]: 2
Optional[BoardModel]: 2
BoardModel: 2
'List[ModeratorModel]': 2
'List[BoardModel]': 2
'List[ModeratorLogModel]': 2
'List[PageModel]': 2
RegCodeModel: 2
LED: 2
BaseFX: 2
Generator[(xml.etree.ElementTree.Element, None, None)]: 2
_daemon_macro.MacroKey: 2
[Branch]: 2
InstructionID: 2
_DSFNode: 2
Iterator[TaggedDocument]: 2
KtrModule: 2
futures.ThreadPoolExecutor: 2
Dict[(str, any)]: 2
Generator[(Tuple[(str, int, str)], None, None)]: 2
aioxmpp.JID: 2
TypeProperty: 1
Union[(Tuple[(str, str)], str)]: 1
'md_ddlsession.DDLSession': 1
'typing.Tuple[str, set]': 1
'BaseTransaction': 1
typing.Tuple[(str, tuple)]: 1
'AsyncpgTransaction': 1
'typing.Callable[[BaseOperator, BaseOperator], typing.Any]': 1
OperatorResponse: 1
typing.List[Path]: 1
'typing.Coroutine[None, None, DDLSession]': 1
'typing.Union[md_operators.Eq, bool]': 1
'typing.Union[md_operators.NEq, bool]': 1
'md_operators.Lt': 1
'md_operators.Gt': 1
'md_operators.Lte': 1
'md_operators.Gte': 1
'md_operators.Eq': 1
'md_operators.NEq': 1
'md_operators.AscSorter': 1
'md_operators.DescSorter': 1
'md_operators.ValueSetter': 1
'md_operators.IncrementSetter': 1
'md_operators.DecrementSetter': 1
typing.Generator[(str, None, None)]: 1
'Index': 1
'typing.Generator[str, None, None]': 1
'ColumnType': 1
'md_operators.In': 1
'md_operators.Like': 1
'typing.Union[md_operators.ILike, md_operators.HackyILike]': 1
NetworkedConfigObject: 1
Net: 1
Submount: 1
MultiDict: 1
_TestingBpCtxManager: 1
'GunicornAdapter': 1
'uWSGIAdapter': 1
List[Tuple[(float, float, float)]]: 1
APIKey: 1
'OAuth2Token': 1
'Iterator[dt_message.Message]': 1
'MessageGroup': 1
'SearchQuery': 1
typing.Callable[([], dict)]: 1
'typing.Union[dt_guild.Guild, None]': 1
'typing.Union[dt_member.Member, dt_user.User]': 1
'typing.Union[dt_guild.Guild, InviteGuild]': 1
'typing.Union[dt_channel.Channel, InviteChannel]': 1
'Role': 1
_MentionableRole: 1
'List[dt_role.Role]': 1
type(iter([])): 1
'dt_vs.VoiceState': 1
Nickname: 1
'dt_user.User': 1
Permissions: 1
'typing.Mapping[int, WidgetChannel]': 1
'typing.Mapping[int, WidgetMember]': 1
'typing.Union[dt_guild.Guild, WidgetGuild]': 1
'typing.Mapping[int, typing.Union[dt_channel.Channel, WidgetChannel]]': 1
'Overwrite': 1
'typing.List[dt_role.Role]': 1
'dt_member.Member': 1
Coroutine[(None, None, None)]: 1
Coroutine[(None, None, IPCPacket)]: 1
'typing.AsyncContextManager[None]': 1
typing.Generator[(None, typing.Tuple[(str, typing.Any)], None)]: 1
typing.List[typing.Callable[(['EventContext'], None)]]: 1
GatewayHandler: 1
Guild: 1
Union[(Member, User)]: 1
'Callable[[Any, Context, str], Any]': 1
EventContext: 1
'Type[md_plugin.Plugin]': 1
AppListener: 1
FrozenDiff: 1
Generator[(int, None, Tuple[(str, dict)])]: 1
List[CoilMap]: 1
List[LightMap]: 1
Tuple[(Any, List[str])]: 1
Tuple[(dict, List[str])]: 1
Generator[(int, None, Tuple[(asyncio.StreamReader, asyncio.StreamWriter)])]: 1
DriverPlatform: 1
Optional[SwitchHandler]: 1
SwitchSettings: 1
List[SettingEntry]: 1
Union[(BaseBcpClient, bool)]: 1
SMBus2Asyncio: 1
Generator[(int, None, Smbus2I2cDevice)]: 1
'StepperPlatformInterface': 1
LightSegmentDisplay: 1
MMA8451Device: 1
'TrinamicsTMCLStepper': 1
'SegmentDisplayPlatformInterface': 1
ServoPlatformInterface: 1
'PololuTICStepper': 1
'LightPlatformInterface': 1
Tuple[(float, int, bool)]: 1
Generator[(int, None, EjectTracker)]: 1
Generator[(int, None, str)]: 1
run_command.Policy: 1
List[R]: 1
Iterator[R]: 1
MountCollection: 1
VmCollection: 1
Total: 1
PSP: 1
Optional[Transaction]: 1
Sequence[Invoice]: 1
Charge: 1
ApplicationSettings: 1
EventListener: 1
TypeDatabase: 1
Input[T]: 1
ROSWire: 1
Iterator[App]: 1
FailureDetectorFactory: 1
BagMessage: 1
Iterator[BagMessage]: 1
Input[Bag]: 1
Tuple[(bool, str, TProcessItems)]: 1
List[Tuple[(str, float)]]: 1
Dict[(str, distutils.version.LooseVersion)]: 1
pika.BlockingConnection: 1
Tuple[(tuple, dict)]: 1
Tuple[(pika.BlockingConnection, pika.channel.Channel)]: 1
'MessageLog': 1
VirtualHost: 1
ScheduledTask: 1
Type[object]: 1
viewsets.ModelViewSet.create: 1
viewsets.ModelViewSet.update: 1
viewsets.ModelViewSet.retrieve: 1
Callable[([argparse.Namespace], None)]: 1
Tuple[(ipaddress._BaseAddress, int)]: 1
ipaddress._BaseAddress: 1
CourseList: 1
Scaler: 1
(np.ndarray, np.ndarray, int): 1
(dict, np.ndarray): 1
rest.errors.BaseHttpError: 1
Callable[([Any, Any], Any)]: 1
Tuple[(model.User, model.UserToken)]: 1
model.Snapshot: 1
Optional[model.Comment]: 1
List[model.UserToken]: 1
Tuple[(NpMatrix, NpMatrix)]: 1
List[Lookalike]: 1
Optional[model.Tag]: 1
Tuple[(List[model.Tag], List[model.Tag])]: 1
List[model.TagCategory]: 1
Dict[(str, T)]: 1
criteria.BaseCriterion: 1
tokens.AnonymousToken: 1
tokens.NamedToken: 1
tokens.SpecialToken: 1
tokens.SortToken: 1
SearchQuery: 1
Tuple[(model.Base, model.Base)]: 1
Tuple[(int, List[model.Base])]: 1
SaColumn: 1
Optional[Filter]: 1
model.Post: 1
Tuple[(Any, Any, Union[(str, int)])]: 1
Optional[Base]: 1
context.Context: 1
Optional[Tag]: 1
db.UserAnswer: 1
List[CommandBase]: 1
QtCore.QSize: 1
T.Optional[Macro]: 1
T.Dict[(T.Tuple[(str, bool, bool)], T.Set[str])]: 1
T.Dict[(Path, FontInfo)]: 1
T.Iterable[AssEvent]: 1
T.Tuple[(int, int)]: 1
T.Dict[(str, float)]: 1
configargparse.Parser: 1
Json: 1
urwid.Widget: 1
EdictEntry: 1
T.Iterable[EdictEntry]: 1
T.List[EdictEntry]: 1
T.Dict[(str, T.Dict[(str, str)])]: 1
T.Iterator[T.Dict[(str, T.Dict[(str, str)])]]: 1
T.Generator: 1
T.Iterable[str]: 1
ProbeResult: 1
T.Set[str]: 1
Optional[configargparse.Namespace]: 1
Iterable[Tag]: 1
Optional[Post]: 1
_SyncInfo: 1
T.Iterable[Monitor]: 1
T.List[str]: 1
T.Tuple[(str, str, str, str)]: 1
T.Iterator[T.Any]: 1
T.Tuple[(int, bool)]: 1
T.List[T.Any]: 1
T.Dict[(str, T.Any)]: 1
T.Iterable[QtWidgets.QWidget]: 1
Iterator[BaseURLFilter]: 1
Mapping[(tuple, HostPool)]: 1
Union[(Connection, SSLConnection)]: 1
Sequence[AddressInfo]: 1
List[DNSInfo]: 1
FIFOCache: 1
ResolveResult: 1
dns.resolver.Answer: 1
Iterator[URLRecord]: 1
(int, URLRecord): 1
Optional[WorkItemT]: 1
WorkItemT: 1
Tuple[Pipeline]: 1
Set[Pipeline]: 1
Optional[AppSession]: 1
BaseResponse: 1
Optional[ItemSession]: 1
'HTTPProxySession': 1
FTPProcessorFetchParams: 1
LRUCache: 1
ProxyItemSession: 1
Iterator[PluginClientFunctionInfo]: 1
PipelineSeries: 1
Optional[QueuedFileSession]: 1
Union[(datetime.datetime, str, int)]: 1
Iterable[FileEntry]: 1
DataStream: 1
Tuple[(Optional[str], Optional[bool])]: 1
Tuple[(datetime.datetime, int, int)]: 1
Callable[([], SessionT)]: 1
SessionT: 1
Callable[([], Session)]: 1
WebClient: 1
RobotsTxtPool: 1
RedirectTracker: 1
Optional[Request]: 1
LoopType: 1
Callable[(..., RedirectTracker)]: 1
Callable[(..., Request)]: 1
CookieJarWrapper: 1
WebSession: 1
'Bot': 1
sched.scheduler: 1
BattleSession: 1
BattleState: 1
PokemonInfo: 1
MoveInfo: 1
Optional[LocationInfo]: 1
'FanInfo': 1
Optional['FanState']: 1
'CameraInfo': 1
Optional['CameraState']: 1
'LightInfo': 1
Optional['LightState']: 1
'CoverInfo': 1
Optional['CoverState']: 1
'BinarySensorInfo': 1
Optional['BinarySensorState']: 1
'ClimateInfo': 1
Optional['ClimateState']: 1
'SwitchInfo': 1
Optional['SwitchState']: 1
'SensorInfo': 1
Optional['SensorState']: 1
alexa_sh.Config: 1
ga_h.Config: 1
PipelineSpec: 1
Iterator[PipelineSpec]: 1
PipelineStatus: 1
StatusManager: 1
DependencyManager: 1
Tuple[(IO, Any)]: 1
Tuple[(IO, Optional[str], Optional[str], bool)]: 1
List[List[Scalar]]: 1
Union[(list, Any)]: 1
Tuple[(np.ndarray, str)]: 1
ServerRepository: 1
'ServerRepository': 1
DiffHead: 1
List[DiffItem]: 1
List['DiffItem']: 1
'DiffItem': 1
'ClientRepository': 1
'PatchTask': 1
ClientRepository: 1
entrez.EsearchResult: 1
ElementTree.Element: 1
Optional[EsearchResult]: 1
Optional[EpostResult]: 1
Optional[ElinkResult]: 1
Optional[List[EsummaryResult]]: 1
EpostResult: 1
Optional[List[requests.Response]]: 1
'futures.Future[_T]': 1
'Future[None]': 1
_QueueIterator[_T]: 1
Optional[Awaitable[None]]: 1
Tuple[(List[Tuple[(socket.AddressFamily, Tuple)]], List[Tuple[(socket.AddressFamily, Tuple)]])]: 1
'Future[Tuple[socket.AddressFamily, Any, IOStream]]': 1
Tuple[(IOStream, 'Future[IOStream]')]: 1
'Future[int]': 1
api.TokenManager: 1
_List: 1
typing.Union[(str, typing.Tuple[(int, str)])]: 1
hints.Float: 1
hints.Datetime: 1
Randomness: 1
hints.UUID: 1
V1SecretKeySelector: 1
V1alpha1ArtifactLocation: 1
V1alpha1Artifact: 1
List['PipelineParam']: 1
BaseOp: 1
NamedTuple('output', [('a', float), ('b', str)]): 1
SeldonPayload: 1
List[_HeaderSet]: 1
TypeHarFileObj: 1
fbuild.db.DST: 1
SQLITE3DBHandle: 1
FTS5TokenizerHandle: 1
Iterator[Tuple[(str, int, int)]]: 1
TokenizerModule: 1
Dict[(str, Union[(QuerySet, 'Purchase', 'Transfer', 'Deposit')])]: 1
Optional['SociSession']: 1
timezone.datetime: 1
SociBankAccount: 1
bpy.types.GreasePencil: 1
'Runner': 1
seproxer_enums.SeleniumBrowserTypes: 1
'ResultHandlerManager': 1
t.Iterable['ResultLevel']: 1
'Seproxer': 1
seproxer.options.Options: 1
selenium.webdriver.Chrome: 1
selenium.webdriver.PhantomJS: 1
selenium.webdriver.Firefox: 1
remote_webdriver.WebDriver: 1
ControllerUrlResult: 1
'DriverController': 1
t.List[StateResult]: 1
'LoadedStateManager': 1
validators.PageValidatorResults: 1
'PageValidatorManager': 1
JavascriptResource: 1
models.Environment: 1
Iterator[models.Environment]: 1
List[models.Port]: 1
List[models.Volume]: 1
VolumeMode: 1
models.Port: 1
options.ContainerOptions: 1
Arguments: 1
Iterator[Plugin]: 1
GPUUsageInfo: 1
SearchConfig: 1
tf.keras.optimizers.Optimizer: 1
List[OpFunc]: 1
example_gen_pb2.Input: 1
example_gen_pb2.Output: 1
beam.pvalue.PDone: 1
Dict[(Text, beam.pvalue.PCollection)]: 1
Optional[List[Text]]: 1
List[tfma.slicer.SingleSliceSpec]: 1
Tuple[(Optional[Text], Optional[int])]: 1
Sequence[Any]: 1
_SlackResponse: 1
Iterable[Tuple[(Text, Text, Any)]]: 1
prestodb.dbapi.Connection: 1
prestodb.auth.Authentication: 1
Dict[(Text, Channel)]: 1
Iterable[Artifact]: 1
List[Suggestion]: 1
List[Tuple[(Text, float)]]: 1
deephol_pb2.ProverOptions: 1
proof_assistant_pb2.ApplyTacticRequest: 1
List[GOAL_EMB_TYPE]: 1
List[THM_EMB_TYPE]: 1
predictions.ProofState: 1
predictions.EmbProofState: 1
GOAL_EMB_TYPE: 1
ProofState: 1
EmbProofState: 1
Optional[tf.train.Example]: 1
ProofLogToTFExample: 1
List[deephol_pb2.ProofLog]: 1
List[deephol_stat_pb2.ProofStat]: 1
proof_assistant_pb2.ApplyTacticResponse: 1
proof_assistant_pb2.VerifyProofResponse: 1
proof_assistant_pb2.RegisterTheoremResponse: 1
Dict[(Text, tf.Tensor)]: 1
NodeID: 1
Iterable[NodeID]: 1
Set[NodeID]: 1
List[NodeID]: 1
Optional[Tuple[(List[Tuple[(int, int, List[int])]], List[int])]]: 1
deephol_pb2.ProofNode: 1
Optional[deephol_pb2.ProofLog]: 1
Dict[(int, deephol_pb2.ProofNode)]: 1
List[deephol_pb2.TacticApplication]: 1
path_pb2.Path: 1
Tuple[FeatureName]: 1
Iterable[Tuple[(types.FeaturePath, pa.Array, Optional[np.ndarray])]]: 1
types.Example: 1
Generator[(types.Example, None, None)]: 1
types.SliceFunction: 1
List[Bucket]: 1
types.SliceKeysList: 1
anomalies_pb2.Anomalies: 1
Union[(float, Text, statistics_pb2.Histogram, statistics_pb2.RankHistogram)]: 1
List[types.FeatureName]: 1
types.FeatureName: 1
schema_pb2.Feature: 1
FEATURE_DOMAIN: 1
List[types.FeaturePath]: 1
Optional[schema_pb2.Feature]: 1
List[Tuple[(types.FeaturePath, schema_pb2.Feature)]]: 1
Optional[List[stats_generator.StatsGenerator]]: 1
Optional[List[types.FeatureName]]: 1
Optional[schema_pb2.Schema]: 1
Optional[List[types.SliceFunction]]: 1
pa.Table: 1
Dict[(types.FeaturePath, np.ndarray)]: 1
'_PartialNLStats': 1
Iterable[Text]: 1
Iterable[Tuple[(Text, Pattern[Text])]]: 1
'_PartialTimeStats': 1
'_PartialImageStats': 1
Tuple[(Tuple[(types.SliceKey, int)], pa.Table)]: 1
Dict[(types.FeaturePath, Dict[(Text, np.ndarray)])]: 1
Tuple[(types.SliceKey, statistics_pb2.DatasetFeatureStatistics)]: 1
'_PartialCrossFeatureStats': 1
Dict[(types.FeatureName, pd.DataFrame)]: 1
Dict[(types.FeatureCross, _PartialCrossFeatureStats)]: 1
Dict[(types.FeatureName, _ValueCounts)]: 1
writer.Writer: 1
metrics_for_slice_pb2.ArrayValue: 1
Optional[visualization.SlicingMetricsViewer]: 1
Optional[visualization.TimeSeriesViewer]: 1
Optional[visualization.PlotViewer]: 1
List[Dict[(Text, Union[(Dict[(Union[(float, Text)], Any)], Text)])]]: 1
Union[(Dict[(Text, Any)], Text)]: 1
Tuple[(Union[(Dict[(Text, Any)], Text)], Dict[(Text, Union[(Dict[(Text, Dict[(Text, Text)])], Text)])])]: 1
tf.estimator.Exporter: 1
example_pb2.Example: 1
types.EvalSharedModel: 1
List[types.FeaturesPredictionsLabels]: 1
types.FPLKeyType: 1
any_pb2.Any: 1
types.TensorType: 1
eval_metrics_graph.FPLFeedConfig: 1
query_types.QueryFPL: 1
Tuple[(beam.pvalue.DoOutputsTuple, beam.pvalue.PCollection)]: 1
types.MetricVariablesType: 1
'_AggState': 1
Optional[types.MetricVariablesType]: 1
List[Tuple[(slicer.SliceKeyType, types.Extracts)]]: 1
List[Union[(int, bytes, float)]]: 1
types.DictOfFetchedTensorValues: 1
Dock: 1
['original prompt', 'substitution prompt', 'insertion prompt', 'deletion prompt']: 1
{'orig': 'original prompt', 'sub': 'substitution prompt', 'ins': 'insertion prompt', 'del': 'deletion prompt', 'rand': 'another random prompt'}: 1
requests.Request: 1
Optional[File]: 1
Sequence[File]: 1
Sequence['Mod']: 1
'Release': 1
Generator[(ModPack, None, None)]: 1
Optional[Mod]: 1
SQLSession: 1
Callable[([Any, Any, ErrorCallback], bool)]: 1
Callable[([Union[(str, Enum)]], Enum)]: 1
curse.Feed: 1
proxy.Authorization: 1
List['SearchResult']: 1
Tuple[(Model, bool)]: 1
List[SearchResult]: 1
Set[NegativeSite]: 1
Mapping[(MotifName, set)]: 1
MotifsData: 1
MotifsRelatedCounts: 1
Union[(MotifsRelatedCounts, Mapping[(str, MotifsRelatedCounts)])]: 1
ActiveDriverResult: 1
GeneList: 1
Tuple[(Dict, Namespace)]: 1
Mapping[(str, Type[MutationImporter])]: 1
List[OneBasedPosition]: 1
[Set[Kinase], Set[KinaseGroup]]: 1
List[BioModel]: 1
'MutationSearch': 1
Callable[([str, str], str)]: 1
JobDef: 1
JobResult: 1
CronJob: 1
Type[BaseModel]: 1
Callable[([AnyCallable], classmethod)]: 1
Optional[Dict[(str, Validator)]]: 1
Dict[(str, List[Validator])]: 1
ValidatorListDict: 1
Dict[(str, classmethod)]: 1
Dict[(str, AnyType)]: 1
AnyType: 1
Optional[Union[('SetIntStr', 'DictIntStrAny')]]: 1
Union[('SetIntStr', 'DictIntStrAny')]: 1
'AnyOrderedDict': 1
IPv4Address: 1
IPv6Address: 1
IPv4Network: 1
IPv6Network: 1
IPv4Interface: 1
IPv6Interface: 1
AnyCallable: 1
Generator[(AnyCallable, None, None)]: 1
Optional[AnyType]: 1
Union[(None, int, float)]: 1
Union[(Callable[([AnyType], 'DataclassType')], 'DataclassType')]: 1
t: 1
Optional[Player]: 1
typing.Iterable[ValidationWarning]: 1
Tuple[(complex, complex)]: 1
Iterable[tuple]: 1
Dict[(Centroid, Sequence[Point])]: 1
List[Centroid]: 1
HashAndSalt: 1
UserInfo: 1
requests.session(): 1
ProtoSign: 1
SignedCtrlPayload: 1
'DefaultSignSrc': 1
SynthNewRequest: 1
GroupNewRequest: 1
'BufferGroup': 1
Chain: 1
ChainContainer: 1
AudioChain: 1
Optional[Synth]: 1
Optional[MixerContext]: 1
InstrumentChain: 1
ReturnChain: 1
typing.List[Result]: 1
'Execution': 1
EmailInfo: 1
SmsLength: 1
Tuple[(Namespace, List[str])]: 1
Optional[CompletedProcess]: 1
Optional[AnnData]: 1
Optional[Tuple[(pd.DataFrame, pd.DataFrame)]]: 1
Tuple[(pd.DataFrame, pd.DataFrame, np.ndarray, np.ndarray)]: 1
sparse.csr_matrix: 1
schemas.req['query']: 1
schemas.req: 1
Callable[([Dict[(Any, Any)], Any], Any)]: 1
Generator[(Tuple[(str, str, str, str)], None, None)]: 1
List[Iterator[str]]: 1
fpm.relguard((lambda a, b, c: ((a == b) and (b < c)))): 1
fpm.relguard((lambda a, c: ((a + 1) == c))): 1
fpm.relguard((lambda : (some_external_var3 == True))): 1
(lambda a, b, c: ((a == b) and (b < c))): 1
(lambda a, c: ((a + 1) == c)): 1
(lambda : (some_external_var3b == False)): 1
(bytes, bytes): 1
'RawInvMetaData': 1
List[Tuple[(Union[(discord.TextChannel, discord.DMChannel)], Dict[(str, bool)])]]: 1
JournalInfo: 1
'pexpect.spawn[bytes]': 1
typing.Sequence['LinuxCgroup']: 1
typing.Sequence[ProcessID]: 1
SystemdUserServiceManager: 1
typing.Iterable[typing.Tuple[(str, typing.Type[ServiceTestCaseBase])]]: 1
Callable[([Test], None)]: 1
Iterator[ExpectedFileBase]: 1
Dict[(Path, os.stat_result)]: 1
verify_mod.ExpectedFileSet: 1
List[ConfigSectionName]: 1
Mapping[(ConfigSectionName, Union[(ConfigValue, _UnsupportedValue)])]: 1
Strs: 1
Mapping[(ConfigOptionName, str)]: 1
MutableMapping[(ConfigSectionName, Mapping[(ConfigOptionName, str)])]: 1
ConfigValue: 1
Union[(ConfigValue, _UnsupportedValue)]: 1
EdenInstance: 1
Tuple[(EdenInstance, Optional[EdenCheckout], Optional[Path])]: 1
Tuple[(EdenInstance, EdenCheckout, Path)]: 1
MTStat: 1
MountTable: 1
Optional[argparse._SubParsersAction]: 1
Tuple[(List[str], Dict[(str, str)])]: 1
List[ProcessInfo]: 1
Iterable[ProcessInfo]: 1
'TerminalSettings': 1
typing.Iterator['LogForwarder']: 1
typing.Iterator['LogFollower']: 1
Set[bytes]: 1
WatchmanCheckInfo: 1
TestOutput: 1
List[ProblemBase]: 1
Tuple[(doctor.ProblemFixer, TestOutput)]: 1
FakeProcessFinder: 1
List[mtab.MountInfo]: 1
mtab.MTStat: 1
EdenCheckout: 1
FakeClient: 1
List[EdenCheckout]: 1
CheckoutInfo: 1
click.Command: 1
Provider: 1
PATH: 1
typing.Mapping: 1
List[Tuple[(datetime.datetime, datetime.datetime)]]: 1
tornado.concurrent.Future: 1
Survey: 1
Email: 1
Answer: 1
sa.Constraint: 1
'query': 1
List[Union[(str, None)]]: 1
'LazyI18nString': 1
message.Message: 1
ArchivedImage: 1
JWTClaims: 1
ArchiveManager: 1
object_store.ObjectStorageDriver: 1
ObjectStorageManager: 1
dcos_cli.DcosCli: 1
Docker: 1
Iterator[Network]: 1
[Host]: 1
Host: 1
ssh_client.AsyncSshClient: 1
Status[(Input, Output)]: 1
ForwardDeclaration: 1
'SequenceReader[Input]': 1
'StringReader[str]': 1
'StringReader[Input]': 1
'Status[Input, Output]': 1
Callable[([Iterable], A)]: 1
md.Trajectory: 1
typing.Union[(int, str)]: 1
typing.List[BaseMetadata]: 1
MultiDictProxy: 1
Tuple[(pendulum.Pendulum, pendulum.Pendulum)]: 1
Iterator[Tuple[(str, Union[(str, dict, bytes)])]]: 1
Iterator[Tuple[(str, Union[(str, dict, bytes)], pendulum.Pendulum)]]: 1
(list, str): 1
NestedInteger: 1
'List[List[int]]': 1
List[ListNode]: 1
'List[Point]': 1
RolePrincipalPair: 1
[Button]: 1
List[Hand]: 1
Dict[(str, Union[(bool, int)])]: 1
pydicom.FileDataset: 1
OsStatResult: 1
SqlalchemyEngine: 1
SklearnRandomForestClassifier: 1
SklearnDecisionTreeClassifier: 1
GraphvizDot: 1
SklearnKNeighborsClassifier: 1
StatsmodelsMixedLM: 1
SklearnMLPClassifier: 1
SklearnLogisticRegression: 1
SklearnMultinomialNB: 1
SklearnGradientBoostingClassifier: 1
SklearnLogisticRegressionCV: 1
N1QLQuery: 1
SSHTunnelForwarder: 1
Union[(int, float, str)]: 1
List[Tuple[(Query, int)]]: 1
Iterator[Thread]: 1
Iterator[Query]: 1
[str, str]: 1
JobMapping: 1
Iterator[Tuple[(str, dict, dict)]]: 1
Optional[Dict[(str, float)]]: 1
[float, float]: 1
[Union[(None, str)], bool]: 1
Tuple[(couchbaseConstants.PUMP_ERROR, Any)]: 1
couchbaseConstants.PUMP_ERROR: 1
Tuple[(couchbaseConstants.PUMP_ERROR, Optional[pump.SinkBatchFuture])]: 1
Tuple[(couchbaseConstants.PUMP_ERROR, Optional[int])]: 1
Tuple[(couchbaseConstants.PUMP_ERROR, List[bytes])]: 1
t.Union[(t.Any, str)]: 1
t.Generator[(t.Tuple[(str, t.Any)], None, None)]: 1
t.List[t.Tuple[(str, t.Any)]]: 1
t.List[t.Tuple[(str, bytes)]]: 1
t.Callable: 1
Tuple[(Dict, Counter)]: 1
Union[(Callable[(..., Any)], str)]: 1
MultiPointerTensor: 1
'LoggingTensor': 1
'AbstractTensor': 1
'MultiPointerTensor': 1
'CRTPrecisionTensor': 1
'AutogradTensor': 1
object_pointer.ObjectPointer: 1
'ObjectWrapper': 1
th.optim.Optimizer: 1
weakref: 1
'TrainConfig': 1
'pointers.PointerTensor': 1
range: 1
Ellipsis: 1
torch.nn.Parameter: 1
Tuple[(bin, Tuple, str)]: 1
torch.device: 1
torch.jit.ScriptModule: 1
GATTDescriptor: 1
GATTCharacteristic: 1
GATTService: 1
t.Tuple[(t.List[str], t.List[str])]: 1
t.Optional[str]: 1
t.Optional[t.Any]: 1
t.Tuple[(str, str)]: 1
CollectionOfChanges: 1
({str: BeautifulSoup}, {str: str}): 1
(CollectionOfChanges, {str: str}): 1
{str: (str, str)}: 1
(BeautifulSoup, HTTPResponse): 1
'method_decorator': 1
Iterable['method_decorator']: 1
K: 1
J: 1
Tuple[(int, K, float)]: 1
List[Tuple[(List[int], float)]]: 1
Dict[(str, U)]: 1
List[U]: 1
Dict[(int, List[float])]: 1
CommandHelp: 1
List['RotationInfo']: 1
Tuple[(bool, bool, bool, bool)]: 1
Tuple[(Sequence[RawImageFile], Sequence[RawImageFile])]: 1
GrandChallengeTiffFile: 1
GrandChallengeTiffFileTags: 1
Image.COLOR_SPACES: 1
Mapping[(str, Union[(str, None)])]: 1
'ContainerImageModel': 1
Tuple[(File, ...)]: 1
Type[Executor]: 1
(): 1
Union[(str, float, int, None)]: 1
Sequence[HttpResponse]: 1
Sequence[HttpRequest]: 1
Tuple[(RawImageUploadSession, Dict[(str, RawImageFile)])]: 1
b.Bar: 1
a.Bar: 1
'Foo': 1
CacheMan: 1
Cache: 1
{str: RemoteCache}: 1
CacheType: 1
('AppConfig' or None): 1
(AppConfig or None): 1
AbstractCompiler: 1
(AbstractTool or None): 1
(str or bool): 1
DummyMessage: 1
naming.Naming: 1
wrappers.Field: 1
'Options': 1
CodeGeneratorResponse: 1
imp.Import: 1
'Naming': 1
Tuple[(List[T], List[T])]: 1
storage.Client: 1
(List[str], List[str]): 1
_ProtoModule: 1
struct_pb2.Value: 1
struct_pb2.ListValue: 1
struct_pb2.Struct: 1
timestamp_pb2.Timestamp: 1
duration_pb2.Duration: 1
LeagueSummonerEntries: 1
ChampionMasteryData: 1
ChampionMasteryListData: 1
SummonerData: 1
ChampionData: 1
ChampionListData: 1
ChampionReleaseData: 1
RuneData: 1
RuneListData: 1
ItemData: 1
ItemListData: 1
SummonerSpellData: 1
SummonerSpellListData: 1
MapData: 1
MapListData: 1
VersionListData: 1
RealmData: 1
LanguagesData: 1
LanguageStringsData: 1
ProfileIconData: 1
ProfileIconListData: 1
Rune: 1
Versions: 1
Locales: 1
VerificationStringData: 1
CurrentGameInfoData: 1
FeaturedGamesData: 1
MatchData: 1
MatchReferenceData: 1
MatchListData: 1
TimelineData: 1
Timeline: 1
LeagueData: 1
LeagueEntryData: 1
LeagueSummonerEntriesData: 1
LeagueEntriesData: 1
ChallengerLeagueListData: 1
GrandmasterLeagueListData: 1
MasterLeagueListData: 1
League: 1
LeagueEntry: 1
ShardStatusData: 1
ChampionRotationData: 1
'ChampionMasteries': 1
'MatchHistory': 1
'CurrentMatch': 1
'SummonerLeagues': 1
List[TeamData]: 1
List[Rune]: 1
Dict[(int, Champion)]: 1
GameMode: 1
GameType: 1
Set[type]: 1
'CassiopeiaGhost': 1
Season: 1
List[Translation]: 1
List[Incident]: 1
List[Service]: 1
RunePath: 1
List[GameMode]: 1
List[SpellVars]: 1
Generator[(Image, None, None)]: 1
PatchListDto: 1
ChampionReleaseDto: 1
ChampionReleasesDto: 1
Curl: 1
Set[RiotAPIService]: 1
Generator[(LeagueDto, None, None)]: 1
Set[KernelSource]: 1
Union[(dict, list, Any)]: 1
Union[(property, Callable[([Callable[([Any], Any)]], property)])]: 1
'FixedWindowRateLimiter': 1
'TokenBucketRateLimiter': 1
'WindowedTokenBucketRateLimiter': 1
Union[(str, Tuple[str])]: 1
MatchedType: 1
Union[(MatchedType, None)]: 1
NFA: 1
Iterator[Node]: 1
Iterator[nodes.SetNode]: 1
Iterator[nodes.RepetitionRangeNode]: 1
Iterator[nodes.GroupNode]: 1
Dict[(str, Union[(str, Tuple[str])])]: 1
Tuple[(Text, int)]: 1
Tuple[Text]: 1
Sequence[snt.AbstractModule]: 1
BootstrappedDqn: 1
CartpoleState: 1
specs.BoundedArray: 1
specs.DiscreteArray: 1
_GymTimestep: 1
Union[(np.ndarray, bool)]: 1
spaces.Discrete: 1
spaces.Box: 1
Tuple[(Any, list)]: 1
'Box[U]': 1
'Lazy[T, U]': 1
'ImmutableList[U]': 1
'Sum': 1
'All': 1
'Maybe[T]': 1
'Maybe[None]': 1
Union[('Maybe[T]', 'Maybe[None]')]: 1
Union[(T, U)]: 1
Either[U]: 1
TransactionElement: 1
List[Decimal]: 1
Tuple[(XPos, YPos)]: 1
Tuple[(Union[(SinglePinPortPinName, MultiPinPortPinName)], SinglePinPortPinName)]: 1
Tuple[(PBTypeName, List[ClockPort], List[InputPort], List[OutputPort], Dict[(CarryName, Tuple[(InputPort, OutputPort)])])]: 1
Dict[(int, Tuple[(float, float, float)])]: 1
ClientResponse: 1
'aioresponses': 1
Union[(URL, str)]: 1
Iterator[Session]: 1
'Gtk.Image': 1
'Gio.Icon': 1
Iterable[U]: 1
GroupedVersions: 1
NextcloudReleases: 1
'TagPages': 1
AppRelease: 1
'ReleaseDownload': 1
ReleaseDownload: 1
Release: 1
X509: 1
Type['Formatter']: 1
Tuple[(StrHeaderListType, HeaderDictType)]: 1
HttpHeader: 1
Optional[Type[HttpHeader]]: 1
Tuple[(int, ParamDictType)]: 1
Iterable[Dict[(str, List[str])]]: 1
'SpectralLibraryReader': 1
Iterator[Tuple[(MsmsSpectrum, int)]]: 1
Iterator[MsmsSpectrum]: 1
FakeFilePaths: 1
Optional[UserConfigFile]: 1
UserConfigFile: 1
List[TemplateFile]: 1
403: 1
'ne retourne rien': 1
'blocking': 1
cl.Device: 1
List[cl.Device]: 1
Iterable[Tuple[(int, XTFHeaderType)]]: 1
Generator[(Union[(XTFFileHeader, XTFPacket)], None, None)]: 1
Tuple[(XTFFileHeader, Dict[(XTFHeaderType, List[Any])])]: 1
ElasticQueryWrapper: 1
models.Functievervulling: 1
models.MaatschappelijkeActiviteit: 1
models.Persoon: 1
List[List[List[Path]]]: 1
MutableMapping[(Path, Angles)]: 1
Tuple[(int, List[Module], Set[Module])]: 1
Dict[(_T, int)]: 1
Dict[(_T, Set[_T])]: 1
Hash: 1
TaskTree: 1
Dict[(Source, Task)]: 1
ir.AtomicTypeLiteral: 1
ir.TemplateBodyElement: 1
List[ir.TemplateBodyElement]: 1
Union[(ir.Expr, List[ir.Expr])]: 1
Tuple[(List[ir.TemplateDefn], bool)]: 1
List[Expr]: 1
UnificationStrategy.Expr: 1
List[_NonListExpr]: 1
List[Tuple[(Union[(str, ListExpansion[TermT])], List[_NonListExpr])]]: 1
'TemplateElemWriter': 1
Set[T]: 1
Callable[([Any, ...], Dict[(Union[(Type, Tuple[(Type, ...)])], Type)])]: 1
List[condition.Condition]: 1
List[Type[Any]]: 1
Type[FieldType]: 1
spanner_database.Database: 1
Type[field.FieldType]: 1
update.SchemaUpdate: 1
migration.Migration: 1
Dict[(str, Type[model.Model])]: 1
Optional[Type[model.Model]]: 1
List[tensornetwork.Edge]: 1
Tuple[(tensornetwork.TensorNetwork, List[tensornetwork.Edge])]: 1
tensornetwork.TensorNetwork: 1
Tuple[(network.TensorNetwork, List[network_components.Edge], List[network_components.Edge])]: 1
Tuple[(network.TensorNetwork, Dict[(Any, network_components.Edge)])]: 1
graphviz.Graph: 1
Tuple[(Set[network_components.Edge], int)]: 1
Tuple[(network.TensorNetwork, Dict[(network_components.Node, int)], Dict[(network_components.Node, int)])]: 1
Tuple[(network_components.CopyNode, network_components.Edge, network_components.Edge)]: 1
Tuple[(batchtensornetwork.BatchTensorNetwork, List[tensornetwork.Node], Tuple[tensornetwork.Node])]: 1
key_manager.KeyManager[aead.Aead]: 1
aead.Aead: 1
Type[aead.Aead]: 1
key_manager.KeyManager[deterministic_aead.DeterministicAead]: 1
deterministic_aead.DeterministicAead: 1
Type[deterministic_aead.DeterministicAead]: 1
tink_pb2.Keyset.Key: 1
'KeysetHandle': 1
Tuple[(km_module.KeyManager, bool)]: 1
km_module.KeyManager: 1
_WrappedPublicKeySign: 1
Type[public_key_sign.PublicKeySign]: 1
key_manager.PrivateKeyManager[public_key_sign.PublicKeySign]: 1
_WrappedPublicKeyVerify: 1
Type[public_key_verify.PublicKeyVerify]: 1
key_manager.KeyManager[public_key_verify.PublicKeyVerify]: 1
hybrid_decrypt.HybridDecrypt: 1
Type[hybrid_decrypt.HybridDecrypt]: 1
key_manager.KeyManager[hybrid_decrypt.HybridDecrypt]: 1
hybrid_encrypt.HybridEncrypt: 1
Type[hybrid_encrypt.HybridEncrypt]: 1
key_manager.KeyManager[hybrid_encrypt.HybridEncrypt]: 1
Iterator[xarray.Dataset]: 1
Tuple[Optional[int]]: 1
Union[(int, tf.Tensor)]: 1
Tuple[(lt.LabeledTensor, lt.LabeledTensor)]: 1
Tuple[(np.ndarray, lt.LabeledTensor)]: 1
List[lt.LabeledTensor]: 1
Callable[([tf.Session], Callable)]: 1
Tuple[(List[str], lt.LabeledTensor)]: 1
nspoint: 1
nssize: 1
nsrect: 1
Union[(int, Tuple[(int, bytes)])]: 1
'ActorContext': 1
List[Table]: 1
Tuple[(ListingType, str)]: 1
RecordTask: 1
ViewTask: 1
Geometry.FloatPoint: 1
ThumbnailSource: 1
typing.Tuple[(typing.Optional[Profile], bool)]: 1
typing.Optional[typing.Sequence]: 1
typing.Optional[typing.Mapping]: 1
FileStorageSystem.DataItemStorageAdapter: 1
'Map': 1
'Cell': 1
'Resources': 1
Vec2: 1
'CellActions': 1
'Trajectory': 1
UpdateServiceSpec: 1
Binding: 1
LastOperation: 1
config: 1
Iterable[List[Any]]: 1
Optional[STR_ENUM_FWD_REF]: 1
ValidatorType: 1
Generator[(Field, None, None)]: 1
Generator[(Type, None, None)]: 1
List[Type]: 1
csv.Dialect: 1
Iterator[_DATABASE_ROW_TYPE]: 1
Optional[Sequence[Sequence[Any]]]: 1
Optional[_DATABASE_ROW_TYPE]: 1
Pep249DatabaseConnectionType: 1
_DATABASE_ROW_TYPE: 1
Generator[(BinaryIO, None, None)]: 1
Tuple[(Set[psutil.Process], Set[psutil.Process])]: 1
Dict[(str, ModuleType)]: 1
Callable[([Any], bool)]: 1
HttpResponseBase: 1
SqlGrammar: 1
TypeEngine: 1
IdentifierPreparer: 1
AutodocIndex: 1
NlprpResponse: 1
PatientLookup: 1
Optional[ConsentMode]: 1
Generator[(Tuple[(Union[(int, str)], Union[(int, str)])], None, None)]: 1
Router: 1
JsonObjectType: 1
Optional[Pendulum]: 1
Optional[Credentials]: 1
List[ClassType]: 1
List[Type[BaseNlpParser]]: 1
Optional[Type[BaseNlpParser]]: 1
BaseNlpParser: 1
Optional[BaseNlpParser]: 1
Dict[(Pattern, Any)]: 1
Tuple[(bool, Any)]: 1
DatabaseHolder: 1
_Node: 1
List[_Node]: 1
_Tree: 1
Optional[Format]: 1
Format: 1
TournamentInfo: 1
db.User: 1
List[db.User]: 1
Union[(Response, Tuple[(str, int)])]: 1
pystache.loader.Loader: 1
pystache.renderengine.RenderEngine: 1
pystache.parsed.ParsedTemplate: 1
OAuth2Session: 1
CommitStatus: 1
Tuple[(Set[str], Set[str])]: 1
RawDeckDescription: 1
Dict[(str, Union[(str, int, List[int])])]: 1
Competition: 1
decklist.DecklistType: 1
Tuple[(datetime.datetime, str)]: 1
competition.Top: 1
Optional[deck.Deck]: 1
List[bs4.element.Tag]: 1
MatchListType: 1
List[DeckType]: 1
List[SectionDescription]: 1
Tuple[(Tag, str)]: 1
List[Tuple[(Tag, str)]]: 1
IssueComment: 1
Optional[astroid.nodes.Module]: 1
PropertyFunction: 1
ResultsType: 1
Optional[redislib.Redis]: 1
Optional[List[Container]]: 1
Union[(int, str, List[Any])]: 1
List[Dict[(str, ValidSqlArgumentDescription)]]: 1
Tuple[(int, List[Dict[(str, ValidSqlArgumentDescription)]])]: 1
Tuple[(int, List[ValidSqlArgumentDescription])]: 1
ValidSqlArgumentDescription: 1
List[PullRequest.PullRequest]: 1
Union[(str, List[str], Set[str], int, float)]: 1
InvalidDataException: 1
Tuple[(int, int, List[Card])]: 1
TournamentDateType: 1
List[TournamentDateType]: 1
Dict[(str, Card)]: 1
List[card.Printing]: 1
Sequence[Card]: 1
List[CardDescription]: 1
Tuple[(int, List[str])]: 1
Dict[(str, Union[(bool, List[Dict[(str, str)]])])]: 1
Tuple[(Optional[str], List[str], List[str])]: 1
WordSubwordType: 1
Optional[List[Dict[(str, object)]]]: 1
MemoryOwnerMixin: 1
Addressing: 1
[GatewayModel]: 1
Gateway: 1
[ControlUnitModel]: 1
ControlUnit: 1
ControlUnitModel: 1
GatewayModel: 1
StressVocabulary: 1
'Syllable': 1
'Word': 1
'Line': 1
StressedWord: 1
ItemsView[(str, Set[Stress])]: 1
Set[TreeNode]: 1
Tuple[(List[StressCorrection], List[StressCorrection], List[StressCorrection])]: 1
Iterator[Markup]: 1
'RhymeProfile': 1
WordFormOut: 1
ETree.ElementTree: 1
ResolutionSet: 1
all_items.AllItems: 1
Generator[(ItemDefinition, None, None)]: 1
ItemDefinition: 1
'ItemDefinition': 1
Accelerator: 1
Controls: 1
OutdatedStepAction: 1
sources.Script: 1
lxml.etree.ElementTree: 1
Mount: 1
List[Mount]: 1
extractors.ExtractedMetadata: 1
Union[(List[str], Dict[(str, str)], str)]: 1
Type[Extension]: 1
List['Statement']: 1
Set[pluginhandler.PluginHandler]: 1
Iterable[Tuple[(pluginhandler.PluginHandler, Union[(states.StageState, states.PrimeState)])]]: 1
Tuple[(pluginhandler.PluginHandler, steps.Step, int)]: 1
pluginhandler.DirtyReport: 1
Set[steps.Step]: 1
'Type[Provider]': 1
storeapi.channels.Channel: 1
_SnapOp: 1
'InstanceInfo': 1
Tuple[(str, str, BinaryIO, str, BinaryIO)]: 1
SnapPublisherDetails: 1
SnapChannelDetails: 1
SnapDownloadDetails: 1
List[SnapChannelMapping]: 1
SnapDetails: 1
SnapChannelMapping: 1
SnapStatusChannelDetails: 1
SnapStatusTrackDetails: 1
Set[SnapStatusChannelDetails]: 1
SnapInfo: 1
Callable[(..., Callable[(..., None)])]: 1
Union[(discord.Embed, str, None)]: 1
Optional[_event_parser.Download]: 1
Leaf: 1
List[Tree]: 1
Set[Tuple[(int, str)]]: 1
Tuple[(str, str, str, int, int, int)]: 1
Optional[Generator[(Any, None, None)]]: 1
pytz.datetime.tzinfo: 1
Realm: 1
[CheckResult]: 1
flask.Flask: 1
Callable[(..., object)]: 1
Callable[(..., List[List[dict]])]: 1
Callable[(..., dict)]: 1
Callable[(..., Optional[dict])]: 1
Callable[(..., List[dict])]: 1
Reform: 1
ErfsFprSurveyScenario: 1
Tuple[(str, asyncio.Future)]: 1
Goban: 1
ImageFont: 1
HeapNode: 1
'FieldTransformStep': 1
LinkReference: 1
DvEntity: 1
Callable[([Callable], None)]: 1
AbsPreprocessor: 1
(List[np.ndarray], np.ndarray, List[np.ndarray]): 1
Mapping[(int, str)]: 1
tf.train.Feature: 1
FeedPreviousRNN: 1
_RNNBase: 1
Optional[Sequence[Split]]: 1
Optional[Partition]: 1
(np.ndarray, np.ndarray, np.ndarray): 1
(np.ndarray, np.ndarray): 1
t.TxIn: 1
FusionBase: 1
FusionRangeBase: 1
BaseAbundance: 1
CentralDogma: 1
Reaction: 1
Iterable[EdgeTuple]: 1
Tuple[(str, str, Optional[str], Optional[str], CanonicalEdge)]: 1
CanonicalEdge: 1
Optional[Tuple]: 1
List[WarningTuple]: 1
Iterable[typing.Tuple[(str, str)]]: 1
Tuple[(str, List, Dict)]: 1
Dict[(BaseEntity, Set[BaseEntity])]: 1
Iterable[Tuple[(BaseEntity, BaseEntity, int, Mapping)]]: 1
List[ParseResults]: 1
LocationDict: 1
Abundance: 1
Protein: 1
MicroRna: 1
Tuple[(Dict[(str, Dict)], Set[str])]: 1
List[X]: 1
List[Citation]: 1
Optional[Edge]: 1
Optional[Author]: 1
Optional[Evidence]: 1
Set[BaseAbundance]: 1
Mapping[(BiologicalProcess, BELGraph)]: 1
List[BELGraph]: 1
Iterable[Tuple[(X, X)]]: 1
Mapping[(X, Set[Y])]: 1
Mapping[(X, List[Y])]: 1
Mapping[(X, typing.Counter[Y])]: 1
typing.Counter[X]: 1
Mapping[(Y, float)]: 1
Mapping[(str, List)]: 1
Mapping[(Protein, Set[Protein])]: 1
Mapping[(str, Mapping[(Tuple[(BaseEntity, BaseEntity)], str)])]: 1
Iterable[Tuple[(str, Tuple[(str, str)])]]: 1
typing.Counter[int]: 1
Mapping[(A, Set[B])]: 1
Mapping[(Tuple[(BaseEntity, BaseEntity)], Set[str])]: 1
List[Mapping[(str, str)]]: 1
BELGraphSummary: 1
Tuple[(Mapping[(str, EdgeSet)], Mapping[(str, Mapping[(str, EdgeSet)])], Mapping[(str, Mapping[(str, EdgeSet)])], Mapping[(str, Mapping[(str, float)])])]: 1
Set[Tuple[(BaseEntity, BaseEntity, Tuple[str])]]: 1
Iterable[Tuple[(BaseEntity, BaseEntity, Tuple[str])]]: 1
Mapping[(Any, int)]: 1
Mapping[(BaseEntity, List[Mapping])]: 1
Mapping[(str, List[int])]: 1
Concordance: 1
ConcordanceTest: 1
Mapping[(str, ConcordanceTest)]: 1
Mapping[(str, pd.DataFrame)]: 1
Iterable[Tuple[(str, str, float)]]: 1
Mapping[(str, List[Gene])]: 1
Iterable[Tuple[(str, str, str, float)]]: 1
Iterable[Tuple[(CentralDogma, str, Optional[str])]]: 1
Javascript: 1
Mapping[(str, Mapping[(str, Any)])]: 1
BELPairTuple: 1
BELTripleTuple: 1
Iterable[Tuple[BaseEntity]]: 1
Iterable[Tuple[(BaseEntity, BaseEntity, str, EdgeData)]]: 1
Callable[([BELGraph, BELGraph, str], None)]: 1
Callable[([BELGraph, str], None)]: 1
Tuple[(BELGraph, BaseEntity)]: 1
Mapping[(str, X)]: 1
Mapping[(BaseEntity, Set[BaseEntity])]: 1
Iterable[Tuple[(BaseEntity, ...)]]: 1
Iterator[IndexPage]: 1
Volume: 1
Union[(Article, str)]: 1
List[List[Union[(Article, str)]]]: 1
Generator[(Property, None, None)]: 1
PetScan: 1
List[ReScannerTask]: 1
Union[(Author, None)]: 1
Tuple[(Union[(int, None)], Union[(int, None)])]: 1
Dict[(str, Union[(str, List[Dict[(str, str)]])])]: 1
VolumeRegister: 1
'Vector': 1
Tuple[(int, int, int, int, int, float, int, int, int, int)]: 1
Union[(EFBChannel, EFBMiddleware)]: 1
'Optional[EFBMsg]': 1
'Optional[EFBStatus]': 1
'EFBMsg': 1
List['EFBChat']: 1
EFBChat: 1
List[EFBChat]: 1
Optional[EFBMsg]: 1
Optional[EFBStatus]: 1
Iterator[Git]: 1
Generator[(Tuple, None, None)]: 1
Dict[(str, PluginWrapper)]: 1
List[Tuple[(ObjectId, int)]]: 1
List[Dict[(str, Union[(User, int)])]]: 1
Dict[(str, AbstractTaskType)]: 1
admin.Admin: 1
BatchUpdateResult: 1
Dict[(ObjectId, int)]: 1
DonationResult: 1
Optional[UserState]: 1
Dict[(str, Union[(str, Optional[Dict])])]: 1
Iterator[UserState]: 1
Optional[Fund]: 1
Iterator[Fund]: 1
Generator[(Batch, None, None)]: 1
Union[(str, ConvState)]: 1
requests.Result: 1
Generator[(Tuple[(Column, Any)], None, None)]: 1
Inquiry: 1
client.Flow: 1
Iterator[Type[T]]: 1
Type[Equation]: 1
Equation: 1
List[Dict[(T, tf.Tensor)]]: 1
Dict[(K, V)]: 1
List[Dict[(str, tf.Tensor)]]: 1
List[Transform]: 1
List[Tuple[(states.StateDefinition, grids.Grid)]]: 1
Dict[(str, tf.io.FixedLenFeature)]: 1
equations.Equation: 1
Iterator[Tuple[int]]: 1
tf.keras.layers.Layer: 1
VelocityField: 1
Callable[([Text], Text)]: 1
SpoilerChannel: 1
'TapiOamOamServiceRef': 1
'InlineObject6': 1
'TapiOduOduTerminationAndClientAdaptationPac': 1
'InlineObject23': 1
'InlineObject9': 1
'TapiNotificationGetnotificationsubscriptionservicedetailsInput': 1
'TapiOduOduNamedPayloadType': 1
'TapiCommonGetserviceinterfacepointdetailsOutput': 1
'TapiOamOamProfile': 1
'TapiPathComputationPathObjectiveFunction': 1
'TapiPhotonicMediaConnectionEndPointAugmentation5': 1
'TapiPhotonicMediaOtsiConnectionEndPointSpec': 1
'InlineObject5': 1
'TapiPhotonicMediaServiceInterfacePointAugmentation1': 1
'TapiNotificationContextAugmentation2': 1
'TapiPhotonicMediaLaserControlType': 1
'TapiOduOduNcmPac': 1
'TapiNotificationGetnotificationsubscriptionservicelistOutput': 1
'TapiCommonServiceInterfacePointRef': 1
'TapiNotificationCreateNotificationSubscriptionService': 1
'TapiNotificationGetnotificationlistInput': 1
'TapiPathComputationDeleteP2PPath': 1
'TapiCommonGetServiceInterfacePointDetails': 1
'TapiOamCreateoamserviceInput': 1
'TapiNotificationCreatenotificationsubscriptionserviceOutput': 1
'TapiConnectivityGetconnectiondetailsOutput': 1
'TapiNotificationDeletenotificationsubscriptionserviceOutput': 1
'InlineObject24': 1
'TapiNotificationSubscriptionFilter': 1
'TapiOduOduTcmMipPac': 1
'TapiNotificationNameAndValueChange': 1
'TapiCommonTerminationPac': 1
'TapiTopologyGetlinkdetailsOutput': 1
'TapiOamOamcontextMeg': 1
'TapiOduOduMipSpec': 1
'TapiPathComputationComputep2ppathOutput': 1
'TapiCommonOperationalStatePac': 1
'TapiOamUpdateOamServiceEndPoint': 1
'TapiPathComputationRouteObjectiveFunction': 1
'TapiOduOduSlotSize': 1
'TapiConnectivityUpdateConnectivityService': 1
'TapiConnectivityGetconnectivityservicedetailsInput': 1
'TapiOduOduCtpPac': 1
'TapiPathComputationPathRef': 1
'TapiTopologyGetNodeDetails': 1
'TapiPhotonicMediaConnectionEndPointAugmentation1': 1
'TapiPhotonicMediaLaserPropertiesPac': 1
'InlineObject12': 1
'TapiConnectivityRoute': 1
'TapiTopologyGettopologylistOutput': 1
'TapiOamMipRef': 1
'TapiOamUpdateoamserviceendpointInput': 1
'TapiPathComputationOptimizeP2PPath': 1
'TapiTopologyLatencyCharacteristic': 1
'TapiOduTimDetMo': 1
'TapiOamDeleteoamserviceInput': 1
'TapiCommonTimeInterval': 1
'TapiPhotonicMediaLaserControlStatusType': 1
'TapiConnectivityConnectivityConstraint': 1
'TapiConnectivityConnectionRef': 1
'TapiOamOamContext': 1
'TapiOduOduDefectPac': 1
'TapiNotificationTcaInfo': 1
'TapiOduOduMipPac': 1
'InlineObject1': 1
'InlineObject': 1
'InlineObject15': 1
'TapiPhotonicMediaOtsiAssemblyConnectionEndPointSpec': 1
'TapiConnectivityConnectivityContext': 1
'TapiConnectivityUpdateconnectivityserviceOutput': 1
'TapiOamPmThresholdData': 1
'TapiTopologyNodeRuleGroupRef': 1
'TapiNotificationGetsupportednotificationtypesOutput': 1
'TapiTopologyNetworkTopologyService': 1
'TapiPhotonicMediaSelectedModulation': 1
'TapiCommonDirectiveValue': 1
'TapiPathComputationPathOptimizationConstraint': 1
'TapiOamMegMip': 1
'TapiTopologyRiskParameterPac': 1
'TapiOamCreateOamService': 1
'InlineObject13': 1
'TapiPathComputationComputeP2PPath': 1
'TapiCommonContext': 1
'TapiNotificationUpdateNotificationSubscriptionService': 1
'TapiPathComputationOptimizep2ppathInput': 1
'TapiPhotonicMediaNodeEdgePointAugmentation1': 1
'InlineObject22': 1
'TapiOamUpdateOamService': 1
'TapiCommonCapacity': 1
'TapiTopologyGetlinkdetailsInput': 1
'TapiOamGetmegInput': 1
'TapiCommonNameAndValue': 1
'TapiPhotonicMediaModulationTechnique': 1
'TapiOduOduConnectionEndPointSpec': 1
'TapiOamUpdateoamserviceendpointOutput': 1
'TapiCommonGetserviceinterfacepointdetailsInput': 1
'TapiOamCreateoamserviceOutput': 1
'TapiCommonGetServiceInterfacePointList': 1
'TapiPathComputationPathComputationService': 1
'TapiCommonLocalClass': 1
'TapiConnectivityGetconnectivityservicedetailsOutput': 1
'TapiOamMip': 1
'InlineObject4': 1
'TapiPathComputationDeletep2ppathInput': 1
'TapiCommonTerminationDirection': 1
'TapiTopologyGetNodeEdgePointDetails': 1
'TapiNotificationObjectType': 1
'TapiPhotonicMediaSipAugmentation1': 1
'TapiCommonOperationalState': 1
'TapiOduOduPmPac': 1
'TapiOamConnectionEndPointAugmentation2': 1
'TapiNotificationGetNotificationList': 1
'TapiPhotonicMediaConnectionEndPointAugmentation6': 1
'TapiCommonForwardingDirection': 1
'TapiPhotonicMediaMediaChannelNodeEdgePointSpec': 1
'TapiCommonUpdateserviceinterfacepointInput': 1
'TapiNotificationGetnotificationsubscriptionservicedetailsOutput': 1
'TapiConnectivityRouteRef': 1
'TapiOamMep': 1
'TapiNotificationAlarmInfo': 1
'TapiCommonTimeRange': 1
'TapiConnectivitySelectionReason': 1
'TapiTopologyTopology': 1
'TapiNotificationServiceAffecting': 1
'TapiOamOamServiceEndPointRef': 1
'TapiTopologyValidationMechanism': 1
'TapiPhotonicMediaOtsiTerminationConfigPac': 1
'TapiConnectivityReversionMode': 1
'TapiConnectivityCreateConnectivityService': 1
'TapiPhotonicMediaMediaChannelServiceInterfacePointSpec': 1
'TapiNotificationSubscriptionState': 1
'TapiPhotonicMediaGridType': 1
'TapiPathComputationContextAugmentation3': 1
'TapiOamGetoamserviceOutput': 1
'TapiOamGetMeg': 1
'TapiCommonPortDirection': 1
'TapiOduMipAugmentation1': 1
'TapiOamGetOamJob': 1
'InlineObject7': 1
'TapiTopologyNodeRef': 1
'TapiCommonLayerProtocolName': 1
'TapiNotificationUpdatenotificationsubscriptionserviceOutput': 1
'TapiPhotonicMediaLaserType': 1
'TapiCommonBandwidthProfile': 1
'TapiOamMepMipList': 1
'InlineObject20': 1
'TapiPhotonicMediaConnectionEndPointAugmentation7': 1
'InlineObject21': 1
'TapiPathComputationTopologyConstraint': 1
'TapiNotificationThresholdCrossingType': 1
'TapiPathComputationOptimizep2ppathOutput': 1
'TapiNotificationNotificationSubscriptionService': 1
'TapiTopologyNodeEdgePointRef': 1
'TapiOamGetoamserviceendpointOutput': 1
'TapiPhotonicMediaSpectrumBand': 1
'TapiConnectivityGetConnectionEndPointDetails': 1
'TapiOamOamProfileRef': 1
'InlineObject28': 1
'TapiTopologyGetTopologyList': 1
'TapiPhotonicMediaCentralFrequency': 1
'TapiConnectivityConnectionEndPointRef': 1
'TapiConnectivityContextAugmentation4': 1
'TapiCommonCapacityValue': 1
'TapiTopologyGetLinkDetails': 1
'TapiPhotonicMediaSipAugmentation2': 1
'TapiNotificationDeletenotificationsubscriptionserviceInput': 1
'TapiPhotonicMediaConnectionEndPointAugmentation3': 1
'TapiOamUpdateoamjobInput': 1
'TapiPhotonicMediaOtsiGserverAdaptationPac': 1
'TapiConnectivityContextTopologycontextTopologyNodeOwnednodeedgepointCepList': 1
'TapiConnectivityUpdateconnectivityserviceInput': 1
'TapiNotificationCreatenotificationsubscriptionserviceInput': 1
'TapiTopologyProtectionType': 1
'TapiTopologyRiskCharacteristic': 1
'InlineObject32': 1
'TapiCommonBandwidthProfileType': 1
'TapiTopologyCostCharacteristic': 1
'InlineObject14': 1
'TapiNotificationPerceivedTcaSeverity': 1
'TapiPhotonicMediaApplicationIdentifier': 1
'TapiCommonLifecycleState': 1
'TapiCommonCapacityUnit': 1
'TapiConnectivityGetconnectiondetailsInput': 1
'TapiCommonTimeUnit': 1
'TapiNotificationNotificationChannel': 1
'TapiOamOamConstraint': 1
'TapiPhotonicMediaMediaChannelPoolCapabilityPac': 1
'InlineObject10': 1
'TapiTopologyGetnodeedgepointdetailsInput': 1
'TapiTopologyLinkRef': 1
'TapiCommonAdminStatePac': 1
'InlineObject18': 1
'TapiOamUpdateoamserviceOutput': 1
'TapiOamGetoamserviceInput': 1
'TapiTopologyGetnodedetailsInput': 1
'TapiCommonCapacityPac': 1
'TapiTopologyGettopologydetailsInput': 1
'TapiNotificationNotificationContext': 1
'TapiPhotonicMediaServiceInterfacePointAugmentation2': 1
'TapiConnectivityGetconnectionendpointdetailsInput': 1
'InlineObject2': 1
'TapiPathComputationPathServiceEndPoint': 1
'TapiCommonServiceInterfacePoint': 1
'TapiNotificationGetSupportedNotificationTypes': 1
'TapiCommonGetserviceinterfacepointlistOutput': 1
'TapiOduDegThr': 1
'TapiOamCreateOamJob': 1
'TapiPhotonicMediaConnectionEndPointAugmentation2': 1
'TapiPathComputationDiversityPolicy': 1
'TapiOamCreateOamServiceEndPoint': 1
'TapiOduOduPayloadType': 1
'InlineObject31': 1
'TapiConnectivityGetConnectivityServiceList': 1
'TapiNotificationDeleteNotificationSubscriptionService': 1
'TapiNotificationGetnotificationlistOutput': 1
'TapiConnectivityOwnedNodeEdgePointAugmentation3': 1
'InlineObject27': 1
'TapiPhotonicMediaApplicationIdentifierType': 1
'TapiTopologyGettopologydetailsOutput': 1
'TapiTopologyGetnodeedgepointdetailsOutput': 1
'InlineObject16': 1
'TapiOamMegMep': 1
'InlineObject17': 1
'TapiPhotonicMediaOtsConnectionEndPointSpec': 1
'TapiOduDegThrType': 1
'TapiTopologyContextAugmentation5': 1
'TapiTopologyInterRuleGroup': 1
'TapiOduOduCommonPac': 1
'TapiPathComputationPathComputationContext': 1
'TapiPhotonicMediaOtsiTerminationPac': 1
'TapiConnectivitySwitch': 1
'TapiPhotonicMediaEndPointAugmentation2': 1
'TapiTopologyTransferIntegrityPac': 1
'TapiConnectivityGetconnectionendpointdetailsOutput': 1
'TapiPhotonicMediaEndPointAugmentation1': 1
'TapiOduOwnedNodeEdgePointAugmentation1': 1
'TapiConnectivityServiceType': 1
'TapiOamMepRef': 1
'TapiPhotonicMediaFrequencyConstraint': 1
'TapiOamCreateoamserviceendpointOutput': 1
'TapiConnectivityCreateconnectivityserviceInput': 1
'TapiCommonAdministrativeState': 1
'InlineObject29': 1
'TapiOduMepAugmentation1': 1
'TapiTopologyTopologyRef': 1
'TapiConnectivityGetconnectivityservicelistOutput': 1
'TapiOduMappingType': 1
'TapiOduOduNodeEdgePointSpec': 1
'TapiOamGetoamservicelistOutput': 1
'TapiNotificationNotificationType': 1
'InlineObject11': 1
'TapiOduPercentageGranularity': 1
'TapiTopologyTransferCostPac': 1
'TapiPhotonicMediaConnectionEndPointAugmentation4': 1
'TapiConnectivityProtectionRole': 1
'TapiPhotonicMediaMediaChannelPropertiesPac': 1
'TapiTopologyTransferTimingPac': 1
'TapiTopologyGetnodedetailsOutput': 1
'TapiTopologyRuleType': 1
'TapiOamContextAugmentation1': 1
'TapiConnectivityConnectivityServiceRef': 1
'TapiOamMeg': 1
'TapiTopologyLayerProtocolTransitionPac': 1
'TapiOamOamJob': 1
'TapiOamGetOamServiceEndPoint': 1
'TapiOduConnectionEndPointAugmentation1': 1
'TapiCommonGlobalClass': 1
'TapiCommonTimePeriod': 1
'TapiPhotonicMediaFecPropertiesPac': 1
'TapiOduOduProtectionPac': 1
'TapiOamOamService': 1
'TapiOamCreateoamserviceendpointInput': 1
'TapiOamPmBinData': 1
'TapiOamGetOamServiceList': 1
'TapiOamGetoamjobInput': 1
'InlineObject19': 1
'TapiOamGetoamjobOutput': 1
'TapiOamDeleteoamserviceendpointInput': 1
'TapiPhotonicMediaOtsiServiceInterfacePointSpec': 1
'TapiCommonTerminationState': 1
'TapiConnectivityDeleteconnectivityserviceInput': 1
'TapiTopologyValidationPac': 1
'TapiNotificationGetNotificationSubscriptionServiceList': 1
'TapiPhotonicMediaOtsiConnectivityServiceEndPointSpec': 1
'TapiConnectivityCreateconnectivityserviceOutput': 1
'TapiPhotonicMediaOwnedNodeEdgePointAugmentation2': 1
'TapiOamPmCurrentData': 1
'TapiOamCreateoamjobOutput': 1
'TapiPathComputationRoutingConstraint': 1
'TapiTopologyRestorationPolicy': 1
'InlineObject8': 1
'InlineObject25': 1
'TapiCommonPortRole': 1
'InlineObject26': 1
'InlineObject30': 1
'TapiOamCreateoamjobInput': 1
'TapiTopologyTopologyContext': 1
'TapiConnectivityGetConnectionDetails': 1
'TapiConnectivitySwitchControlRef': 1
'TapiNotificationSourceIndicator': 1
'TapiPathComputationPath': 1
'TapiPhotonicMediaAdjustmentGranularity': 1
'TapiPathComputationDeletep2ppathOutput': 1
'TapiPhotonicMediaMediaChannelConnectionEndPointSpec': 1
'TapiNotificationPerceivedSeverityType': 1
'TapiNotificationGetNotificationSubscriptionServiceDetails': 1
'TapiPhotonicMediaOtsiCapabilityPac': 1
'TapiPathComputationComputep2ppathInput': 1
'TapiOamUpdateoamjobOutput': 1
'TapiConnectivityGetConnectivityServiceDetails': 1
'TapiOamMegRef': 1
'TapiOamDeleteoamjobInput': 1
'TapiTopologyForwardingRule': 1
'TapiConnectivityCoordinateType': 1
'TapiTopologyResilienceType': 1
'TapiTopologyGetTopologyDetails': 1
'TapiOamGetmegOutput': 1
'TapiOamUpdateoamserviceInput': 1
'TapiOamGetOamService': 1
'TapiOamUpdateOamJob': 1
'TapiConnectivityConnectivityServiceEndPointRef': 1
'InlineObject3': 1
'TapiNotificationUpdatenotificationsubscriptionserviceInput': 1
'TapiOamGetoamserviceendpointInput': 1
'TapiPhotonicMediaMediaChannelAssemblySpec': 1
'TapiTopologyRule': 1
'TapiOduUasChoice': 1
'TapiConnectivitySelectionControl': 1
'TapiOduOduPoolPac': 1
'TapiPhotonicMediaPowerPropertiesPac': 1
'TapiOamPmHistoryData': 1
'TapiPhotonicMediaTotalPowerThresholdPac': 1
StateTransition: 1
Question: 1
RuleResult: 1
List[Dataset]: 1
(List, List): 1
ConfigSpace.ConfigurationSpace: 1
APIaiMetadata: 1
APIaiParameters: 1
List[Action]: 1
Conditions: 1
ZwavePrarmValue: 1
PushButton: 1
LineEdit: 1
DateEdit: 1
PlotWidget: 1
ListWidget: 1
ComboBox: 1
DockWidget: 1
GroupBox: 1
SpinBox: 1
TableWidget: 1
DoubleSpinBox: 1
BaseEvent: 1
List[List[Tuple[(int, dict)]]]: 1
List[Tuple[(int, dict)]]: 1
List[PadHit]: 1
Tuple[(bool, Oligo, Strand)]: 1
Tuple[(List[Oligo], List[Oligo])]: 1
StrandArray: 1
Tuple[(Oligo, Oligo, Oligo)]: 1
'VirtualHelix': 1
VirtualHelix: 1
Strand: 1
FTP: 1
Tuple[(Union(str, mmap.mmap), bool)]: 1
Tuple[(Alignment, str)]: 1
List[SubAlignmentGroup]: 1
Iterator[Star]: 1
Iterator[Tuple[(Hashable, Tuple[(Any, ...)])]]: 1
Colormap: 1
Callable[([np.ndarray], np.ndarray)]: 1
Tuple[(pd.Series, pd.Series, pd.Series)]: 1
List[InstrumentedAttribute]: 1
eliminations.StarsCounter: 1
Iterator[Dict[(str, NumericType)]]: 1
Iterator[Tuple[(str, List[NumericType])]]: 1
List[Base]: 1
Dict[(Hashable, Any)]: 1
SearchStrategy: 1
Iterator[Tuple[(str, SearchStrategy)]]: 1
Star: 1
List[Doctest]: 1
Tuple[(doctest.TestResults, List[str])]: 1
List['LineQubit']: 1
'TrialResult': 1
List[ParamResolver]: 1
List[Sweep]: 1
Sweep: 1
Iterator[resolver.ParamResolver]: 1
Tuple[(value.Scalar, value.Scalar, value.Scalar, value.Scalar)]: 1
Tuple[(np.ndarray, np.array, np.ndarray)]: 1
Tuple[(Union[(slice, int, 'ellipsis')], ...)]: 1
Union[(float, complex, np.ndarray)]: 1
Type[np.number]: 1
neutral_atoms.NeutralAtomDevice: 1
'WaveFunctionTrialResult': 1
study.ComputeDisplaysResult: 1
List[study.ComputeDisplaysResult]: 1
List[List[complex]]: 1
'WaveFunctionSimulatorState': 1
study.TrialResult: 1
'np.ndarray': 1
Tuple[(List[bool], np.ndarray)]: 1
'cirq.TrialResult': 1
Optional[CIRCUIT_SAMPLE_JOB_TREE]: 1
List[CircuitSampleJob]: 1
Optional[collector.CircuitSampleJob]: 1
Union[(float, complex)]: 1
circuits.CircuitDag: 1
ops.SingleQubitCliffordGate: 1
Optional[ops.Operation]: 1
List[Tuple[(ops.PauliStringPhasor, int, circuits.Unique[ops.PauliStringPhasor])]]: 1
Tuple[(circuits.Circuit, circuits.Circuit)]: 1
Tuple[(FrozenSet[Hashable], ...)]: 1
Dict[(FrozenSet, Any)]: 1
'UndirectedHypergraph': 1
UndirectedGraphDeviceEdge: 1
Optional[lex.Token]: 1
Dict[(Tuple[(cirq.Qid, ...)], cirq.Gate)]: 1
Layers: 1
'SwapNetworkGate': 1
Dict[(frozenset, LogicalGates)]: 1
Tuple[(cirq.Qid, ...)]: 1
'OtherOperation': 1
Set[FrozenSet[LogicalIndex]]: 1
List[ops.Qid]: 1
Tuple[(circuits.Circuit, Sequence[ops.Qid])]: 1
Tuple[(TItem, ...)]: 1
QuirkOp: 1
Iterable[Tuple[(List[Any], bool)]]: 1
ops.Moment: 1
'QasmUGate': 1
'QasmTwoQubitGate': 1
Tuple[(Dict[(str, str)], Dict[(str, Optional[str])])]: 1
Dict[(ops.Qid, str)]: 1
Unique: 1
Iterator[Unique[ops.Operation]]: 1
Iterator[ops.Operation]: 1
circuit.Circuit: 1
BlockDiagramDrawer: 1
BoxDrawCharacterSet: 1
'TextDiagramDrawer': 1
Iterator[Tuple[(int, TItem)]]: 1
Tuple[(int, TItem)]: 1
KeysView[TVector]: 1
ValuesView[Scalar]: 1
ItemsView[(TVector, Scalar)]: 1
Union[(Scalar, TDefault)]: 1
Iterator[TVector]: 1
sympy.Basic: 1
Union[('Duration', float)]: 1
Callable[([type], type)]: 1
Union[(Callable[([type], type)], type)]: 1
Tuple[(mpl_collections.Collection, pd.DataFrame)]: 1
mpl.colorbar.Colorbar: 1
Optional[v2.program_pb2.Operation]: 1
arg_func_langs.ArgValue: 1
v2.program_pb2.Program: 1
v2.program_pb2.Operation: 1
schedules.Schedule: 1
Dict[(str, arg_func_langs.ArgValue)]: 1
cg.XmonDevice: 1
Tuple[(List[GridQubit], Dict[(str, Set[GridQubit])])]: 1
Dict[(GridQubit, List[GridQubit])]: 1
'GridQubitLineTuple': 1
List[LineSequence]: 1
List[List[GridQubit]]: 1
EDGE: 1
Optional[EDGE]: 1
Optional[List[GridQubit]]: 1
Set[GridQubit]: 1
XmonDevice: 1
'SharedMemManager': 1
run_context_pb2.Sweep: 1
List[MeasureInfo]: 1
List[devices.GridQubit]: 1
result_pb2.Result: 1
List[List[study.TrialResult]]: 1
sweeps.Product: 1
cirq.Duration: 1
ci.IonDevice: 1
ops.XXPowGate: 1
Optional[LineQubit]: 1
Tuple[(List[ops.Operation], List[int], np.ndarray)]: 1
List[Tuple[(ops.Pauli, float)]]: 1
Tuple[(np.ndarray, complex, complex)]: 1
Optional[ops.OP_TREE]: 1
'ApproxPauliStringExpectation': 1
'PauliStringExpectation': 1
Union[(ApproxPauliStringExpectation, PauliStringExpectation)]: 1
cop.ControlledOperation: 1
'ControlledGate': 1
'cirq.FSimGate': 1
Union[(int, float, sympy.Basic)]: 1
Iterable[raw_types.Operation]: 1
Iterable[Union[(Operation, Moment)]]: 1
'PauliInteractionGate': 1
List[Tuple[(float, np.ndarray)]]: 1
'ControlledOperation': 1
Tuple[(Union[(raw_types.Qid, Tuple[(int, FrozenSet[raw_types.Qid])])], ...)]: 1
Union[(Tuple[np.ndarray], NotImplementedType)]: 1
'GateOperation': 1
Optional[TV]: 1
Union[(str, protocols.CircuitDiagramInfo)]: 1
'Gate': 1
Tuple[(Qid, ...)]: 1
Tuple[(complex, Union[('Pauli', 'common_gates.IdentityGate')])]: 1
'SingleQubitPauliStringGateOperation': 1
common_gates.XPowGate: 1
common_gates.YPowGate: 1
common_gates.ZPowGate: 1
List[raw_types.Operation]: 1
TSelf_Moment: 1
Union[(Tuple[(int, ...)], NotImplementedType)]: 1
Union[(int, NotImplementedType)]: 1
Union[(Tuple[(int, ...)], TDefault)]: 1
Union[(int, TDefault)]: 1
Tuple[(Optional[List['cirq.Operation']], Sequence['cirq.Qid'], Tuple[(int, ...)])]: 1
Union[(str, Iterable[str], CircuitDiagramInfo)]: 1
CircuitDiagramInfo: 1
'cirq.Circuit': 1
Union[(TDefault, 'cirq.OP_TREE')]: 1
Union[(Sequence[Tuple[(float, Any)]], NotImplementedType)]: 1
Sequence[Tuple[(float, np.ndarray)]]: 1
Union[(str, TDefault)]: 1
Union[(Sequence[np.ndarray], NotImplementedType)]: 1
Union[(Tuple[np.ndarray], Sequence[TDefault])]: 1
'SelfInverse': 1
Union[(value.LinearDict[str], TDefault)]: 1
Iterable[float]: 1
cirq.ParamResolver: 1
TrotterAlgorithm: 1
TrotterStep: 1
'DoubleExcitationGate': 1
CXXYYPowGate: 1
CYXXYPowGate: 1
XXYYPowGate: 1
YXXYPowGate: 1
List[complex]: 1
List[cirq.Operation]: 1
shell_tools.CommandOutput: 1
TextureFileName: 1
FileSystemChain: 1
ClassFunc: 1
Tuple[(Union[(float, EnumType)], Union[(float, EnumType)])]: 1
Dict[(str, 'Sound')]: 1
logging.FileHandler: 1
_InitArgT: 1
'SurfaceProp': 1
Iterator[Tuple[(str, VarType, str)]]: 1
Dict[(str, List[Command])]: 1
Callable[([TransFunc], TransFunc)]: 1
[None, bool]: 1
[List, None]: 1
Iterable[InstanceConfig_T]: 1
utils.BranchDictV2: 1
utils.InstanceConfigDict: 1
InstanceConfig_T: 1
FlinkDeploymentConfig: 1
CassandraClusterDeploymentConfig: 1
Callable[([_RegisterDrainMethod_T], _RegisterDrainMethod_T)]: 1
'DrainMethod': 1
Tuple[(Dict[(str, V1_Mapping)], V2_Mappings)]: 1
DeploymentsDict: 1
Tuple[(bool, Optional[Application])]: 1
marathon_tools.MarathonClients: 1
ChronosClient: 1
AdhocJobConfig: 1
Sequence[Tuple[(str, ServiceNamespaceConfig)]]: 1
SecretProvider: 1
Marathon_Dashboard: 1
BoostValues: 1
Optional[KubernetesDeploymentConfig]: 1
KubernetesDeploymentConfigDict: 1
V1beta1PodDisruptionBudget: 1
Sequence[DeploymentWrapper]: 1
Sequence[StatefulSetWrapper]: 1
Sequence[Application]: 1
Tuple[(List[TaskInfo], ConstraintState)]: 1
TaskInfo: 1
NativeServiceConfig: 1
'MesosTaskParameters': 1
_SelfT: 1
Tuple[(MesosTaskParameters, ZnodeStat)]: 1
'ServiceInstance': 1
MarathonClients: 1
ServiceInstance: 1
SmartstackData: 1
Tuple[(Set[InstanceTuple], Set[str])]: 1
Tuple[(Set[InstanceTuple], Set[InstanceTuple])]: 1
Collection['str']: 1
Iterator[TransitionDefinition]: 1
Tuple[(List[threading.Thread], List[SLOWatcher])]: 1
SlackClient: 1
BaseMetrics: 1
Callable[([Type[BaseMetrics]], Type[BaseMetrics])]: 1
Gauge: 1
Iterator[psutil.Process]: 1
Optional[_ServiceConfig]: 1
EVENT: 1
OutPut: 1
RecorderBase: 1
AmazingAnalysis: 1
BarBase: 1
Optional[Signal]: 1
Union[(float, bool)]: 1
Callable[(..., Callable[(..., T)])]: 1
Optional['RateLimit']: 1
Tuple[(Any, Optional[RateLimit], Optional[str])]: 1
Callable[([AsyncCallback], AsyncCallback)]: 1
ShardContext: 1
Tuple[(Optional[List[KinesisRecord]], Optional[str])]: 1
List[KinesisShard]: 1
ConsumerContext: 1
KinesisStream: 1
Union[(list, dict, int)]: 1
DumpSchema(): 1
Plugin: 1
_one_sreg: 1
'CloseConnection': 1
'Pong': 1
Optional[Union[(bool, str)]]: 1
Tuple[(h11.InformationalResponse, bytes)]: 1
h11.Request: 1
Union[(asyncio.Task, List[asyncio.Task], None)]: 1
TweetSequence: 1
twittback.User: 1
Iterable[Tuple[(str, simdspec.Signature)]]: 1
Tuple[('Interpretation', ...)]: 1
Interpretation: 1
'Signature': 1
Tuple[(Interpretation, ...)]: 1
List[Tuple[(Interpretation, Operation)]]: 1
ty.Tuple[(str, int, int, int)]: 1
ty.Dict[(str, int)]: 1
ty.Dict[(int, int)]: 1
ty.Optional[AbstractComparator]: 1
ty.Union[(float, int, None)]: 1
ty.Dict[(str, ty.Any)]: 1
ty.Iterable[ty.Tuple[(int, int)]]: 1
ty.Optional[AbstractFilter]: 1
functools.partial: 1
Type['Payload']: 1
_CIMultiDict: 1
_RespPrepareSignal: 1
'CleanupContext': 1
UrlDispatcher: 1
_Middlewares: 1
Iterator[_Middleware]: 1
List[BaseException]: 1
Optional[BaseException]: 1
'ClientWebSocketResponse': 1
payload.BytesPayload: 1
multipart.MultipartWriter: 1
Optional[asyncio.Transport]: 1
BaseProtocol: 1
'Optional[asyncio.Task[Any]]': 1
'Future[Server]': 1
'Set[asyncio.Task[Any]]': 1
'Minutia': 1
Tuple[(Image.Image, float)]: 1
ArangoClient: 1
List[TableInfo]: 1
'DbContext': 1
DbConnection: 1
Calendar: 1
Todo: 1
BrightsideConsumer: 1
BrightsideConsumerConfiguration: 1
Callable[([Connection, BrightsideConsumerConfiguration, logging.Logger], BrightsideConsumer)]: 1
Callable[([BrightsideMessage], Request)]: 1
BrightsideMessageType: 1
BrightsideMessageHeader: 1
BrightsideMessageBody: 1
List[Callable[([], Handler)]]: 1
Callable[([Request], BrightsideMessage)]: 1
Jargon: 1
ScoringModel: 1
RankingModel: 1
Set[NamespacedApi]: 1
NamespacedApi: 1
Dict[(str, FieldDescriptor)]: 1
List[Tuple[(MySqlModel, Number)]]: 1
Dict[(MySqlModel, Number)]: 1
Union[(None, int, str, float)]: 1
IOWrapper: 1
Union[(TreeViewModel, None)]: 1
Union[(QTextCharFormat, Sequence[QTextCharFormat], None)]: 1
Union[(QRegularExpression, None)]: 1
Dict[(str, UnitKey)]: 1
Tuple[(List[Unit], bool)]: 1
Ref: 1
Union[(Dict, List, str, int)]: 1
Def: 1
List[Builtin]: 1
Iterable[bs4.BeautifulSoup]: 1
Union[(IntroductionModification, None)]: 1
Union[(bool, Page)]: 1
Tuple[(Comment, Dict)]: 1
Tuple[(Topic, Page)]: 1
SHA512Hash: 1
typing.List[typing.Dict]: 1
contentviews.TViewResult: 1
TFilter: 1
typing.Tuple[(typing.Sequence[ParseResult], typing.Sequence[str])]: 1
typing.AnyStr: 1
typing.Iterable[list]: 1
typing.Union[(str, bytes)]: 1
TOrigin: 1
typing.Tuple[(TSerializable, bytes)]: 1
Iterable[flow.Flow]: 1
http_pb2.HTTPResponse: 1
http_pb2.HTTPRequest: 1
http_pb2.ClientConnection: 1
http_pb2.ServerConnection: 1
http_pb2.HTTPError: 1
http_pb2.HTTPFlow: 1
HTTPRequest: 1
ClientConnection: 1
typing.Optional[flow.Error]: 1
HTTPFlow: 1
typing.Union[HTTPFlow]: 1
Dict[(Union[(bytes, str)], Any)]: 1
ServerSpec: 1
Tuple[(str, ServerSpec)]: 1
typing.Tuple[(Type, Type)]: 1
Iterator[Tuple[(Optional[T], ...)]]: 1
Iterable[Tuple[(str, dict)]]: 1
Iterable[date]: 1
ChangeMapping: 1
Iterable[CalendarEvent]: 1
'Check': 1
Cashdesk: 1
Union[(HttpResponse, HttpResponseRedirect)]: 1
Union[(Cashdesk, None)]: 1
Dict[(str, Union[(bool, List[Dict])])]: 1
Tuple[(SessionBaseForm, Any)]: 1
CreateUserForm: 1
(subprocess.Popen, str): 1
[ControllerDiscovery]: 1
List[ControllerDiscovery]: 1
AbstractProcessor: 1
messages.RippleSignTx: 1
messages.CardanoTxInputType: 1
messages.CardanoTxOutputType: 1
ParsedFirmware: 1
Tuple[(int, Ed25519PublicPoint)]: 1
MessageType: 1
Iterable['Transport']: 1
Iterable[Type[Transport]]: 1
Iterable[Transport]: 1
Iterable['HidTransport']: 1
'HidTransport': 1
Iterable['UdpTransport']: 1
Iterable['WebUsbTransport']: 1
'WebUsbTransport': 1
'BridgeTransport': 1
Iterable['BridgeTransport']: 1
proto.StellarSignTx: 1
Tuple[(bool, bool, str)]: 1
ArgumentStructure: 1
PropertyMap: 1
List[PredicationPair]: 1
ScopalArgumentStructure: 1
Tuple[(ScopeLabel, ScopeMap)]: 1
DescendantMap: 1
RouteStringGenerator: 1
IR: 1
Optional[blocks.Block]: 1
Pin: 1
Optional[Pin]: 1
Tuple[(set, Dict[(int, Any)])]: 1
List[TradingCard]: 1
'MergedReads': 1
AlignmentType: 1
Tuple[(OrientedRead, OrientedRead)]: 1
Read: 1
ReadMapping: 1
Dict[(Text, Union[(Dict, List[Dict])])]: 1
'Component': 1
'RasaNLUModelConfig': 1
List[Component]: 1
Optional['Persistor']: 1
Optional[List[Dict[(Text, Text)]]]: 1
Type['Component']: 1
Tuple[(Trainer, Interpreter, Text)]: 1
'MitieIntentClassifier': 1
'SklearnIntentClassifier': 1
Tuple[('TrainingData', 'TrainingData')]: 1
Optional['TrainingDataReader']: 1
Optional['TrainingData']: 1
'RegexFeaturizer': 1
'NGramFeaturizer': 1
'CountVectorsFeaturizer': 1
'AvailableEndpoints': 1
'Doc': 1
'EntitySynonymMapper': 1
'MitieEntityExtractor': 1
'JiebaTokenizer': 1
typing.List[Token]: 1
Optional['EndpointConfig']: 1
Tuple[(List[str], List[dict])]: 1
Generator[(bs4.BeautifulSoup, None, None)]: 1
List[Publication]: 1
Publication: 1
ReplType: 1
Union[(Tuple[(AttrCategory, ...)], AttrCategory)]: 1
'GithubHost': 1
'PhabricatorHost': 1
Optional['PhabricatorObject']: 1
'SourcegraphHost': 1
'FocusObject': 1
GitObject: 1
Optional[FocusHash]: 1
Union[(Entry, None)]: 1
Generator[(Entry, None, None)]: 1
Tuple[(Decimal, Decimal)]: 1
SizedTimedRotatingFileHandler: 1
__MultiProcessed: 1
ip_address: 1
FeatureValueDict: 1
{Severity, int}: 1
DeltaComponentTypeName: 1
Fun: 1
error.Notification: 1
Translator: 1
MapTargetTranslate: 1
('self.infer_algo', 'self.feedback_algo', ['args']): 1
ast.stmt: 1
ast.FunctionDef: 1
[object]: 1
'module': 1
CStub: 1
PostgreSQLStore: 1
CachedAmazonS3Store: 1
MultipleStoresStore: 1
DatabaseInlineStore: 1
AmazonS3Store: 1
Union[(dict, list, tuple, str, None)]: 1
AbstractWebClientResponse: 1
Union[('Response', None)]: 1
List[APIKey]: 1
List[CurrentUser]: 1
celery.Task: 1
Union[(AbstractLanguage, None)]: 1
AbstractLanguage: 1
typing.Optional[dict]: 1
GuessDateResult: 1
Monitor: 1
Callable[([], dict)]: 1
Tuple[(Optional[str], Optional[float])]: 1
Tuple[(Optional[float], Optional[str])]: 1
Optional[Tuple[(type, Any, Any)]]: 1
'GeoExtent': 1
KeyArray: 1
ValueArray: 1
Optional[FigureManagerWebAgg]: 1
FigureManagerWebAgg: 1
List[Workspace]: 1
Tuple[(Workspace, str)]: 1
WorkspaceManager: 1
'_AsyncioReadWriteLock': 1
RetT: 1
'_ThreadingReadWriteLock': 1
EventT: 1
'SearchCriteria': 1
ConfigT: 1
Commands: 1
Optional[AuthenticationCredentials]: 1
Mapping[(str, Type[Any])]: 1
ResponseOk: 1
_socket.socket: 1
_PeerName: 1
Optional[_PeerCert]: 1
AbstractSet[int]: 1
Mapping[(int, FrozenSet[Flag])]: 1
FetchAttribute: 1
Sequence[Tuple[(FetchAttribute, MaybeBytes)]]: 1
'ListTree': 1
_TreeNode: 1
Optional[ListEntry]: 1
Tuple[(Pattern, Pattern)]: 1
MailboxSetInterface[MailboxDataInterface[MessageT]]: 1
Optional[FilterSetInterface]: 1
Optional[SelectedMailbox]: 1
Tuple[(AbstractSet[int], AbstractSet[int])]: 1
ReadWriteLock: 1
Tuple[(Maildir, MaildirLayout)]: 1
'_FileWriteWith[_WT]': 1
Iterable[Record]: 1
Mapping[(int, Record)]: 1
'MaildirLayout': 1
Type[FilterValueT]: 1
Type[FilterInterface]: 1
Optional[FilterSetInterface[Any]]: 1
'Params': 1
ParseableT: 1
Tuple[('Parseable', memoryview)]: 1
Tuple[(Parseable, memoryview)]: 1
Tuple[('Space', memoryview)]: 1
Tuple[('EndLine', memoryview)]: 1
Optional[Type[Command]]: 1
Optional[NotParseable]: 1
Tuple[('InvalidCommand', memoryview)]: 1
Tuple[(Command, memoryview)]: 1
Tuple[('Nil', memoryview)]: 1
Tuple[('Number', memoryview)]: 1
Tuple[('Atom', memoryview)]: 1
Tuple[('String', memoryview)]: 1
Union[(Nil, 'String')]: 1
Tuple[('QuotedString', memoryview)]: 1
Tuple[('LiteralString', memoryview)]: 1
Sequence[MaybeBytes]: 1
Sequence[MaybeBytesT]: 1
Iterator[MaybeBytes]: 1
Tuple[('ListP', memoryview)]: 1
Optional['ResponseCode']: 1
Optional[ResponseCode]: 1
ResponseT: 1
'FetchResponse': 1
Tuple[('CommandNoArgs', memoryview)]: 1
Tuple[('LoginCommand', memoryview)]: 1
Tuple[('CommandMailboxArg', memoryview)]: 1
Tuple[(_AppendMsgArg, memoryview)]: 1
Tuple[('AppendCommand', memoryview)]: 1
Tuple[('CreateCommand', memoryview)]: 1
Tuple[('ListCommand', memoryview)]: 1
Tuple[('RenameCommand', memoryview)]: 1
Tuple[('SelectCommand', memoryview)]: 1
Tuple[('StatusCommand', memoryview)]: 1
Tuple[('Flag', memoryview)]: 1
'FetchRequirement': 1
'FetchAttribute': 1
Tuple[('FetchAttribute', memoryview)]: 1
Tuple[(ListP, memoryview)]: 1
Tuple[('ExtensionOption', memoryview)]: 1
'ExtensionOptions': 1
Mapping[(bytes, ListP)]: 1
Optional[ListP]: 1
Optional[tzinfo]: 1
Tuple[('DateTime', memoryview)]: 1
Tuple[('Mailbox', memoryview)]: 1
Sequence[_SeqElem]: 1
Tuple[(_SeqElem, memoryview)]: 1
Tuple[('SequenceSet', memoryview)]: 1
Tuple[('AString', memoryview)]: 1
'SearchKey': 1
FrozenSet['SearchKey']: 1
Tuple[('SearchKey', 'SearchKey')]: 1
Tuple[(datetime, memoryview)]: 1
Tuple[('SearchKey', memoryview)]: 1
Tuple[('Tag', memoryview)]: 1
Tuple[('StatusAttribute', memoryview)]: 1
Iterable['MessageContent']: 1
_Lines: 1
Tuple[(_Lines, _Lines)]: 1
'MessageHeader': 1
Tuple[(_Folded, ParsedHeaders)]: 1
'MessageBody': 1
'_MultipartBody': 1
'_RFC822Body': 1
'_SinglepartBody': 1
Sequence[BaseHeader]: 1
Iterable[BaseHeader]: 1
Optional[ContentTypeHeader]: 1
Optional[DateHeader]: 1
Optional[Sequence[SingleAddressHeader]]: 1
Optional[ContentDispositionHeader]: 1
Optional[ContentTransferEncodingHeader]: 1
Type[bytes]: 1
Type['SieveFilter']: 1
Sequence[Command]: 1
'SieveTest': 1
Sequence[Pattern]: 1
'AddressPart': 1
'MatchType': 1
'SizeComparator': 1
FilterState: 1
Mapping[(bytes, Optional[bytes])]: 1
Sequence[Type['Command']]: 1
Mapping[(bytes, Type['Command'])]: 1
Tuple[('NoOpCommand', memoryview)]: 1
Tuple[('CapabilityCommand', memoryview)]: 1
Tuple[('StartTLSCommand', memoryview)]: 1
Tuple[('UnauthenticateCommand', memoryview)]: 1
Tuple[('LogoutCommand', memoryview)]: 1
Tuple[('HaveSpaceCommand', memoryview)]: 1
Tuple[('PutScriptCommand', memoryview)]: 1
Tuple[('ListScriptsCommand', memoryview)]: 1
Tuple[('SetActiveCommand', memoryview)]: 1
Tuple[('GetScriptCommand', memoryview)]: 1
Tuple[('DeleteScriptCommand', memoryview)]: 1
Tuple[('RenameScriptCommand', memoryview)]: 1
Tuple[('CheckScriptCommand', memoryview)]: 1
Mapping[(str, Type[ClientCommand])]: 1
SelectedMailbox: 1
typing.Type[ma.Schema]: 1
ma.fields.List: 1
typing.Iterable: 1
typing.Mapping[(str, T)]: 1
DotEnv: 1
typing.Iterator['Env']: 1
typing.Callable[([typing.Callable], typing.Callable)]: 1
typing.Mapping[(str, typing.Any)]: 1
typing.Tuple[(str, typing.Any, typing.Optional[str])]: 1
Tuple[(str, str, Optional[int])]: 1
UserSchema(): 1
typing.Callable[(..., typing.Callable)]: 1
ZtmFormatIterator: 1
List[Tuple[(str, Resource)]]: 1
List[Tuple[(str, Any)]]: 1
Response[Note]: 1
Foos: 1
{str: dbs.DB}: 1
typing.Pattern: 1
'psycopg2.extensions.cursor': 1
List[Maintainer]: 1
RequestDictionary: 1
Optional[ReleaseHistory]: 1
Union[(dict, str, T)]: 1
Set[PartialEmoji]: 1
Keeper: 1
[BModel, None]: 1
_BM: 1
_BQSet: 1
Tuple[(Any, List)]: 1
Tuple[(Text, List)]: 1
[OrderedDict, Dict]: 1
Tuple[(git.Repo, None)]: 1
Tuple[(git.Repo, Any)]: 1
List[Union[(Text, Dict)]]: 1
FILENAME: 1
Tuple[(tf.Tensor, util.LayersDict)]: 1
Tuple[(tf.Tensor, tf.Tensor, util.LayersDict)]: 1
DiscrimNet: 1
BaseRLModel: 1
'Buffer': 1
'ReplayBuffer': 1
VecEnv: 1
LayersDict: 1
PolicyLoaderFn: 1
RandomPolicy: 1
ZeroPolicy: 1
BasePolicy: 1
Iterator[Tuple[(Session, Optional['Document'])]]: 1
Union[(Document, Folder)]: 1
MockPath: 1
Tuple[(List[Folder], List[Document])]: 1
'WikiPageRevision': 1
List[Community]: 1
Union[(Or, Term)]: 1
Union[(CommunityEndpoint, str)]: 1
Iterator[Union[(Iterator, Iterator[Application])]]: 1
Tuple[(Union[(Dict[(str, Any)], List[User])], List[User], List[Dict[(str, Optional[str])]])]: 1
Union[(Response, str)]: 1
Iterator[Tuple[(Locale, str)]]: 1
'Translations': 1
Optional[Translations]: 1
tzinfo: 1
Optional[AuditEntry]: 1
Iterator[Union[(Iterator, Iterator[Converter])]]: 1
Iterator[Union[(str, bytes)]]: 1
Union[(str, bytes, None)]: 1
'VocabularyQuery': 1
Type['BaseVocabulary']: 1
'SettingsNamespace': 1
SettingsNamespace: 1
Setting: 1
TEXT: 1
Iterator[Union[(Iterator, Iterator[WhooshIndexService])]]: 1
List[ActivityEntry]: 1
Union[(str, Response, Tuple[(str, int)])]: 1
TimedSerializer: 1
Tuple[(bool, bool, Optional[User])]: 1
Union[(None, Response)]: 1
ChoiceLoader: 1
CSRFTokenField: 1
EntityQuery: 1
Iterator[Flask]: 1
Iterator[Union[(Iterator, Iterator[Callable])]]: 1
'FormContext': 1
_BabelTranslation: 1
Tuple[(Tuple, Dict[(Any, Any)])]: 1
Registry: 1
Tuple[(List[Any], List[Any], List[Any])]: 1
Iterator[AppContext]: 1
Iterator[SQLAlchemy]: 1
'MutationDict': 1
'MutationList': 1
Union[(Dict[(str, Any)], List[int], None)]: 1
CHAR: 1
Set['Group']: 1
CallBlock: 1
Union[(Type['User'], Type['Group'])]: 1
osc_bundle.OscBundle: 1
List[Tuple[(str, Union[(str, bytes, bool, int, float, tuple, list)])]]: 1
osc_message.OscMessage: 1
coroutine: 1
Generator[(None, Handler, None)]: 1
Tuple[(datetime, int)]: 1
Tuple[(Union[(int, float)], int)]: 1
Tuple[(Tuple[(int, int, int, int)], int)]: 1
CompilationContext: 1
ElementReference: 1
Tuple[(SymbolMap, Symbol)]: 1
List[List[LexicalToken]]: 1
List[LexicalToken]: 1
LexicalToken: 1
TokenVector: 1
'NamedAccess': 1
Tuple[(Reference, CompilationBuffer)]: 1
List[OpcodeDescription]: 1
'CompilationContext': 1
'CompilationBuffer': 1
Opcode: 1
Iterable[type]: 1
Iterable[list]: 1
SymbolMapper: 1
Generator[(Union[(list, tuple)], None, None)]: 1
Tuple[(ArrayLike, np.ndarray, dict)]: 1
ArrayLike: 1
'SearchState': 1
Dict[('BufferControl', 'SearchBufferControl')]: 1
'Validator': 1
Generator[(_T, None, None)]: 1
Event['History']: 1
_U: 1
_V: 1
Callable[([_F], _F)]: 1
'RegexSync': 1
'Lexer': 1
Application[bool]: 1
Application[str]: 1
Application[Any]: 1
'ProgressBar': 1
'ProgressBarCounter[_T]': 1
Iterable[_CounterItem]: 1
Optional[datetime.timedelta]: 1
List[Formatter]: 1
Clipboard: 1
'ColorDepth': 1
List[Completion]: 1
Generator[(None, bytes, None)]: 1
Layout: 1
_ExplodedList[_T]: 1
Generator[(Window, None, None)]: 1
Iterable[UIControl]: 1
Optional[BufferControl]: 1
Iterable[Window]: 1
List[Window]: 1
'Never': 1
Always: 1
InputMode: 1
'PromptSession': 1
Optional[HANDLE]: 1
Optional[TracebackType]: 1
'Context': 1
Token[_T]: 1
Dict[(Keys, str)]: 1
Union[(None, Keys, Tuple[(Keys, ...)])]: 1
Generator[(None, Union[(str, _Flush)], None)]: 1
'FormattedText': 1
'ANSI': 1
Iterable[StyleAndTextTuples]: 1
'Completion': 1
_MergedCompleter: 1
AppSession: 1
'Application[Any]': 1
Optional['Application[Any]']: 1
Generator[(AppSession, None, None)]: 1
'MenuItem': 1
Optional[List[Float]]: 1
AnyContainer: 1
StyleTransformation: 1
BaseStyle: 1
'Style': 1
'_MergedStyle': 1
List[FFProfile]: 1
List[CSSModule]: 1
Type[Client]: 1
AttrList: 1
t.AsyncD1Client: 1
Optional[Union[(SerializableType, List[SerializableType])]]: 1
List[PropertyMapping]: 1
JsonObjectSerializer: 1
JsonObjectDeserializer: 1
Callable[([Dict], Any)]: 1
List[JsonPropertyMapping]: 1
RegisteredTypeJSONEncoderType: 1
Type[JSONEncoder]: 1
PrimitiveUnionType: 1
Type[JSONDecoder]: 1
Optional[SerializableType]: 1
Type[Deserializer]: 1
Deserializer: 1
Tuple[(PrimitiveJsonType, Any)]: 1
JSONEncoder: 1
Tuple[(SimpleModel, Dict)]: 1
Tuple[(ComplexModel, Dict)]: 1
Dict[(str, Set[Tuple[(str, str)]])]: 1
tornado.template.Template: 1
asynctnt.Connection: 1
Tuple[(Union[(tf.Tensor, Dict[(str, tf.Tensor)])], Union[(tf.Tensor, Dict[(str, tf.Tensor)])], tf.Tensor)]: 1
Union[(tf.Tensor, Dict[(str, tf.Tensor)])]: 1
neovim.Nvim: 1
typing.Tuple[(typing.List[message.tasks.SubtaskResultsAccepted], int)]: 1
'TestConfigBase': 1
'Tuple[TestConfigBase, Type[NodeTestPlaybook]]': 1
typing.Optional[typing.Match]: 1
typing.Dict[(NodeId, 'NodeConfig')]: 1
NodeConfig: 1
Dict[(NodeId, NodeConfig)]: 1
typing.Tuple[(typing.Optional[bool], typing.Optional[typing.Match])]: 1
'List[NodeId]': 1
semantic_version.Spec: 1
Optional[Deferred]: 1
'OSInfo': 1
List[NetworkMessage]: 1
message.base.Message: 1
Optional[message.base.Message]: 1
typing.Iterator['message.base.Base']: 1
message.tasks.RejectReportComputedTask: 1
Dict[(str, Dict[(int, int)])]: 1
Optional['HyperdriveClientOptions']: 1
ClientOptions: 1
List[Resource]: 1
crypto.PKey: 1
typing.Optional[Deferred]: 1
Dict[(Text, Callable)]: 1
'NotEnoughFunds': 1
List[golem_sci.Payment]: 1
'_DenyAcl': 1
'_AllowAcl': 1
'TaskTypeInfo': 1
'Task': 1
'ExtraData': 1
golem_messages.message.ComputeTaskDef: 1
DockerTaskThread: 1
Dict[(EnvId, bool)]: 1
List[Environment]: 1
Type[TaskApiPayloadBuilder]: 1
'TaskClient': 1
TaskId: 1
SubtaskDefinition: 1
HyperdriveClientOptions: 1
'DockerImage': 1
'DockerDirMapping': 1
List[DockerBind]: 1
Hypervisor: 1
'MemoryChecker': 1
'DockerPrerequisites': 1
'DictSerializable': 1
Optional[Tuple[(bytes, bytes)]]: 1
Optional[Stats]: 1
'DeferredSeq': 1
Dict[(str, Environment)]: 1
Optional[Environment]: 1
Optional[DockerEnvironment]: 1
Dict[(str, Tuple[(str, bool)])]: 1
HardwarePreset: 1
Tuple[(str, Dict[(str, int)])]: 1
'ProviderEfficacy': 1
ProviderEfficacy: 1
Optional[DockerTaskThread]: 1
KeysAuth: 1
Optional[OpenCVImgRepr]: 1
Optional[ImgRepr]: 1
Tuple[(Optional[VerificationTask], Optional[Type[CoreVerifier]])]: 1
FloatingPointBox: 1
Optional[Crop]: 1
Tuple[(List[Crop], List[Dict[(str, Any)]])]: 1
Tuple[(List[Crop], Dict[(str, Any)])]: 1
List[PokerCard]: 1
MovieItem: 1
ExecutionTable: 1
ServiceTable: 1
PortTable: 1
QuotaTable: 1
RoleTable: 1
UserTable: 1
Union[(None, User)]: 1
Tuple[(ArgumentParser, Namespace)]: 1
SimulatedNode: 1
Union[(BaseBackend, None)]: 1
List[VolumeDescription]: 1
List[DockerHostConfig]: 1
Union[(DockerHostConfig, None)]: 1
Callable[([Callable], CFunc)]: 1
Callable[([Type], Type)]: 1
(bool, dict): 1
(bool, pd.DataFrame): 1
EventManager: 1
Iterable[package.Package]: 1
Mapping[(package.Package, List[compatibility_store.CompatibilityResult])]: 1
List[dependency_highlighter.OutdatedDependency]: 1
CheckResponse: 1
credentials.Credentials: 1
Optional[credentials.Credentials]: 1
Bootstrap: 1
Tuple[(Model, str)]: 1
Tuple[(Tuple[(ndarray, ndarray, ndarray, ndarray)], Index)]: 1
Tuple[(Iterable[Seq], Iterable[Seq])]: 1
List[Seq]: 1
Dict[(Seq, Set[Seq])]: 1
Tuple[(Alphabet, Inv_Alphabet)]: 1
Tuple[(Seq, Seq)]: 1
Set[Seq]: 1
MetsDocument: 1
Dict[(str, ImageInfo)]: 1
Dict[(str, PhysicalItem)]: 1
TocEntry: 1
List[TocEntry]: 1
ImageInfo: 1
Iterable[Progress]: 1
'Celery': 1
Tuple[(Response, int, Dict[(str, Any)])]: 1
Union[(Tuple[(Response, int)], Exception)]: 1
Union[(Alert, JSON)]: 1
Optional['Customer']: 1
List['Customer']: 1
Optional['Blackout']: 1
List['Blackout']: 1
List['User']: 1
Optional['Heartbeat']: 1
List['Heartbeat']: 1
Optional['Permission']: 1
List['Permission']: 1
Iterator[WebhookRule]: 1
Optional[dt]: 1
Iterable['PluginBase']: 1
'Page': 1
'Alert': 1
Optional['Alert']: 1
TypeMap: 1
PolygraphInputValue: 1
PolygraphField: 1
TypeCheckResult: 1
Tuple[(str, str, List[str])]: 1
Paste: 1
'TxType': 1
'TxItem': 1
'ReadTransaction': 1
Shard: 1
boto3.Session: 1
Callable[([web.Request], Awaitable[web.Response])]: 1
'Shares': 1
'CombineSession': 1
(None, uuid.UUID): 1
'SplitSession': 1
'SharedSessionUser': 1
(datetime.date or None): 1
BaseConnection: 1
KafkaProducer: 1
'Outbound': 1
'Friend': 1
'Inbound': 1
ConsistencyLevel: 1
PauliSum: 1
EstimationResult: 1
Tuple[(Union[(PauliSum, PauliTerm)], Union[(float, PauliSum, PauliTerm)])]: 1
Tuple[(np.ndarray, Dict[(str, str)])]: 1
'BernsteinVazirani': 1
Tuple[(List[int], Union[(int, float)], Program)]: 1
Addr: 1
BinaryExecutableResponse: 1
PauliTerm: 1
List[Program]: 1
Union[(float, int)]: 1
List[Optional[Tuple[(int, int)]]]: 1
Dict[(str, ParameterSpec)]: 1
Optional[BinaryExecutableResponse]: 1
PyQuilExecutableResponse: 1
pdoc.doc.Module: 1
typing.Tuple[(typing.Any, bool)]: 1
List[WindowInfo]: 1
Iterator[Tuple[(int, str, str)]]: 1
Optional[Future]: 1
'AbstractConnection': 1
AbstractConnectionManager: 1
'AbstractSession': 1
ISession: 1
AbstractCallManager: 1
AbstractRegistrationManager: 1
AbstractPublisherManager: 1
AbstractSubscriptionManager: 1
Optional[ISubscription]: 1
AbstractCall: 1
AbstractPublisher: 1
LocalPath: 1
List[ScryCard]: 1
List[ScrySet]: 1
Dict[(UUID, ScryCard)]: 1
ser_interface.SerializationDialect: 1
Iterable[Tuple[(Optional[str], str, Optional[str], Optional[int], Optional[str])]]: 1
List[Tuple[(str, Optional[str], Optional[str])]]: 1
Type['SerializationDialect']: 1
Union[(ScryObject, List[ScryObject])]: 1
Optional[ProfileList]: 1
List[Tuple[(int, int, int)]]: 1
CFGBlock: 1
Optional[NodeNG]: 1
List[Union[(astroid.AssignName, astroid.Name)]]: 1
Tuple[(astroid.Module, TypeInferer)]: 1
Tuple[(List[type], type)]: 1
AsyncIterator[_RecvType]: 1
Optional['Deadline']: 1
'Deadline': 1
_Metadata: 1
_Headers: 1
Mapping[(str, const.Handler)]: 1
FileDescriptorProto: 1
'List[IServable]': 1
'HealthCheckResponse.ServingStatus': 1
Dict[(asyncio.Event, 'asyncio.Future[bool]')]: 1
List[Tuple[(str, int, int)]]: 1
Iterator[List[Any]]: 1
Tuple[(List[int], List[int], int)]: 1
Tuple[(bool, Tuple[(int, ...)])]: 1
Iterator[Tuple[(bool, Tuple[(int, ...)])]]: 1
Iterator[Exercise]: 1
Iterator[Company]: 1
Tuple[(int, int, str)]: 1
Tuple[(List[int], Optional[Player], Optional[Player])]: 1
Tuple[(str, List[int])]: 1
Iterator[Tuple[(int, int, str)]]: 1
Optional[ValueExtractor]: 1
[(bool, str, str)]: 1
[(int, str, str)]: 1
(bool, dict, str): 1
req.Response: 1
Reducer: 1
Union[(Chrome, Firefox)]: 1
Unit('Ω'): 1
Unit('H'): 1
Unit('V/√Hz'): 1
Unit('A/s'): 1
Unit('h'): 1
Unit('C'): 1
List['ManagementObject']: 1
'ManagementObject': 1
List[List[ManagementObject]]: 1
PowerShell: 1
VHDFormat: 1
VHDType: 1
Tuple[(System, Workplane, LineSegment2d)]: 1
_Coord: 1
Tuple[(List[Union[(_Coord, Tuple[(_Coord, _Coord)])]], int)]: 1
Union[(str, Pos)]: 1
Tuple[(str, List[Tuple[(int, float, float)]])]: 1
List[Tuple[(Tuple[(int, int)], ...)]]: 1
Tuple[(Graph, List[int], List[Tuple[(int, int)]], Dict[(int, Tuple[(float, float)])], Dict[(int, int)], Dict[(int, int)])]: 1
List[_CoordsPair]: 1
Tuple[(Tuple[(_Coord, ...)], ...)]: 1
List[Assignment]: 1
HlsOperation: 1
Union[(RtlSignal, Value)]: 1
Generator[(Assignment, None, None)]: 1
Generator[(Union[('RtlSignal', 'Operator')], None, None)]: 1
Assignment: 1
MakeParamsShared: 1
MakeClkRstAssociations: 1
Tuple[(str, int, Callable[([RtlSignalBase, Value], str)])]: 1
Union[(bool, None, Tuple[(int, int)])]: 1
Tuple[(int, Union[(int, RtlSignal)], bool)]: 1
ResourceContext: 1
Tuple[(bool, List[HdlStatement])]: 1
Generator[(Union[(Tuple[(Tuple[(int, int)], 'TransTmpl')], 'OneOfTransaction')], None, None)]: 1
Generator[(Union[(Tuple[(Tuple[(int, int)], TransTmpl)], 'OneOfTransaction')], None, None)]: 1
Generator[(Union[(RtlSignalBase, 'Operator')], None, None)]: 1
Tuple[(RtlSignal, RtlSignal)]: 1
List[Tuple[(List[bool], List[bool])]]: 1
BramPort_withoutClk: 1
ElementTree: 1
List[Union[(ipaddress.IPv4Address, ipaddress.IPv6Address)]]: 1
Union[(None, ipaddress.IPv4Address, ipaddress.IPv6Address)]: 1
'pandas.DataFrame': 1
CrumbArgsSequences: 1
Iterator[hansel.Crumb]: 1
CrumbArgsMap: 1
Iterator[Tuple[(hansel.Crumb, hansel.Crumb)]]: 1
Dict[(str, List[hansel.Crumb])]: 1
'a{sv}': 1
Tuple[(bytes, int, int)]: 1
Measure: 1
Tuple[(Replacement, bool)]: 1
'Constraint': 1
Generator[('Node', None, None)]: 1
Union[(None, Dict[(str, Any)], List[Any], Node)]: 1
Tuple[(Set, Set, Set)]: 1
Iterable[requests.Response]: 1
KeyValueStateStore: 1
StoreFactory: 1
KT: 1
Iterator[KT]: 1
StateStoreSupplier[(KT, VT)]: 1
InMemoryStateStoreSupplier: 1
ValueStoreFactory[KT]: 1
ValueStoreFactory[str]: 1
ValueStoreFactory[float]: 1
ValueStoreFactory[bytes]: 1
KeyValueStoreFactory[(KT, VT)]: 1
KeyValueStoreFactory[(KT, str)]: 1
KeyValueStoreFactory[(KT, float)]: 1
KeyValueStoreFactory[(KT, bytes)]: 1
InMemoryKeyValueStoreFactory[(KT, VT)]: 1
StateStore: 1
AddressState: 1
qrlmining_pb2.GetBlockMiningCompatibleResp: 1
qrlmining_pb2.GetLastBlockHeaderResp: 1
qrlmining_pb2.GetBlockToMineResp: 1
qrlmining_pb2.SubmitMinedBlockResp: 1
qrldebug_pb2.GetFullStateResp: 1
GetNodeInfoResp: 1
Optional[qrllegacy_pb2.LegacyMessage]: 1
List[AddressItem]: 1
AddressItem: 1
[int, AddressItem]: 1
Optional[Block]: 1
Set[IPMetadata]: 1
TokenTransaction: 1
Dict[(str, Union[(str, datetime)])]: 1
discord.Server: 1
Tuple[(Point, Point)]: 1
Rectangle: 1
TriggerZone: 1
List[TriggerZone]: 1
UrlShortener: 1
Kresd: 1
fapi.ForisForm: 1
typing.Tuple[(fapi.ForisAjaxForm, typing.Callable[([dict], typing.Tuple[('str', 'str')])])]: 1
Tuple[(Hashable, Hashable)]: 1
Tuple[(dns.message.Message, str)]: 1
inventory_models.InstalledApplication: 1
models.AvailableOSUpdate: 1
Union[(None, Type[hashes.SHA1], Type[hashes.SHA256], Type[hashes.SHA512])]: 1
Union[(None, Type[padding.PKCS1v15])]: 1
OAuthRemoteApp: 1
'Nickname': 1
(dict, dict): 1
(Message, str, str, list): 1
'Typing': 1
List[Feature]: 1
'Seqdiff': 1
'Feature': 1
'Error': 1
Tuple[(bool, type)]: 1
Bar: 1
cpt.FloatingBody: 1
Animation: 1
List[LinearPotentialFlowProblem]: 1
Union[(xr.DataArray, xr.Dataset)]: 1
xr.DataArray: 1
Iterable[List[Tuple[(int, int)]]]: 1
List[ChaikaResult]: 1
'PandaViewer.gallery.GenericGallery': 1
MetadataManager: 1
(str, Optional[str]): 1
Tuple[(str, List[TypeMessageEntity])]: 1
'TelegramClient': 1
'typing.Optional[types.TypeReplyMarkup]': 1
ir.Module: 1
CallGraph: 1
Char: 1
ir.Typ: 1
PrintInformation: 1
ObjectsModel: 1
MultiBuildPlateModel: 1
CuraApplication: 1
ContainerRegistry: 1
MachineActionManager: 1
ExtruderManager: 1
MachineManager: 1
DiscoveredPrintersModel: 1
DiscoveredPrinter: 1
CuraContainerRegistry: 1
DefinitionContainer: 1
InstanceContainer: 1
List[LayerPolygon]: 1
Optional['LayerData']: 1
'LayerDataDecorator': 1
Tuple[(List[Tuple[(GlobalStack, str, str)]], List[Tuple[(GlobalStack, str, str)]])]: 1
Optional[Layer]: 1
Dict[(int, Layer)]: 1
'Backups': 1
'Interface': 1
Optional[Dict[(str, Optional[str])]]: 1
Tuple[(Optional[bytes], Optional[Dict[(str, Any)]])]: 1
Tuple[(ResponseData, Optional[AuthenticationResponse])]: 1
ResponseData: 1
'OAuth2Settings': 1
'ConnectionType': 1
'ConnectionState': 1
List['PrinterOutputModel']: 1
List['PrinterConfigurationModel']: 1
'FirmwareUpdateState': 1
'PrinterOutputModel': 1
Optional['MaterialOutputModel']: 1
Optional[ExtruderConfigurationModel]: 1
List['ExtruderOutputModel']: 1
'PrinterOutputController': 1
Optional['PrintJobOutputModel']: 1
Optional[PrinterConfigurationModel]: 1
Optional[QImage]: 1
Optional['PrinterConfigurationModel']: 1
'ShapeArray': 1
Tuple[(Optional['ShapeArray'], Optional['ShapeArray'])]: 1
Optional[numpy.array]: 1
Optional['InstanceContainer']: 1
List[ContainerNode]: 1
Optional['MaterialNode']: 1
Dict[(str, ContainerNode)]: 1
Optional[SettingVisibilityPreset]: 1
List[SettingVisibilityPreset]: 1
'NetworkedPrinterOutputDevice': 1
Dict[(str, DiscoveredPrinter)]: 1
List['DiscoveredPrinter']: 1
Optional[ZipFile]: 1
Tuple[(Optional[bytes], Optional[Dict[(str, str)]])]: 1
Optional['MachineAction']: 1
'GCodeListDecorator': 1
'SliceableObjectDecorator': 1
Optional[ExtruderStack]: 1
'ZOffsetDecorator': 1
'PropertyEvaluationContext': 1
'datetime': 1
'USBPrinterOutputDeviceManager': 1
Optional['Profile']: 1
Optional['Preferences']: 1
Optional['MachineInstance']: 1
UM3OutputDevicePlugin: 1
Optional[Dict[(str, ClusterMaterial)]]: 1
Dict[(str, LocalMaterial)]: 1
Union[(io.BytesIO, io.StringIO)]: 1
ClusterApiClient: 1
List[ConfigurationChangeModel]: 1
UM3PrintJobOutputModel: 1
PrinterConfigurationModel: 1
PrinterOutputModel: 1
MaterialOutputModel: 1
CloudClusterResponse: 1
List[PrinterOutputDevice]: 1
List[Optional[InstanceContainer]]: 1
Optional[InstanceContainer]: 1
Controller: 1
Optional[ToolHandle]: 1
Optional[Plane]: 1
'Preferences': 1
Optional['Job']: 1
'JobQueue': 1
'ConfigurationErrorMessage': 1
'MimeType': 1
List['Logger']: 1
Union[(Tuple[(float, float)], bool)]: 1
shapely.geometry.Polygon: 1
Dict[(str, 'OutputDevicePlugin')]: 1
Optional['OutputDevicePlugin']: 1
Optional[subprocess.Popen]: 1
Optional['FileReader']: 1
'FileHandler': 1
Optional[RenderPass]: 1
SortedListWithKey: 1
'ShaderProgram': 1
FrameBufferObject: 1
Texture: 1
ShaderProgram: 1
QOpenGLBuffer: 1
'OpenGL': 1
AxisAlignedBox: 1
threading.Lock: 1
'SceneNode': 1
List[Camera]: 1
'SceneNodeDecorator': 1
'Camera': 1
Ray: 1
typing.Iterator['SceneNode']: 1
RelationType: 1
'ContainerInterface': 1
'SettingInstance': 1
Optional[Validator]: 1
InstanceState: 1
Optional[ValidatorState]: 1
_VisitResult: 1
Optional[type]: 1
List['SettingDefinition']: 1
List[ContainerInterface]: 1
List[DefinitionContainerInterface]: 1
Tuple[(Dict[(str, InstanceContainer)], Dict[(str, Dict[(str, Any)])])]: 1
List[Tuple[(str, Dict[(str, Any)])]]: 1
List[RenderBatch]: 1
QSizeF: 1
OutputDeviceManagerProxy: 1
ContainerProvider: 1
DataFrameType: 1
typing.List[methods.Method]: 1
Iterable[_Frame]: 1
Callable[([], bool)]: 1
List[Jar]: 1
Tuple[(int, List[int])]: 1
List[Tuple[(str, datetime)]]: 1
grSim_Packet.grSim_Packet: 1
socket: 1
Tuple[(Path, float)]: 1
Tuple[(Position, Position)]: 1
List[Robot]: 1
Robot: 1
Dict[(str, Union[(float, List[Dict[(str, Any)]])])]: 1
BallFilter: 1
Ball: 1
Type[Tactic]: 1
Idle: 1
Dict[(str, Dict[(str, List[str])])]: 1
Type[Strategy]: 1
Tuple[(Dict[(Player, AICommand)], List[Dict])]: 1
List[EngineCommand]: 1
Dict[(Player, AICommand)]: 1
EngineCommand: 1
List[Obstacle]: 1
'MultiTargetEncoder': 1
Tuple[(torch.FloatTensor, torch.FloatTensor)]: 1
typing.Optional[Fault]: 1
Tuple[(Optional[str], Optional[str], Optional[str], Optional[str])]: 1
AnyDb: 1
Union[(bool, Path)]: 1
Dict[(str, typeAny)]: 1
'FileQueries': 1
FileBrowserResultItem: 1
BaseAction: 1
'ExtensionDownloader': 1
LastCommit: 1
ExtensionRecord: 1
PreferenceItems: 1
Optional[PreferenceItem]: 1
'DeferredResultRenderer': 1
List[ManifestPreferenceItem]: 1
Optional[ManifestPreferenceItem]: 1
'ExtensionDb': 1
Optional[ExtensionRecord]: 1
'ExtensionRunner': 1
Optional[ExtRunError]: 1
Records: 1
Optional[Value]: 1
FileQueries: 1
GithubExtension: 1
discord.VoiceClient: 1
IntList: 1
'Just': 1
'Get': 1
Callable[([Any], Monad)]: 1
'MonadWriter': 1
AsyncIterable: 1
'AsyncObservable[T2]': 1
AsyncDisposable: 1
AsyncChainedObservable: 1
Callable[([AsyncObservable[T1]], AsyncObservable[T2])]: 1
Callable[([AsyncObservable], AsyncIterable)]: 1
AsyncSubscriptionFactory: 1
'ListMeasure': 1
'Measure': 1
'MeasureBatch': 1
BatchIterator: 1
AbsGroup: 1
'DaGroupDict': 1
Chunks: 1
'Shape': 1
'Refrigerant': 1
'PostSolver': 1
'Solver_algorithm': 1
'PreSolver': 1
Scripts: 1
Dict[(str, List[models.Episode])]: 1
BaseDownloadService: 1
'Followed': 1
List[BangumiItem]: 1
'T': 1
'pw.ModelSelect': 1
Tuple[(List[DataSourceItem], List[Subtitle])]: 1
BaseWebsite: 1
Iterator[Dict[(str, BaseWebsite)]]: 1
Tuple[(List[models.DataSourceItem], List[models.Subtitle])]: 1
(dict, List[models.Episode]): 1
VideoProvider: 1
Optional[ColorStr]: 1
PasswordStatus: 1
'Sequence[ParticipationActivityChoice]': 1
'EmailMessage': 1
'Sequence[ParticipationActivity, ParticipationActivityChoice]': 1
'Sequence[QuestionAnswer]': 1
'Sequence[Participant]': 1
MenuItems: 1
SSLContext: 1
'Integer': 1
'Expiration': 1
[Token]: 1
AbstractSyntaxTree: 1
IDisplay: 1
SyscallStatus: 1
Tuple[(str, QRCode)]: 1
Tuple[(MeshGrid, DistanceMap, DirectionMap)]: 1
EmptyQuerySet: 1
'EmptyQuerySet': 1
'Locale': 1
'Agebasis': 1
'Taxonomy': 1
'ErrorModel': 1
'Occurrence': 1
'TaxonomyInner': 1
Iterator[VuforiaDatabase]: 1
Iterator[VWS]: 1
Iterator[CloudRecoService]: 1
'mako:./template.html': 1
'json': 1
(InlineKeyboardMarkup or None): 1
'Author': 1
List['Author']: 1
'Book': 1
(BytesResult or None): 1
ttypes.InlineKeyboardMarkup: 1
Iterable[Iterable]: 1
Iterable['Dataset']: 1
Dict[(str, Tuple[(List[str], Reader)])]: 1
WordAlignmentRunnerExecutable: 1
GreedyRunExecutable: 1
LabelRunExecutable: 1
TensorExecutable: 1
Tuple[(tf.Tensor, MultiHeadLoopStateTA)]: 1
QFrame: 1
Munch: 1
List[FFMetadataChapter]: 1
'dict{str: str 0xNNNNNNNN}': 1
List[JSON]: 1
Generator[('BaseDataProvider', None, None)]: 1
Union[(Sequence[Any], Any)]: 1
Union[('Logger', None)]: 1
List[Handler]: 1
'ProfilesModel': 1
Day: 1
Month: 1
'FakeBacklightSysfs': 1
typing.Iterable[typing.List[str]]: 1
AbstractDataset: 1
AbstractModel: 1
Iterable[AbstractHook]: 1
Iterable[Tuple[(str, Iterable[str])]]: 1
List[Tuple[(str, dict, TrainingTrace)]]: 1
ReleasedSemaphore: 1
EpochData: 1
Iterable[Hashable]: 1
typing.Tuple[(str, typing.Any)]: 1
Tuple[(List[str], List[Tuple[(str, Exception)]])]: 1
Optional[TreeNode]: 1
'float': 1
Tuple[(List[int], Optional[str])]: 1
Tuple[(bytearray, int)]: 1
Tuple[(int, int, List[int], ByteString, ByteString, ByteString)]: 1
Optional[Tuple[(LockCaller, LockCaller)]]: 1
Optional[MasternodeConfig]: 1
List[KnownLoggerType]: 1
PathAndParams: 1
PathAndPathItem: 1
RoutingConfiguration: 1
'AttrDict': 1
Resources: 1
Tuple[(numpy.array, numpy.array)]: 1
List[List[IndexedInstance]]: 1
'IndexedDataset': 1
'IndexedInstance': 1
Tuple[(List[str], int)]: 1
Dict[(str, 'Layer')]: 1
Dict[(Any, float)]: 1
DeepQaModel: 1
Tuple[(PackagesType, PackagesType, Set[str])]: 1
Tuple[(PackagesType, PackagesType, Set[str], Set[str])]: 1
Iterable[Tuple[(str, JsonDict)]]: 1
Tuple[(MatchTuple, bool)]: 1
Tuple[(str, str, List[JsonDict], List[str])]: 1
predictors.OpenIePredictor: 1
predictors.CorefPredictor: 1
predictors.ConstituencyParserPredictor: 1
Tuple[(List[str], List[Set[str]])]: 1
Tuple[(Tuple[(str, ...)], str)]: 1
Dict[(str, Union[(torch.Tensor, Dict[(str, torch.Tensor)])])]: 1
Dict[(str, DataArray)]: 1
ProductionRule: 1
List[ProductionRule]: 1
'NamespaceSwappingField': 1
'SequenceField': 1
'AdjacencyField': 1
'Field': 1
'MetadataField': 1
List[DataArray]: 1
Iterator[Union[(str, int)]]: 1
'SequenceLabelField': 1
Iterator[Token]: 1
Iterable[List[Instance]]: 1
List[List[Instance]]: 1
Tuple[(List[Dict[(str, str)]], List[Tuple[(int, int)]], List[str])]: 1
Tuple[(List[str], List[int], List[int])]: 1
TextField: 1
Dict[(str, List[TableColumn])]: 1
Iterable[SqlData]: 1
List[List[Tuple[(int, int)]]]: 1
Optional[Instance]: 1
Dict[(str, List[TokenType])]: 1
TokenType: 1
Dict[(str, TokenType)]: 1
Dict[(str, List[numpy.ndarray])]: 1
List[spacy.tokens.Token]: 1
Dict[(Type, int)]: 1
Tuple[(Dict[(str, List[str])], List[Tuple[(str, str)]])]: 1
'Date': 1
Callable[([Direction, World], QuaRelType)]: 1
Tuple[(Instance, JsonDict)]: 1
'BeamSearch': 1
Dict[(int, List[State])]: 1
List[Dict[(Tuple[(int, ...)], Set[int])]]: 1
Dict[(str, Tuple[(torch.Tensor, torch.Tensor, List[int])])]: 1
'LambdaGrammarStatelet': 1
List[Dict[(str, Tuple[(torch.Tensor, torch.Tensor, List[int])])]]: 1
'ChecklistStatelet': 1
ActionRepresentation: 1
'GrammarStatelet': 1
Type[T]: 1
Union[(int, List[int])]: 1
Tuple[(Instance, int)]: 1
Tuple[(bool, List[int])]: 1
Optional['RegularizerApplicator']: 1
Tuple[(torch.FloatTensor, torch.LongTensor, torch.LongTensor, torch.FloatTensor)]: 1
Tuple[(PackedSequence, Tuple[(torch.Tensor, torch.Tensor)])]: 1
Tuple[(Union[(torch.Tensor, PackedSequence)], Tuple[(torch.Tensor, torch.Tensor)])]: 1
Tuple[(np.ndarray, int)]: 1
'BasicTextFieldEmbedder': 1
TransformerEncoder: 1
'BagOfWordCountsTokenEmbedder': 1
BertModel: 1
'TokenCharactersEncoder': 1
'ElmoTokenEmbedderMultiLang': 1
'ElmoTokenEmbedder': 1
Callable[([int, int], int)]: 1
'SimpleState': 1
List[SimpleState]: 1
InitializerApplicator: 1
Tuple[(torch.Tensor, Dict[(str, torch.Tensor)])]: 1
'GanTestTrainer': 1
'MultiTaskTrainer': 1
'GanOptimizer': 1
Archive: 1
GrammarStatelet: 1
'BidafEnsemble': 1
Iterator[JsonDict]: 1
'TrainerPieces': 1
'CallbackTrainer': 1
'LogToTensorboard': 1
'UpdateMovingAverage': 1
'UpdateLearningRate': 1
'Checkpoint': 1
'UpdateMomentum': 1
List[Callback]: 1
Dict[(Tuple[(int, ...)], int)]: 1
torch.ByteTensor: 1
Union[(float, Tuple[(float, ...)], Dict[(str, float)], Dict[(str, List[float])])]: 1
Tuple[(List[Tuple[(Tuple[(int, int)], ...)]], Dict[(Tuple[(int, int)], Tuple[(Tuple[(int, int)], ...)])])]: 1
List[TypedStringSpan]: 1
runtime.Memory.Namespace: 1
(Battle or None): 1
Union[(str, int, float, EvaluationError)]: 1
Union[(Tuple[(int, int)], str)]: 1
Union[(Set, EvaluationError)]: 1
Union[(bool, int, float, Expression, str)]: 1
IntTensorType: 1
FloatTensor: 1
TensorType: 1
Dict[(str, Attribute)]: 1
'ClassFile': 1
ClassVersion: 1
ConstantPool: 1
Iterable[ConstantClass]: 1
BootstrapMethod: 1
JVMType: 1
List[JVMType]: 1
CodeAttribute: 1
Iterator[Method]: 1
Optional[Method]: 1
ConstantValueAttribute: 1
Optional[Field]: 1
MethodDescriptor: 1
Iterator[Instruction]: 1
ClassLoader: 1
RedisDict: 1
Tuple[(List[str], Optional[str], List[str])]: 1
Eop: 1
HTMLElement: 1
Union[(Node, _AttrValueType)]: 1
DOMTokenList: 1
'CSSStyleRule': 1
CSSStyleDeclaration: 1
CSSStyleRule: 1
CSSRuleList: 1
CustomElementsRegistry: 1
'Tag': 1
NodeList: 1
Callable[([Event], Awaitable)]: 1
module.Application: 1
module.HTTPServer: 1
HTTPServer: 1
Div: 1
H1: 1
tag.Tag: 1
(EntityValue or None): 1
GenericTemplateElement: 1
Dict[(str, ExecutionProfile)]: 1
StackdriverResult: 1
CheckData: 1
Consul: 1
Iterable[Tuple[(str, List[str])]]: 1
StorySlugMapper: 1
DirectoryFetcher: 1
'Recorder': 1
'Responder': 1
Iterator[Union[(Recorder, Responder)]]: 1
PathFunc: 1
'Story': 1
Optional[Arrow]: 1
Optional[MetaFormat]: 1
Optional[DataFormat]: 1
Tuple[(ByteFunc, ByteFunc)]: 1
Optional[F]: 1
StoryPathMapper: 1
UpdateTask: 1
'UserFavorites': 1
'NullSCM': 1
'GithubContent': 1
'PipelineQueue': 1
'ExtensionClassContainerImpl1links': 1
'StringParameterDefinition': 1
StringParameterValue: 1
'GithubRepositorieslinks': 1
'Link': 1
'PipelineRun': 1
List[PipelineRunartifacts]: 1
'GithubRepositories': 1
GithubRepositorieslinks: 1
List[GithubRepository]: 1
'Label1': 1
'ListView': 1
'PipelineBranchesitempullRequest': 1
PipelineBranchesitempullRequestlinks: 1
'GithubOrganizationlinks': 1
'PipelinelatestRunartifacts': 1
'EmptyChangeLogSet': 1
'Users': 1
'PipelineActivities': 1
PipelinelatestRun: 1
'GithubRespositoryContainer': 1
GithubRespositoryContainerlinks: 1
GithubRepositories: 1
'ScmOrganisations': 1
'PipelineImpllinks': 1
'PipelineRunNodeSteps': 1
'GenericResource': 1
'CauseUserIdCause': 1
'PipelineActivity': 1
List[PipelineActivityartifacts]: 1
'PipelineFolderImpl': 1
'GithubFile': 1
GithubContent: 1
'FreeStyleProjecthealthReport': 1
'PipelineBranchesitem': 1
PipelineBranchesitemlatestRun: 1
PipelineBranchesitempullRequest: 1
'QueueBlockedItem': 1
'GithubRepositorylinks': 1
'PipelineActivityartifacts': 1
'GithubRespositoryContainerlinks': 1
'FreeStyleBuild': 1
EmptyChangeLogSet: 1
'PipelineStepImpl': 1
PipelineStepImpllinks: 1
InputStepImpl: 1
'AllView': 1
'PipelineStepImpllinks': 1
'PipelineBranchesitempullRequestlinks': 1
'GithubOrganization': 1
GithubOrganizationlinks: 1
'MultibranchPipeline': 1
'BranchImpl': 1
BranchImplpermissions: 1
BranchImpllinks: 1
PipelineRunImpl: 1
'ClockDifference': 1
'HudsonMasterComputermonitorData': 1
SwapSpaceMonitorMemoryUsage2: 1
ResponseTimeMonitorData: 1
ClockDifference: 1
'ResponseTimeMonitorData': 1
'PipelineRunNode': 1
List[PipelineRunNodeedges]: 1
'ExtensionClassImpllinks': 1
'FavoriteImpl': 1
FavoriteImpllinks: 1
PipelineImpl: 1
'ClassesByClass': 1
'ExtensionClassContainerImpl1': 1
ExtensionClassContainerImpl1links: 1
ExtensionClassContainerImpl1map: 1
'BranchImpllinks': 1
'QueueItemImpl': 1
'CauseAction': 1
List[CauseUserIdCause]: 1
'InputStepImpl': 1
InputStepImpllinks: 1
'DiskSpaceMonitorDescriptorDiskSpace': 1
'ComputerSet': 1
List[HudsonMasterComputer]: 1
'PipelineImpl': 1
PipelineImpllinks: 1
'PipelineRuns': 1
'Body': 1
'Queue': 1
List[QueueBlockedItem]: 1
'Organisation': 1
'GithubRepositorypermissions': 1
'PipelineRunNodes': 1
'Hudson': 1
List[HudsonassignedLabels]: 1
AllView: 1
UnlabeledLoadStatistics: 1
List[AllView]: 1
'PipelineRunImpllinks': 1
'PipelinelatestRun': 1
List[PipelinelatestRunartifacts]: 1
'HudsonassignedLabels': 1
'HudsonMasterComputer': 1
List[HudsonMasterComputerexecutors]: 1
Label1: 1
HudsonMasterComputermonitorData: 1
'SwapSpaceMonitorMemoryUsage2': 1
'ExtensionClassContainerImpl1map': 1
'UnlabeledLoadStatistics': 1
'PipelineRunartifacts': 1
'Pipelines': 1
'PipelineRunImpl': 1
PipelineRunImpllinks: 1
'GithubRepository': 1
GithubRepositorylinks: 1
GithubRepositorypermissions: 1
'FavoriteImpllinks': 1
'Organisations': 1
'FreeStyleProjectactions': 1
'BranchImplpermissions': 1
'InputStepImpllinks': 1
'QueueLeftItem': 1
'GithubScm': 1
GithubScmlinks: 1
'PipelineRunNodeedges': 1
'PipelineRunSteps': 1
'GithubScmlinks': 1
'ExtensionClassImpl': 1
ExtensionClassImpllinks: 1
'StringParameterValue': 1
'PipelineBranchesitemlatestRun': 1
'HudsonMasterComputerexecutors': 1
'DefaultCrumbIssuer': 1
'PipelineBranches': 1
Visit: 1
Blob: 1
Storage: 1
SystemPlatform: 1
datastore.Entity: 1
ScraperInput: 1
acts_scraper.ScraperResult: 1
my_module.MyClass: 1
my_module.MySubClass: 1
Generator[(Callable[([int], None)], None, None)]: 1
QgsMapSettings: 1
'db_manager.db_plugins.DBConnector': 1
CadastreResources: 1
CadastreService: 1
JsonType: 1
Tuple[(dict, bytes)]: 1
DeckManager: 1
GitStatus: 1
[TemplateResponse, redirect]: 1
[404, redirect]: 1
'kataja.syntax.SyntaxAPI': 1
'kataja.UIManager': 1
'kataja.PaletteManager': 1
'kataja.saved.Forest': 1
'kataja.ForestDrawing': 1
'kataja.ViewManager': 1
'kataja.GraphScene': 1
'kataja.GraphView': 1
'kataja.saved.KatajaDocument': 1
QtGui.QTextCharFormat: 1
Ui: 1
'MigParser': 1
Type['MigParser']: 1
splinter.BSpline: 1
List[Match]: 1
'Formatter': 1
'DataFormat': 1
nodes.Component: 1
Union[(int, Optional[T])]: 1
Union[(str, Optional[T])]: 1
types.MappingProxyType: 1
ValidateFunc: 1
Iterator[ErrorContext]: 1
Optional[_Handler]: 1
Tuple[(str, int, Optional[str])]: 1
'list of dates': 1
'table[category: str][label: str][date: date]': 1
Tuple[(Version, Version)]: 1
'IOBase': 1
Tuple[(ByteString, Sequence[str])]: 1
Sequence[Checker]: 1
Tuple[(int, ByteString, Sequence[str])]: 1
Generator[(Sample, None, None)]: 1
AudioApi: 1
Union[(bytes, memoryview)]: 1
(float, Sample): 1
Optional[Region]: 1
'Instrument': 1
Union[(bytes, str)]: 1
Topic: 1
Dict[(TopicNameType, Tuple[(int, float, int)])]: 1
List[PostType]: 1
Tuple[(int, PostType)]: 1
Generator[(Tuple[(str, Any)], str, None)]: 1
Iterable[Tuple[(str, Callable, str)]]: 1
WSGIServer: 1
'Cookies': 1
Union[(str, Sequence[str])]: 1
base.Living: 1
ZZone: 1
Dict[(int, ZZone)]: 1
Exit: 1
ShopBehavior: 1
Living: 1
SoundEngine: 1
Sequence[Iterable[int]]: 1
Sequence[Tuple[(int, int)]]: 1
Tuple[(Sequence, Sequence, int, Sequence)]: 1
Union[(Sequence, Token)]: 1
TakesStateInstruction: 1
Sequence[TakesStateInstruction]: 1
PushState: 1
Tuple[Atom]: 1
SearchAlgorithm: 1
VariationOperator: 1
Union[(np.int64, np.float64)]: 1
Tuple[(Genome, float)]: 1
Tuple[(Genome, np.ndarray)]: 1
Initializer: 1
Estimator: 1
Stopper: 1
Iterable[Tuple[(Optional[T], Optional[T], Optional[T])]]: 1
Tuple[(float, L)]: 1
List['BaseLayer']: 1
List[Stack]: 1
'MiddlewareManager': 1
'BaseContextStore': 1
'ContextContextManager': 1
'RegisterContextManager': 1
List[Tuple[(Text, ...)]]: 1
Intent: 1
Tuple[(Text, Optional[Text])]: 1
List[Optional[Text]]: 1
BaseRegisterStore: 1
Iterator[Text]: 1
Type[BaseState]: 1
Conversation: 1
List[BaseLayer]: 1
Callable[([Request], 'BaseTrigger')]: 1
asyncio.Lock: 1
Dict[(Text, Type[Platform])]: 1
Type[Platform]: 1
Tuple[(FSM, TestPlatform)]: 1
Tuple[(bool, Union[(dict, str)])]: 1
pygit2.Repository: 1
List[pygit2.Commit]: 1
Iterable[ServerSentEvent]: 1
Union[(Call, None)]: 1
'NodeFlags': 1
Tuple[(float, _InstrExecStatistics)]: 1
Union[(List[GlobalState], None)]: 1
'TaintRecord': 1
Union[(TaintRecord, None)]: 1
TaintResult: 1
List[TaintRecord]: 1
TaintRecord: 1
Union[(int, Expression)]: 1
Union[(BitVec, List[BitVec])]: 1
Union[('MessageCallTransaction', 'ContractCreationTransaction', None)]: 1
Iterable[StateAnnotation]: 1
Union[(BitVec, int)]: 1
List[Union[(int, BitVec)]]: 1
Union[(BitVec, int, List[Union[(int, BitVec)]])]: 1
'WorldState': 1
Iterator[StateAnnotation]: 1
Union[(None, List[GlobalState])]: 1
bool.Bool: 1
z3.BoolRef: 1
z3.CheckSatResult: 1
z3.ModelRef: 1
Annotations: 1
snug.Query[Page[t.List[Channel]]]: 1
snug.Query[Channel]: 1
snug.Query[Message]: 1
snug.Query[t.List[Station]]: 1
snug.Query[t.List[Departure]]: 1
snug.Query[t.List[Journey]]: 1
snug.Query[Repository]: 1
snug.Query[list]: 1
Union[(discord.Member, discord.User)]: 1
List[discord.Guild]: 1
Tuple[(C, ...)]: 1
Iterable[Tuple[(int, C)]]: 1
Iterable[Tuple[(int, ...)]]: 1
List[Tuple[(int, C)]]: 1
EvePriceResolver: 1
Optional[gettext.NullTranslations]: 1
TemplateEngine: 1
(np.ndarray, list): 1
SparkContext: 1
SparkSession: 1
WikipediaPage: 1
Tuple[(List[str], List[int])]: 1
List[List[Tuple[(str, float)]]]: 1
Tuple[(List[QuestionText], Answer)]: 1
Dict[(str, Question)]: 1
'GLWidget': 1
Union[(Partial, List[Partial])]: 1
GraphSparsifier: 1
TF_type: 1
BinningBase: 1
'physt.plotting.PlottingProxy': 1
Tuple[(type, ...)]: 1
Callable[([float], str)]: 1
Tuple[(bool, int, int, Union[(int, float)])]: 1
TickCollection: 1
Union[(HistogramBase, HistogramCollection)]: 1
PropertyHolder: 1
SFile: 1
'Anime': 1
'Tuple[Episode]': 1
'Iterable[_WorkTitles]': 1
apsw.Connection: 1
Iterator[Anime]: 1
Anime: 1
Iterator[EpisodeType]: 1
'EpisodeTypes': 1
Iterable[PriorityRule]: 1
AnimeFiles: 1
're.Pattern': 1
'List[Track]': 1
'Iterable[Track]': 1
'Iterable[Path]': 1
'workinfo.Work': 1
Union[(list, dict)]: 1
List[Union[(int, tf.Tensor)]]: 1
tf.TensorShape: 1
TensorFlowManager: 1
GraphExecutor.Executable: 1
ReinforceObjective: 1
Tuple[(List[tf.Tensor], List[tf.Variable])]: 1
MP: 1
Optional[Gradients]: 1
NGramDicts: 1
tf.SparseTensor: 1
Callable[([int, float], bool)]: 1
Optional[ExecutionResult]: 1
Executor: 1
'GraphExecutor.Executable': 1
Set[Feedable]: 1
Set[Parameterized]: 1
Tuple[(Set[Feedable], Set[Parameterized])]: 1
Iterator[List[str]]: 1
'TimeBars': 1
'TickBars': 1
Iterator[datetime.datetime]: 1
[str, dict]: 1
List[model.AnomalyPoint]: 1
model.RecordData: 1
model.ResourceRecord: 1
model.DnsMeasurement: 1
dns.DnsMeasurement: 1
Iterable[dns.DnsMeasurement]: 1
IpInfoService: 1
AsOrg: 1
AsType: 1
AutonomousSystem: 1
model.AsOrg: 1
InMemoryAsRepository: 1
MemoryStream: 1
NamedTemporaryFile: 1
func.HttpResponse: 1
'UserPermissions': 1
Optional[SpecificLocation]: 1
Sequence[AccessPermissionTokenItem]: 1
typing.List[typing.Type[models.Model]]: 1
List[LineString]: 1
Polygon: 1
List[LinearRing]: 1
model.ProvDocument: 1
bd.BigchainDB: 1
HTTPServerRequest: 1
StrictRedis: 1
UrlParser: 1
SessionHelper: 1
MultiLineString: 1
geojson.feature.FeatureCollection: 1
Union[(List[LineString], LineString)]: 1
GPXTrack: 1
List[FeatureCollection]: 1
'html': 1
Backup: 1
List[ObjectPermission]: 1
Encryptor: 1
Iter: 1
Union[(User, Group)]: 1
JSONRPCResponse: 1
Union[(JSONRPCResponse, List[JSONRPCResponse])]: 1
Tuple[(List, Dict)]: 1
Tuple[(logging.Handler, logging.Handler)]: 1
Union[(Request, Set[Request])]: 1
Tuple[(int, str, str, Tuple[(str, str, str)])]: 1
Tuple[(int, str, Optional[str], Tuple[(str, str, str)])]: 1
(m.Bit, m.Bits(11), m.Bits(14), m.Bits(4), m.Bit): 1
config_pb2.BuildInfo: 1
samples_database.SamplesDatabase: 1
cache.FSCache: 1
sample_observers.SampleObserver: 1
typing.List[TerminationCriterionBase]: 1
'AsciiCharacterAtomizer': 1
'GreedyAtomizer': 1
'PreprocessedContentFile': 1
PreprocessedContentFile: 1
atomizers.AsciiCharacterAtomizer: 1
preprocessed.PreprocessedContentFile: 1
encoded.EncodedContentFiles: 1
'EncodedContentFile': 1
typing.Optional[EncodedContentFile]: 1
dockerutil.BazelPy3Image: 1
atomizers.AtomizerBase: 1
lockfile.LockFile: 1
'keras.optimizers.Optimizer': 1
DataBatch: 1
typing.Tuple[(np.ndarray, np.ndarray, int)]: 1
public.PreprocessorFunction: 1
'LockFile': 1
lockfile_pb2.LockFile: 1
DockerImageRunContext: 1
typing.Iterator[typing.Tuple[(typing.Any, typing.Any)]]: 1
typing.Set[typing.Type]: 1
typing.List[logging_pb2.LogRecord]: 1
typing.Iterable[pathlib.Path]: 1
'sqlutil.Database': 1
Callable[([], 'sqlutil.Database')]: 1
typing.List[typing.List[str]]: 1
OptPassRunInvocation: 1
typing.List[OptPassRunInvocation]: 1
corpus_pb2.Corpus: 1
clgen.Instance: 1
typing.List[sample_observers.SampleObserver]: 1
Iterable[Tuple[(Message, str)]]: 1
ProcessedEmail: 1
FormEntry: 1
Participation: 1
Gen[('cls', None, None)]: 1
List[Union[(NwayRelay, OnewayRelay)]]: 1
List[Union[(datetime, discord.Message)]]: 1
Iterator[discord.Member]: 1
FormulaType: 1
CubeConfig: 1
CubeDataAccess: 1
Tuple[(Tuple[(float, float)], Tuple[(float, float)])]: 1
'EsdcDataStore': 1
Optional[TimeRange]: 1
Sequence[DataSource]: 1
Callable[([tf.Tensor, Optional[int], Optional[List[Any]]], tf.Tensor)]: 1
SearchState: 1
BeamSearchLoopState: 1
SearchStepOutput: 1
tf.train.AdamOptimizer: 1
tf.train.AdadeltaOptimizer: 1
RepresentationExecutable: 1
Generator[(Token, Any, None)]: 1
List[sqlparse.sql.Token]: 1
Generator[(Tuple[(Optional[T], T, Optional[T])], Any, None)]: 1
Generator[(ast.AST, None, None)]: 1
LogbookLevel: 1
LoggingLevel: 1
'logbook.Logger': 1
ServerSecretPermanentKey: 1
'ClientState': 1
AddressType: 1
'ServerAddress': 1
'ClientAddress': 1
'InitiatorAddress': 1
'ResponderAddress': 1
ResponderAddress: 1
DropReason: 1
SignedKeys: 1
List[EventCallback]: 1
Log: 1
Generator[(Tuple[(str, Optional[Comment])], None, None)]: 1
Generator[(Tuple[(str, Comments)], None, None)]: 1
Generator[(Tuple[(str, None)], None, None)]: 1
'CollabDataBunch': 1
nn.Conv2d: 1
nn.ConvTranspose2d: 1
'DataBunch': 1
DeviceDataLoader: 1
List[DeviceDataLoader]: 1
Collection[Tensor]: 1
OptLossFunc: 1
OneCycleScheduler: 1
Collection[Tuple[(str, str, int)]]: 1
Iterator[List[Tensor]]: 1
Tensors: 1
Tuple[(Rank0Tensor, Rank0Tensor)]: 1
Collection[namedtuple]: 1
Tuple[(List[List[Tensor]], List[List[Tensor]])]: 1
VBox: 1
'TabularList': 1
'ItemList': 1
'Vocab': 1
Tuple[(Tensor, Tensor)]: 1
Tuple[(Tensor, Tensor, Tensor)]: 1
folium.Map: 1
List[ItemTuple]: 1
ResourceDict: 1
List[ResourceDict]: 1
feedparser.FeedParserDict: 1
BlockRange: 1
Dict[(str, List[models.BaseTask])]: 1
zmq.Socket: 1
SETUP_CONFIG: 1
Iterator[SETUP_CONFIG]: 1
url: 1
(Response or object): 1
Rinzler: 1
AutoSchemaDescriptor: 1
Tuple[(Union[(ObjDataType, List[ObjDataType])], List[ObjDataType])]: 1
Tuple[(Union[(ObjDataType, List[ObjDataType], None)], List[ObjDataType])]: 1
ObjDataType: 1
Iterator[RelType]: 1
Union[(str, List[str], None)]: 1
Type[serializers.Serializer]: 1
List['Track']: 1
Iterator[T]: 1
Artist: 1
QuerySet[Artist]: 1
QuerySet[Album]: 1
QuerySet[Track]: 1
(int, 'FullBundle'): 1
DCOS_SECURITY: 1
List['App']: 1
List[ResultThread]: 1
List[Thread]: 1
Set[Thread]: 1
HandState: 1
CardIncludeList: 1
Tuple[(CardIncludeList, CardIncludeList, CardIncludeList)]: 1
Tuple[(CardIncludeList, CardList, FormatType)]: 1
_P: 1
Iterable[FieldDescriptor]: 1
Type[_M]: 1
Tuple[(MetaDict, MetaDict)]: 1
_PT: 1
Iterable[Tuple[(int, Any)]]: 1
'RepeatField[_VT]': 1
Repeat[_VT]: 1
Dict[(_KT, _VT)]: 1
_VT: 1
Iterator[_KT]: 1
'MapField[_VT]': 1
Map[(_KT, _VT)]: 1
RepeatField: 1
MapField: 1
Iterable[Method]: 1
RequestContext: 1
Iterable[Type[Service]]: 1
Callable[([Callable[(..., Any)]], Callable[(..., Any)])]: 1
Dict[(str, type)]: 1
MessageFunction: 1
'RequestContext': 1
MetaDict: 1
OperationMessage: 1
Union[(_PT, None)]: 1
Tuple[(_ValidationFunction, ...)]: 1
Type['MessageTranscoder']: 1
'MessageTranscoder': 1
Dict[(str, _Value)]: 1
SnakeMessage: 1
JSONValue: 1
Empty: 1
MyInt: 1
StringValue: 1
Tuple[(Tensor, Tuple[(Tensor, Tensor)])]: 1
Runtime: 1
Optional['Device']: 1
gspread.Worksheet: 1
JobScheduler: 1
[{}]: 1
DualLSTMModel: 1
SourceFile: 1
Serialization: 1
Iterator[Vind]: 1
Iterable[Entry]: 1
Iterable[Vind]: 1
'Suggestion': 1
Tuple[(Path, List[str])]: 1
Sequence[Edit]: 1
Set[Vind]: 1
Iterator[Edit]: 1
Sequence[Sentence]: 1
'ForwardSentences': 1
'BackwardSentences': 1
'Location': 1
Iterable[Location]: 1
Tokens: 1
'JavaVocabulary': 1
'TokenDistance': 1
'Vectors': 1
'RepositoryID': 1
Iterator[SourceFile]: 1
Iterator[Tuple[(str, SourceSummary)]]: 1
Iterator[Tuple[(str, str, PurePosixPath, bytes)]]: 1
FileInfo: 1
Iterator[Tuple[(RepositoryID, int)]]: 1
Iterator[SourceFileInRepository]: 1
Iterator[Tuple[(PurePosixPath, bytes)]]: 1
Sequence[TokenResult]: 1
'KerasDualLSTMModel': 1
'RemoteDualLSTMModel': 1
Iterator[Configuration]: 1
'Makefile': 1
'PhonyRule': 1
Callable[([Response], None)]: 1
Optional[Union[(Failure, Iterable[Request])]]: 1
ConfirmationObjT: 1
Optional['RealmCreationKey']: 1
Optional[CustomerPlan]: 1
'RemoteZulipServer': 1
List[Selectable]: 1
Iterator[Tuple[(int, JobData)]]: 1
List[Stream]: 1
List[Recipient]: 1
Tuple[(int, Dict[(str, List[str])])]: 1
Union[(None, Dict[(str, Any)])]: 1
List[Dict[(str, object)]]: 1
Sequence[UserProfile]: 1
Tuple[(str, Dict[(str, bool)])]: 1
Tuple[(Dict[(str, Any)], bool)]: 1
Dict[(int, Dict[(str, Any)])]: 1
Callable[([Mapping[(str, Any)]], bool)]: 1
'NonClosingPool': 1
sqlalchemy.engine.base.Connection: 1
Dict[('str', 'str')]: 1
Callable[([str], Dict[(str, str)])]: 1
RelativeLinksHelpExtension: 1
MarkdownIncludeCustom: 1
EmoticonTranslationsHelpExtension: 1
TabbedSectionsGenerator: 1
Optional[Tuple[(str, Optional[str])]]: 1
List[ResultWithFamily]: 1
NestedCodeBlocksRenderer: 1
MarkdownArgumentsTableGenerator: 1
SettingHelpExtension: 1
return_type: 1
Callable[(..., Tuple[(str, str)])]: 1
Union[(str, Dict[(str, str)])]: 1
Tuple[(int, str, str, str)]: 1
Callable[([], str)]: 1
Optional[Callable[(..., str)]]: 1
Optional['SocketConnection']: 1
sockjs.tornado.SockJSRouter: 1
Generator[(str, str, None)]: 1
Callable[([], int)]: 1
Callable[([str], int)]: 1
'AccessControl': 1
paramiko.RSAKey: 1
Dict[(str, Tuple[(str, List[bytes])])]: 1
'Q': 1
ldap3.Connection: 1
Generator[(Tuple[(str, dict)], None, None)]: 1
LdapObjectClass: 1
TLVList: 1
Packet: 1
Optional[Tuple[(str, int)]]: 1
wei_value: 1
address: 1
MemberList: 1
'_AsyncTimeIterator': 1
'PythonPrinter': 1
runtime.SketchRuntime: 1
_DeprecatedAttr: 1
Mapping[(str, Callable[([Any], str)])]: 1
Sequence[Type[statements.Statement]]: 1
'sketch.Sketch': 1
aiohttp.FormData: 1
Tuple[(Dict[(str, str)], Union[(AnyStr, aiohttp.FormData)])]: 1
BaseSection: 1
List[List[Union[(BaseSection, str)]]]: 1
'BaseSection': 1
'BulletedListSection': 1
'URLSection': 1
'TextSection': 1
'FAQSection': 1
'NumberedListSection': 1
ShExDocVisitor_impl: 1
Tuple[(BNode, Collection)]: 1
SNOMEDGraph: 1
RF2DictWriter: 1
Set[SCTID]: 1
Dict[(int, Set[Relationship])]: 1
ModelContainer: 1
'list of extractors': 1
(list or dict): 1
results.StructureMap: 1
AbstractHoppings: 1
Tuple[(Dict, int)]: 1
Tuple[(bool, Response, bool, Response)]: 1
List[List[Union[(str, List[str])]]]: 1
Union[(version.Version, None)]: 1
Tuple[(List[Tuple[(str, Dict)]], List[Result])]: 1
Union[(None, WebElement)]: 1
Tuple[(Union[(str, None)], List[Result])]: 1
Tuple[(Response, Union[(str, None)])]: 1
List[Medium]: 1
Dict[(str, Dict[(Medium, Dict[(Site, str)])])]: 1
Optional[Member]: 1
Union[(int, float, None)]: 1
Optional[OrderedDict]: 1
Optional[MessageContent]: 1
Optional[Messageable]: 1
LiveClass: 1
Webinar: 1
UserSignupForm: 1
SingleConditionSpec: 1
SpatialImage: 1
Iterable[Iterable[np.ndarray]]: 1
Iterable[Sequence[np.ndarray]]: 1
Tuple[(List[Rating], Counter)]: 1
Tuple[(ProfileRecoList, ProfileRecoList)]: 1
FakeProject: 1
typing.Tuple[(str, typing.List[str])]: 1
[Project]: 1
github.Repository.Repository: 1
typing.Dict[(str, typing.Dict[(str, typing.Dict[(str, str)])])]: 1
'MachineInfo': 1
Tuple[('ExternalProgram', str)]: 1
MachineChoice: 1
typing.Tuple[(bool, bool)]: 1
typing.Iterator['subprocess.Popen']: 1
GithubClient: 1
JenkinsClient: 1
motor.motor_asyncio.AsyncIOMotorCollection: 1
motor.motor_asyncio.AsyncIOMotorCursor: 1
List[LabeledHookDetails]: 1
TagHookDetails: 1
PushHookDetails: 1
LabeledHookDetails: 1
ReleaseHookDetails: 1
Dict[(str, Union[(str, str)])]: 1
List['EventType']: 1
'EventType': 1
'JenkinsBuildState': 1
Dict[(str, JenkinsInstanceConfig)]: 1
Tuple[(str, str, Dict[(str, JenkinsInstanceConfig)])]: 1
Dict[(AuthenticationPolicy, Callable[([aiohttp.web_request.Request], Awaitable)])]: 1
'ClearQuery': 1
'RegistrationQuery': 1
'DeregistrationQuery': 1
providers.Character: 1
providers.Alliance: 1
providers.Corporation: 1
Union[(EveAllianceInfo, None)]: 1
EveCorporationInfo: 1
cursor: 1
DatabaseJanitorType: 1
ExecutorType: 1
OutputExecutorType: 1
MsgRouter.presence_route: 1
MsgRouter.dnd_route: 1
Tuple[(str, str, Mapping[(str, str)])]: 1
Mapping[(Any, Any)]: 1
Optional[Iterable[str]]: 1
BaseCache: 1
AxesHandler: 1
OCSPRequest: 1
Container[int]: 1
Dict[(str, Union[(str, int, float, datetime.datetime)])]: 1
Digest: 1
Union[(None, datetime.datetime)]: 1
'dateparser.DateDataParser': 1
PSPPVersion: 1
Iterable[Tuple[(int, str)]]: 1
Type[UploadScript]: 1
UploadPlugin: 1
Callable[([Any], FieldType)]: 1
SelectionForm: 1
django.core.files.uploadedfile.UploadedFile: 1
CodingJobQuerySet: 1
'HomusSymbol': 1
Point2D: 1
List[CapitanSymbol]: 1
'CapitanSymbol': 1
SimplePoint2D: 1
'Rectangle': 1
Tuple[(List[CropObject], List[CropObject])]: 1
(List[int], List[int], List[int]): 1
TrainingConfiguration: 1
List[TrainingConfiguration]: 1
Tuple[(str, Mapping[(str, str)], bytes)]: 1
sp.CompletedProcess: 1
Union[(int, List)]: 1
'irc_server.IRCServer': 1
Optional[BaseNetwork]: 1
Optional[type(BaseNetwork)]: 1
'u.Ultros': 1
'base_server.BaseServer': 1
Optional[Packages]: 1
ClassifierMixin: 1
(coo_matrix, Dict[(str, int)], pd.Series): 1
newspaper.Config: 1
Iterator[newspaper.Source]: 1
Iterator[newspaper.Article]: 1
(coo_matrix, Dict[(str, int)]): 1
(coo_matrix, Dict[(int, str)]): 1
(csr_matrix, csr_matrix, Dict[(str, int)], pd.Series, pd.Series): 1
Bounded[(int, 0)]: 1
List['Schedule']: 1
List[Schedule]: 1
Tuple[(Teacher, List[Any])]: 1
Iterator[Record]: 1
SafeDictReader: 1
List[Record]: 1
List[Tuple[(Column, str)]]: 1
MultiPolygon: 1
Optional[AuraEntry]: 1
ManagerResult: 1
TR: 1
Pkg: 1
AlembicConfig: 1
Procedure: 1
Union[(WrappedCallable, Callable[(..., WrappedCallable)])]: 1
'Signal': 1
Callable[([T_Event], Any)]: 1
Awaitable[T_Event]: 1
AsyncIterator[T_Event]: 1
Callable[Callable]: 1
AbstractEndpoint: 1
CIMultiDict: 1
Awaitable[Optional[WebSession]]: 1
T.Dict[(str, T.List[T.Callable])]: 1
T.List[T.Callable]: 1
T.Callable[(..., 'ObservableProperty')]: 1
webdriver.Remote: 1
EntitiesPage: 1
Type[OverviewPage]: 1
Type[EntitiesPage]: 1
Type[ConnectPage]: 1
Type[LogsPage]: 1
Iterator[Tuple[Union[(int, str)]]]: 1
pyexasol.ExaConnection: 1
Reading: 1
HeaderRecord: 1
NmiDetails: 1
BasicMeterData: 1
IntervalRecord: 1
List[Reading]: 1
Tuple[(Type, Tuple[(str, ...)])]: 1
Tuple[(Type, Tuple[str])]: 1
Tuple[(Type, Optional[Tuple[(int, int, int, int, int)]])]: 1
Tuple[(int, int, int, int, int)]: 1
Transformation: 1
List[tsrc.Remote]: 1
tsrc.Repo: 1
MainFunc: 1
Optional[ProjectMergeRequest]: 1
Optional[PullRequest]: 1
List[Tuple[(str, tsrc.git.Status)]]: 1
Iterable[Tuple[(int, tsrc.Repo, Path)]]: 1
ManifestConfig: 1
Optional[tsrc.Remote]: 1
tsrc.Manifest: 1
Iterator[MessageRecorder]: 1
tsrc.manifest.Manifest: 1
tsrc.Error: 1
ReposGetter: 1
UserList: 1
CLI: 1
RepoConfig: 1
GitServer: 1
[plt.figure]: 1
List[SeriesEpisodeInfo]: 1
[Torrent]: 1
RPCCall: 1
Iterator[Tuple[(str, ModelField)]]: 1
Union[(None, bool)]: 1
Generator[(Model, None, None)]: 1
Tuple[(Node, Node)]: 1
PlyHeader: 1
List[Udo]: 1
Optional[Module]: 1
ModuleParameters: 1
Dict[(int, Dict[(str, List[str])])]: 1
Dict[(int, List[Any])]: 1
Contract: 1
Movie: 1
Certification: 1
SIGType: 1
CSVType: 1
CLTVType: 1
XHXType: 1
OperatorType: 1
ConditionType: 1
PeerType: 1
MicroservicesStatus: 1
TrainStopStatus: 1
typing.Optional[typing.Callable[(..., typing.Any)]]: 1
WebSocketURI: 1
Callable[([Any], BasicAuthWebSocketServerProtocol)]: 1
'Headers': 1
List[ExtensionParameter]: 1
Tuple[(List[ExtensionParameter], Extension)]: 1
Gconnect.NetworkProtocolPacket: 1
Mapping[(str, Counter)]: 1
threading.Thread: 1
StateMixin: 1
List[MicroStep]: 1
Generator[(Tuple[(str, PathTuple)], None, None)]: 1
Tuple[(UserTune, str)]: 1
List[Tuple[(Any, ...)]]: 1
Tuple[(UserMood, str)]: 1
Tuple[(Annotations, str)]: 1
nbxmpp.Iq: 1
Tuple[(Ping, str)]: 1
Tuple[(PEP, str)]: 1
Tuple[(UserActivity, str)]: 1
GLib.SOURCE_CONTINUE: 1
Tuple[(Chatstate, str)]: 1
Tuple[(UserNickname, str)]: 1
'layer.Layer': 1
Optional[List[_light.Light]]: 1
Optional['Tile']: 1
Optional[filetype.AudioFile]: 1
Optional[filetype.FontFile]: 1
Optional[_entity.Entity]: 1
List[_entity.Entity]: 1
'_AbstractColumn': 1
Watcher: 1
Union[(tf.Tensor, tf.Operation)]: 1
'AfixEmbedding': 1
Tuple[(torch.Tensor, torch.Tensor, torch.Tensor)]: 1
torch.LongTensor: 1
'int/list': 1
(bool, bool): 1
'function': 1
'MetricTree': 1
List[numpy.ndarray]: 1
QgsMapCanvas: 1
QgsMessageBar: 1
List[Confirmation]: 1
BaseSPARenderer: 1
'Protobuf': 1
TableOfContents: 1
Optional[Issue]: 1
Optional[SMTPResponse]: 1
'config.ConfigMgr': 1
'BlastParser': 1
Tuple[(Union[(List[str], str)], int)]: 1
(Dict[(str, List[str])], Dict[(str, List[str])], Set[int]): 1
Dict[(str, SubtypeCounts)]: 1
Tuple[(List[Tuple[(str, str)]], List[Tuple[(List[str], str)]])]: 1
Optional[SubtypingParams]: 1
List[Union[(str, Tuple[(List[str], str)])]]: 1
List[Tuple[(List[str], str)]]: 1
SubtypingParams: 1
Optional[DataFrame]: 1
_Map: 1
'Rain': 1
'_ConnectionCtx': 1
'_TransactionCtx': 1
'_select_executor': 1
'_update_executor': 1
'_insert_executor': 1
'_delete_executor': 1
meta_type: 1
RedisCluster: 1
(Image, BBox): 1
Tuple[(bool, Optional[str], str)]: 1
QNetworkReply: 1
'Bounds': 1
List[QgsVectorLayer]: 1
Set[T2]: 1
Dict[(str, List[SrcData])]: 1
FrozenSet[V]: 1
FileCoord: 1
Set[Tuple[(T, T)]]: 1
Dict[(K, Set[V])]: 1
List[K]: 1
LazyRecTuple: 1
'PushOnlyStack': 1
Dict[(str, Sort)]: 1
Tuple[(SMTExpr, ...)]: 1
FrozenSet[Sort]: 1
SubsortGraph: 1
List[SubsortConstraint]: 1
Iterator[Statement]: 1
List[SExpr]: 1
Optional['Statement']: 1
Optional['Term']: 1
'SortOpApp': 1
Tuple[(Sort, ...)]: 1
Iterator[ActorEventRule]: 1
StateVar: 1
Iterable[SituationId]: 1
Situation: 1
Iterable[ActionId]: 1
Optional[StateVarDec]: 1
ActionId: 1
SortTuple: 1
RuleParamId: 1
ActionParamId: 1
LocalVarId: 1
ContractParamId: 1
Iterable[EventRule]: 1
'Situation': 1
Dict[(str, L4Contract)]: 1
SourceType: 1
List[Byte]: 1
List[Dict[(Str, Variant)]]: 1
Tuple[(Int, Str)]: 1
Dict[(Str, Variant)]: 1
Dict[(Int, Str)]: 1
typ.NormalizedURL: 1
typ.Iterable: 1
FormSection: 1
List[DataPipeline]: 1
Union[(datetime, None)]: 1
Tuple[(int, datetime)]: 1
botocore.response.StreamingBody: 1
DataWarehouseUser: 1
DataWarehouseSchema: 1
EDBOWebApiClient: 1
StatsFrontEndOption: 1
RWARatioTokenOptions: 1
RWAAverageTokenOptions: 1
RWAWindowOptions: 1
RWAPlotOptions: 1
RWAFrontEndOptions: 1
ContentAnalysisOption: 1
TopwordAnalysisType: 1
KMeansOption: 1
RequestData: 1
TokenOption: 1
NormOption: 1
CullingOption: 1
CorpusStats: 1
go.Figure: 1
FileIDContentMap: 1
Phylo: 1
plt: 1
Scatter: 1
Union[(float, Quantity)]: 1
Tuple[(List[ndarray], List[ndarray])]: 1
Tuple[(ndarray, ndarray, ndarray)]: 1
Tuple[(ndarray, ndarray, ndarray, ndarray)]: 1
Tuple[(ET.ElementTree, ET.Element)]: 1
VaultUser: 1
Sequence[Revision]: 1
UserVaultKey: 1
'StorageBackend': 1
'CryptEngine': 1
Union[(str, SnowflakeID)]: 1
Callable[([CommEventType], None)]: 1
Callable[([GlobalCommEventType], GlobalCommEventType)]: 1
Callable[([IrcTransformType], None)]: 1
Callable[([DiscordTransformType], None)]: 1
List[Tuple[(TKey, TValue)]]: 1
Union[(float, str)]: 1
Type[MCodeHandler]: 1
Tuple[(str, float)]: 1
'SavedEndpoint': 1
[ResponseExtraInfo]: 1
[ResponseChannelsInfo]: 1
[IncomingData]: 1
IncomingData: 1
'Group': 1
List[Dict[(Any, Any)]]: 1
Iterator[Dict[(Any, Any)]]: 1
Tuple[(List, int)]: 1
OneOf[(List[Dict[(str, str)]], Dict[(str, Dict[(str, str)])])]: 1
Optional['Message']: 1
List[Pattern]: 1
(bool, int): 1
Set[Event]: 1
List[Member]: 1
sqlite3: 1
Hashgraph: 1
typing.ScheduledAction: 1
'CurrentThreadScheduler': 1
Subscription: 1
List[Recorded]: 1
Callable[(['Observable'], 'Observable')]: 1
Callable[([A], A)]: 1
Callable[([A], B)]: 1
Callable[([A], C)]: 1
Callable[([A], D)]: 1
Callable[([A], E)]: 1
Callable[([A], F)]: 1
Callable[([A], G)]: 1
Callable[([Observable], Future)]: 1
Callable[([Observable], ConnectableObservable)]: 1
Callable[([ConnectableObservable], Observable)]: 1
'Observer': 1
List[Tuple[(RelativeTime, notification.Notification)]]: 1
Callable[([], Observable)]: 1
A: 1
B: 1
D: 1
Optional[Disposable]: 1
PrettyTable: 1
typing.Optional['Path']: 1
typing.Optional[typing.List[int]]: 1
MenuSection: 1
typing.Optional[abjad.OrderedDict]: 1
typing.List[MenuSection]: 1
'Menu': 1
MenuEntry: 1
typing.List[MenuEntry]: 1
typing.Optional[MenuEntry]: 1
typing.Optional[typing.List[typing.Optional[int]]]: 1
typing.Tuple[(str, typing.Optional[str])]: 1
typing.Optional[typing.Union[(str, list, Path)]]: 1
typing.Optional[Path]: 1
List['WiFiAp']: 1
'WiFiAp': 1
'WiFiInterface': 1
Set['PermissionType']: 1
PathResolved: 1
PathInfo: 1
LookupInfo: 1
Optional['ConfigDir']: 1
Tuple[(list, dict)]: 1
Dict[(Tdict, Udict)]: 1
Tuple[(Tdict, Udict)]: 1
List[Tuple[(Tdict, Udict)]]: 1
List[Tdict]: 1
List[Udict]: 1
Set[TSet]: 1
Dict[(Tf, Uf)]: 1
Tuple[(IntOrFloat, IntOrFloat)]: 1
List[Tuple[(int, Tf)]]: 1
Set[Tf]: 1
Type[Tf]: 1
List[Tuple[(Tf, Uf)]]: 1
Dict[(T, V)]: 1
Tcopy: 1
List[ASMarking]: 1
HopOpaqueField: 1
List[PCBMarking]: 1
PCBMarking: 1
OpaqueField: 1
'HopOpaqueField': 1
Type[HostAddrBase]: 1
AnyNum: 1
Dict[(int, Node)]: 1
Dict[(Tuple[(Node, Node)], Edge)]: 1
'Stack': 1
Optional[Set['KeyWrapper']]: 1
Set['IntervalKWrapper']: 1
'StringSetState': 1
'CharacterState': 1
'SignState': 1
Set[VariableIdentifier]: 1
List[Lattice]: 1
ArithmeticMixin: 1
List[ArithmeticMixin]: 1
List[SignLattice]: 1
List[TypeLattice]: 1
NavSeries: 1
typing.Generator[(bytes, typing.Any, typing.Any)]: 1
typing.Generator[(_Action, Buffer, bytes)]: 1
typing.Generator[(_Action, None, None)]: 1
typing.Generator[(_Action, typing.Union[(Buffer, None)], bytes)]: 1
typing.Generator[(_Action, typing.Union[(Buffer, None)], None)]: 1
typing.Callable[(..., Consumer[R])]: 1
Optional[ha.State]: 1
List[ha.State]: 1
DSL: 1
Iterator[ContextDelegate]: 1
Iterator[DSLContract]: 1
Sandbox: 1
'ProgrammingLanguage': 1
ProgrammingLanguage: 1
Optional[Model]: 1
Tuple[(Type[PKey], Optional[int])]: 1
PKey: 1
Iterator[Sequence[Mapping[(str, object)]]]: 1
typing.Iterable[PKey]: 1
typing.AbstractSet[PKey]: 1
NulldataScript: 1
P2pkhScript: 1
P2shScript: 1
CardBundle: 1
Optional[Iterator]: 1
Iterable[Vote]: 1
Iterable[VoteCast]: 1
Tuple[(int, Dict, List, List)]: 1
[PaladinSpell]: 1
(Damage, int): 1
Zone: 1
set(): 1
{str: int}: 1
(VendorNPC or FriendlyNPC or Monster): 1
{int: {str: int}}: 1
['Item']: 1
PaladinSpell: 1
DoT: 1
'BeneficialBuff': 1
'DoT': 1
['PaladinSpell']: 1
BeneficialBuff: 1
{int: int}: 1
[dict()]: 1
{str: ('Item' or None)}: 1
Quest: 1
Tuple[(Dict[(str, Dict[(str, str)])], List[str])]: 1
CompileResult: 1
Workflow: 1
(NodeType, [str]): 1
([dict], [dict]): 1
Callable[(..., Dict)]: 1
M3U8: 1
Callable[([FT], FT)]: 1
Iterator[List[T]]: 1
Generator[(bool, bool, None)]: 1
SphericalJoint: 1
SpringJoint: 1
PassiveJoint: 1
JointWithPositionControl: 1
JointWithVelocityControl: 1
AnyJoint: 1
(bool, Vec3): 1
(bool, Vec3, Vec3): 1
Vec3: 1
EulerAngles: 1
(Vec3, EulerAngles): 1
ProximitySensor: 1
PositionSensor: 1
VisionSensor: 1
ForceSensor: 1
Optional[Episode]: 1
List[UnprocessedStream]: 1
Dict[(str, AbstractServiceHandler)]: 1
Optional[AbstractServiceHandler]: 1
List[AbstractServiceHandler]: 1
List[Show]: 1
Optional[UnprocessedShow]: 1
Optional[EpisodeScore]: 1
List[UnprocessedShow]: 1
Dict[(str, AbstractInfoHandler)]: 1
Optional[AbstractInfoHandler]: 1
Tuple[(JSON, str)]: 1
Optional[date]: 1
List[CachedObject]: 1
Tuple[(int, dict, str)]: 1
MockLoader: 1
Tuple[(Importer, Body)]: 1
Analyzer: 1
Optional['AgendaItem']: 1
Generator[(File, None, None)]: 1
Tuple[(Optional[str], Optional[int])]: 1
List[Location]: 1
List[Person]: 1
NotificationSearchResult: 1
List[List[Membership]]: 1
List[Enclosure]: 1
Dict[(str, Union[(str, int)])]: 1
extensions.connection: 1
tuple((List[List[str]], List[str])): 1
tuple((List[str], int, int)): 1
tuple((List[List[str]], int, int, int)): 1
Doc: 1
spacyTokenizer: 1
List[ETKModule]: 1
List[Segment]: 1
InputType: 1
Optional[URIRef]: 1
Union[(Subject, URI, Literal, None)]: 1
rdflib.URIRef: 1
List[InferlinkRule]: 1
chain: 1
(Extraction or None): 1
FakeBug: 1
bugzilla.Bugzilla: 1
'bugzilla.bug.Bug': 1
typing.Iterable[typing.Tuple[(str, str, str)]]: 1
'BodhiMessage': 1
BuildV1: 1
UserV1: 1
UpdateV1: 1
SymbolSubType: 1
List[Relocation]: 1
ELFSymbolType: 1
Optional['Service']: 1
'Submission': 1
Optional['Problem']: 1
Optional['Submission']: 1
Optional[Problem]: 1
Optional[Service]: 1
Optional['FacebookHackerCupService']: 1
Optional['FacebookHackerCupProblem']: 1
FacebookHackerCupService: 1
Optional['CodeforcesService']: 1
CodeforcesService: 1
Optional['CodeforcesProblem']: 1
Optional['CSAcademyService']: 1
CSAcademyService: 1
Optional['CSAcademyProblem']: 1
Optional['AOJService']: 1
Optional['AOJProblem']: 1
Optional['AOJArenaProblem']: 1
Optional['HackerRankService']: 1
HackerRankService: 1
Optional['HackerRankProblem']: 1
Optional['TophService']: 1
TophService: 1
Optional['TophProblem']: 1
Optional['KattisService']: 1
KattisService: 1
Optional['KattisProblem']: 1
Optional['AnarchyGolfService']: 1
AnarchyGolfService: 1
Optional['AnarchyGolfProblem']: 1
Optional['POJService']: 1
POJService: 1
Optional['POJProblem']: 1
Dict[(str, Dict[(str, pathlib.Path)])]: 1
Generator[(requests.Session, None, None)]: 1
Tuple[(Dict[(str, Any)], subprocess.Popen)]: 1
Generator[(Tuple[(Any, Any)], None, None)]: 1
SpeechModel: 1
'RPS': 1
'LoteRPS': 1
ArchiveView: 1
Dict[(str, ComplexIndexEntry)]: 1
List[List[Dict]]: 1
AsyncWorkThread: 1
AzureAuth: 1
AzureObjectsStorage: 1
SendSendgridEmail: 1
SetupSendgridMailbox: 1
SetupMxRecords: 1
AzureObjectStorage: 1
StorageDriver: 1
Callable[([dict], int)]: 1
Mail: 1
DNSDriver: 1
TelemetryChannel: 1
Iterable[Handler]: 1
TelemetryClient: 1
Iterable[Tuple[(Download, IO[bytes])]]: 1
Mkwvconf: 1
models.MxliffUnit: 1
Dump1090Resources: 1
RegType: 1
Tuple[(str, pd.DataFrame)]: 1
Iterable[CobraModel]: 1
FrozenSet[Component]: 1
Tuple[(np.float, np.float)]: 1
np.float: 1
RxnType: 1
MetType: 1
'ExMetabolite': 1
StepReturn: 1
'Optional[int]': 1
'Dict[str, List[TextEdit]]': 1
'TextEdit': 1
'List[TextEdit]': 1
'Optional[Dict[str, Any]]': 1
'List[LanguageHandler]': 1
LanguageHandler: 1
Optional[ViewLike]: 1
'Optional[LanguageConfig]': 1
'ConfigRegistry': 1
'ParameterInformation': 1
'Optional[SignatureHelp]': 1
'Diagnostic': 1
'Dict': 1
'Tuple[str, str]': 1
'Tuple[List[Dict], bool]': 1
'sublime.Region': 1
'Tuple[List[str], Dict[str, str]]': 1
'Optional[Any]': 1
ViewLike: 1
'Optional[dict]': 1
'Optional[ViewLike]': 1
'List[ViewLike]': 1
'LanguageConfig': 1
'List[LanguageConfig]': 1
'Dict[str, Dict[str, List[Diagnostic]]]': 1
'List[Diagnostic]': 1
'Optional[subprocess.Popen]': 1
Dict[(str, numbers.Real)]: 1
Iterator[Tuple[(str, List[float])]]: 1
typing.Optional['Credentials']: 1
typing.Optional[Credentials]: 1
typing.Optional[Profile]: 1
TFTPPath: 1
MAASVersion: 1
IPAddress: 1
ResourcesResultType: 1
Filesystem: 1
[(str, float)]: 1
{frozenset((str, str))}: 1
List[Union[(VerseRange, Exception)]]: 1
AsyncContextManager[Passage]: 1
AsyncContextManager[SearchResults]: 1
ConfessionTypeEnum: 1
NumberingTypeEnum: 1
SearchConfessionSource: 1
SearchPageSource: 1
Tuple[(Number, Number)]: 1
Mapping[(int, int)]: 1
Tuple[(Number, List)]: 1
Mapping[(int, list)]: 1
(int, float): 1
(Number, None): 1
(List[int], None): 1
(list, bool): 1
Helper: 1
TransmissionBenchmark: 1
RawBenchmark: 1
BaseBenchmark: 1
BaseHelper: 1
BenchmarkWithHelper: 1
ApacheBenchmark: 1
UrlFetcherHelper: 1
CompilerParser: 1
List[Posting]: 1
List[Optional[PredictionInput]]: 1
matching.MatchablePosting: 1
PendingEntry: 1
Iterable[List[Posting]]: 1
Posting: 1
Iterable[V]: 1
Entries: 1
Optional[Meta]: 1
Directive: 1
List[datetime.date]: 1
ExampleKeyValuePairs: 1
List[MintEntry]: 1
List[RawBalance]: 1
Union[(None, Type[Release], Type[TradeConfirmation])]: 1
Union[(None, Release, TradeConfirmation)]: 1
Dict[(str, List[Transaction])]: 1
Optional[Tuple[(datetime.date, str)]]: 1
Iterable[Tuple[(str, datetime.date)]]: 1
Tuple[(Dict[(str, str)], Dict[(str, str)])]: 1
'(n -- f f)': 1
'(n base -- n)': 1
'( -- turtle)': 1
'( -- screen)': 1
'(screen l -- screen)': 1
'(turtle a -- turtle)': 1
'(turtle -- turtle x y)': 1
'(turtle x y -- turtle)': 1
'(turtle -- turtle n)': 1
'(title prompt -- s)': 1
'(title prompt -- n)': 1
'( -- path)': 1
'(path -- list)': 1
'(path1 path2 -- path3)': 1
'(path -- int)': 1
'(pattern -- list)': 1
'( -- hash)': 1
'(list -- hash)': 1
'(hash key -- value)': 1
'(hash key value -- hash)': 1
'(hash key -- hash)': 1
'(hash -- list)': 1
'(sequence n -- a)': 1
'(sequence1 n1 n2 -- sequence2)': 1
'(sequence a n -- sequence)': 1
'(sequence a -- sequence)': 1
'(sequence --  a)': 1
'(sequence1 -- sequence2)': 1
'(sequence -- i)': 1
'(sequence a -- b)': 1
'(sequence1 i -- sequence2)': 1
'(a1 a2 -- [a1 a2])': 1
'(a1 a2 a3 -- [a1 a2 a3])': 1
'(... i -- l)': 1
'(sequence -- a...)': 1
'(s s -- file)': 1
'(file -- s file)': 1
'(file i -- s file)': 1
'(file s -- file)': 1
'(file -- )': 1
'( -- f)': 1
'(n -- )': 1
'(n -- s)': 1
'(s1 s2 -- l)': 1
'(sequence s1 -- s2)': 1
'(s1 s2 -- b)': 1
'(s1 s2 s3 -- s4)': 1
'(string encoding -- bytes)': 1
'(bytes encoding -- string)': 1
'(hash -- string)': 1
Binder: 1
Tuple[(Dict[(str, int)], Dict[(int, str)])]: 1
List[RuleGeneric]: 1
Dict[(int, Dict[(RuleGeneric, List[RuleGeneric])])]: 1
'LogLevel': 1
LogLevel: 1
'AnyAddress': 1
'BaseConfigObject': 1
(datetime, datetime): 1
List[TaskUserRel]: 1
FrozenOrderedDict: 1
Union[(np.ndarray, tuple)]: 1
'observer.Observable': 1
QListWidgetItem: 1
Datasource: 1
AutoencoderController: 1
TrainingController: 1
DatasourceController: 1
StreamingHttpResponse: 1
Tuple[(str, datetime)]: 1
Type['SourceCollector']: 1
Tuple[(List[requests.Response], ErrorMessage)]: 1
Tuple[(Value, Entities, ErrorMessage)]: 1
List[Tuple[(int, Element)]]: 1
Iterator[Job]: 1
Jobs: 1
Optional[Entity]: 1
ModelFilePaths: 1
Tuple[(Element, Namespaces)]: 1
List[Keyword]: 1
List[discord.Embed]: 1
Union[(Tuple[(int, str)], None)]: 1
VariableDescriptor: 1
nc.Dimension: 1
Iterator[L1AVariables]: 1
L1AGlobals: 1
Tuple[(float, bool)]: 1
'L1bProductComparator': 1
Tuple[(Dataset, Dataset)]: 1
'L1bProductComparatorPlots': 1
SketchView: 1
Dict[(Interval, str)]: 1
Union[(List[SnapDir], list)]: 1
Snap: 1
Optional[Function]: 1
List[FieldSpec]: 1
Dict[(str, Command)]: 1
'BundleWithPath': 1
Tuple[(Namespace, str)]: 1
CrashLogQuery: 1
IdbClientBase: 1
LoggingMetadata: 1
asyncio.Event: 1
_XCTestType: 1
Tuple[(LoggingMetadata, int)]: 1
XctestRunRequest: 1
List[TestRunInfo]: 1
AsyncIterator[InstallRequest]: 1
HIDEvent.HIDButtonType: 1
List[CrashLogInfo]: 1
CrashLogInfo: 1
CrashLog: 1
CrashLogQueryProto: 1
GrpcCompanionInfo: 1
GrpcTargetDescription: 1
GrpcScreenDimensions: 1
ScreenDimensions: 1
GrpcConnectionDestination: 1
ConnectionDestination: 1
Callable[(..., AsyncContextManager[_T])]: 1
_F: 1
List[TargetDescription]: 1
CompanionServiceStub: 1
GoogleVerificationResult: 1
typing.List[TaskAgentQueue]: 1
BuildClient: 1
Dict[(str, Union[(List[str], float, List[List[str]], Dict[(str, Dict[(str, str)])], Dict[(str, Dict[(str, List[str])])])])]: 1
Union[(int, VersionOrder, float)]: 1
Union[(List[str], List[float])]: 1
collections.Iterator: 1
MetricsDAO: 1
FilesDAO: 1
PyMongoDataAccess: 1
FileStorage: 1
workspace.ui.Image: 1
zipfile.ZipInfo: 1
fstd.adffile.ADFFile: 1
ArcadeWindow: 1
NIntArray: 1
VideoSource: 1
ImageSource: 1
EventGroupList: 1
MugenList: 1
SourceSampler: 1
Fraction: 1
List[slice]: 1
Tuple[(List[Filter], List[Filter])]: 1
List[Fraction]: 1
'WeightableList': 1
VideoClip: 1
List[VideoSegment]: 1
Union[(Dimensions, Any)]: 1
'SubtitleTrack': 1
'ImageSegment': 1
'ColorSegment': 1
List[ExperiencesMemory]: 1
Callable[([Any], int)]: 1
Sequence[packaging.requirements.Requirement]: 1
_Dict[(str, _Union[(int, str)])]: 1
_List[_Tuple[(int, int, int, int, _Union[(int, float)], _Union[(int, float)], _Union[(int, float)])]]: 1
MutableMapping[(str, Any)]: 1
'IdentifierData': 1
AsyncFilter[_T]: 1
Iterator[Awaitable[Any]]: 1
Awaitable[List[Any]]: 1
discord.abc.User: 1
Callable[([Iterable[str]], Error)]: 1
ErrorGroup: 1
Optional[FunctionType]: 1
InferenceContext: 1
Sequence[datetime.datetime]: 1
JqueryUIDatePicker: 1
Union[(None, CheckpointState)]: 1
Union[(CheckpointState, None)]: 1
Union[(float, List)]: 1
ActionInfo: 1
ActionSpace: 1
'InputFilter': 1
(ActionType, List): 1
Union[(Dict[(str, ActionSpace)], ActionSpace)]: 1
'Architecture': 1
tf.train.ClusterSpec: 1
Tuple[(str, tf.device)]: 1
tf.Session: 1
sym.Symbol: 1
Union[(List[NDArray], Tuple[NDArray], NDArray)]: 1
Union[(np.ndarray, np.number, list, tuple)]: 1
NDArray: 1
List[List[NDArray]]: 1
Dict[(str, List[NDArray])]: 1
List[NDArray]: 1
List[OnnxHandlerBlock]: 1
nn.Conv2D: 1
List[Tuple[(Union[(NDArray, Symbol)], str)]]: 1
HeadLoss: 1
mx.gluon.loss.Loss: 1
Tuple[(int, float, Any)]: 1
OpeSharedStats: 1
OpeEstimation: 1
portage.dbapi.porttree.portagetree: 1
portage.dbapi.vartree.vartree: 1
typing.Iterator[typing.Tuple[(str, typing.Dict[(str, typing.Any)], str)]]: 1
typing.Iterator[_MongoField]: 1
typing.Iterator[_Criteria]: 1
_CityData: 1
typing.Tuple[(float, float)]: 1
_JobSeekerBucket: 1
typing.Callable[([pandas.DataFrame], typing.List[typing.Dict[(str, typing.Any)]])]: 1
typing.Callable[([pd.DataFrame], typing.List[typing.Dict[(str, typing.Any)]])]: 1
typing.Dict[(_U, typing.List[_T])]: 1
typing.List[float]: 1
job_pb2.EmploymentType: 1
typing.Iterator[typing.Tuple[(typing.Any, int, int)]]: 1
typing.List[_MatplotlibPatch]: 1
pandas.core.groupby.generic.DataFrameGroupBy: 1
typing.Iterator[typing.Any]: 1
scoring.ScoringProject: 1
typing.Iterator[typing.Tuple[(str, str, 'options_pb2.StringFormat')]]: 1
typing.Iterator[_JobOffer]: 1
typing.Tuple[(pd.Series, pd.Series)]: 1
typing.List[typing.Dict[(typing.Any, typing.Any)]]: 1
typing.Dict[(str, float)]: 1
typing.Iterator[typing.Tuple[(float, float)]]: 1
typing.Callable[([pd.DataFrame], pd.DataFrame)]: 1
typing.List[_RecoCDF]: 1
typing.List[_RecoScore]: 1
typing.Dict[(str, typing.Dict[(str, str)])]: 1
airtable.Airtable: 1
typing.Iterator[typing.Tuple[(typing.Dict[(str, typing.Any)], typing.Optional[str])]]: 1
proto.CachedCollection[typing.Dict[(str, str)]]: 1
mailjet_rest.Client: 1
'_MailjetUser': 1
_Response: 1
typing.Iterator[int]: 1
user_pb2.EmailSent: 1
typing.Optional[user_pb2.EmailSent]: 1
typing.Iterator[user_pb2.EmailSent]: 1
action_pb2.Action: 1
typing.Optional[job_pb2.JobGroup]: 1
typing.Optional[job_pb2.Job]: 1
job_pb2.LocalJobStats: 1
use_case_pb2.UseCasePools: 1
use_case_pb2.UseCase: 1
diagnostic_pb2.DiagnosticCategories: 1
typing.List[_XmlType]: 1
typing.List[training_pb2.Training]: 1
typing.Iterator[typing.Tuple[(message.Message, descriptor.FieldDescriptor)]]: 1
_ProtoType: 1
typing.Optional[use_case_pb2.UseCase]: 1
project_pb2.Advices: 1
action_pb2.ActionTemplate: 1
typing.List[action_pb2.ActionTemplate]: 1
proto.CachedCollection[advisor_pb2.AdviceModule]: 1
typing.Optional[advisor_pb2.AdviceModule]: 1
proto.CachedCollection[action_pb2.ActionTemplate]: 1
company_pb2.Company: 1
typing.Tuple[(pymongo_db.Database, pymongo_db.Database, pymongo_db.Database)]: 1
typing.Dict[(str, typing.List[strategy_pb2.StrategyModule])]: 1
typing.Optional[strategy_pb2.Strategy]: 1
requests.exceptions.HTTPError: 1
'mock._patch': 1
typing.List[_SentMessage]: 1
typing.Iterator[_SentMessage]: 1
association_pb2.MissionLocaleData: 1
geo_pb2.FrenchCity: 1
driving_license_pb2.OneEuroProgram: 1
typing.List[association_pb2.Association]: 1
association_pb2.Associations: 1
typing.List[online_salon_pb2.OnlineSalon]: 1
online_salon_pb2.OnlineSalons: 1
proto.CachedCollection[reorient_jobbing_pb2.LocalJobbingStats]: 1
typing.Iterator[commute_pb2.CommutingCity]: 1
commute_pb2.CommutingCities: 1
typing.List[commute_pb2.CommutingCity]: 1
typing.Optional[job_pb2.JobRequirements]: 1
application_pb2.InterviewTips: 1
network_pb2.ContactLeads: 1
typing.Iterator[network_pb2.ContactLeadTemplate]: 1
typing.Tuple[(str, float)]: 1
event_pb2.CloseByEvents: 1
typing.Optional[testimonial_pb2.Testimonials]: 1
create_company_expanded_data_pb2.CreateCompanyExpandedData: 1
typing.List[event_pb2.Event]: 1
event_pb2.Events: 1
typing.List[project_pb2.DepartementScore]: 1
project_pb2.RelocateData: 1
typing.Iterator[company_pb2.Company]: 1
project_pb2.SpontaneousApplicationData: 1
typing.Iterator[reorient_jobbing_pb2.ReorientJob]: 1
typing.List[jobboard_pb2.JobBoard]: 1
jobboard_pb2.JobBoards: 1
user_pb2.User: 1
'user_pb2.OptionalBool': 1
typing.Optional[user_pb2.EmploymentStatus]: 1
typing.Optional[project_pb2.Project]: 1
typing.Dict[(_T, _U)]: 1
typing.Optional[requests_aws4auth.AWS4Auth]: 1
'mail._Response': 1
Campaign[_UserProto]: 1
typing.Dict[(str, Campaign[typing.Any])]: 1
typing.Optional[typing.List[job_pb2.ModePercentage]]: 1
(bool, tuple): 1
Union[(pd.DataFrame, Dict[(str, pd.DataFrame)])]: 1
Dict[(str, Iterable[pd.Series])]: 1
(int, float, float): 1
OptimizeResult: 1
Tuple[(dt.datetime, dt.datetime)]: 1
(pd.DataFrame or pd.Series): 1
Union[(VersionedItem, pd.DataFrame, pd.Series)]: 1
VersionedItem: 1
Tuple[(Any, str)]: 1
Tuple[(float, str)]: 1
Alias: 1
Sequence[Alias]: 1
Endpoint: 1
Preference: 1
Optional[Preference]: 1
List[Preference]: 1
serial.Serial: 1
SystemDevice: 1
SystemStatus: 1
Dict[(str, Union[(Union[(int, bytes, bytearray)], Any)])]: 1
Optional[Depot]: 1
LocalTemplate: 1
List[BaseTemplate]: 1
Optional[BaseTemplate]: 1
'BaseTemplate': 1
ProjectTransaction: 1
Optional['MachineOutputRenderer']: 1
UpgradeManifestV1: 1
'PlatformsV2': 1
Optional['UpgradeManifestV1']: 1
CliConfig: 1
Tuple[(SuperSegmentationObject, SuperSegmentationObject)]: 1
SuperSegmentationObject: 1
Union[(Dict[(str, np.ndarray)], List[np.ndarray])]: 1
Union[(np.ndarray, List)]: 1
AbstractSet[_BlobId]: 1
AbstractSet[ImageTag]: 1
SomeClass: 1
Point3: 1
EffectId: 1
List[Point2]: 1
List['Point2']: 1
Union[('Unit', 'Point2')]: 1
Union[('Unit', 'Pointlike')]: 1
Set['Point2']: 1
List[Ramp]: 1
List[Set[Point2]]: 1
Set[FrozenSet[Point2]]: 1
Optional[Unit]: 1
AbilityId: 1
UnitTypeId: 1
AbilityData: 1
List[Attribute]: 1
Optional[List[UnitTypeId]]: 1
Race: 1
Optional['Cost']: 1
Optional[AbilityData]: 1
Optional[Register]: 1
(int, type): 1
(tuple or None): 1
(bytes, bytes, [bytes]): 1
[(str, bytes)]: 1
DeepDispatcherResponse: 1
DecoratorResponse: 1
Tuple[(Union[(Dict, None)], Union[(str, None)])]: 1
Tuple[(Union[(Dict, None)], Union[(List[str], None)])]: 1
Dict[(str, Set)]: 1
'PayloadResults': 1
BasePlugin: 1
DefaultDict[(str, List[str])]: 1
VariableName: 1
'_Options': 1
VariableValue: 1
PhoneNumber: 1
{str: object}: 1
structs.Params: 1
Station: 1
'Number|str': 1
[Cloud]: 1
Turbulance: 1
Icing: 1
PirepData: 1
RemarksData: 1
AirepData: 1
TafData: 1
MetarTrans: 1
TafTrans: 1
InvalidRequest: 1
'str|[str]': 1
'Station': 1
Callable[([str, str], int)]: 1
Deque: 1
Queue[T]: 1
Stack[T]: 1
SuffixArray: 1
'Heap': 1
Callable[([int, int], bool)]: 1
Callable[([int], bool)]: 1
CircularArray: 1
Callable[([Graph], List[Vertex])]: 1
Dict[(Vertex, int)]: 1
Union[(None, Vertex)]: 1
Union[(None, Edge)]: 1
Iterator[Edge]: 1
Vertex: 1
Union[(None, List[tuple])]: 1
Iterable[PluginScanResult]: 1
'HttpConnectTunnelingSettings': 1
PluginScanResult: 1
Union[(bool, int, float, str, Dict[(str, Any)])]: 1
Iterable[Tuple[(JobType, Exception)]]: 1
Iterable[Tuple[(JobType, Any)]]: 1
'HeartbleedScanResult': 1
'FallbackScsvScanResult': 1
Set[Type[PluginScanCommand]]: 1
Set[Type[Plugin]]: 1
'OpenSslCcsInjectionScanResult': 1
'SessionRenegotiationScanResult': 1
'CompressionScanResult': 1
List[optparse.Option]: 1
'PluginScanResult': 1
'EarlyDataScanResult': 1
List[TrustStore]: 1
TrustStore: 1
OcspResponseStatusEnum: 1
_nassl.SSL_SESSION: 1
AbstractSigningAlgorithm: 1
Tuple[(dict, bytes, bytes, str)]: 1
AbstractJWKBase: 1
Callable[([bytes], object)]: 1
SettingsBuilder: 1
LogStyleAdapter: 1
Iterable[Type[EventHandler]]: 1
iochannels.Log: 1
iochannels.Channel: 1
hosts.Host: 1
InjectableClass[hosts.LocalHost]: 1
InjectableClass[Persister]: 1
Optional[Iterator[Task]]: 1
wave.Wave_read: 1
[{str, type}]: 1
([sql_query_column_model_data.SQLColumnModelData], [sql_query_column_model.SQLColumnModel]): 1
(sql_query_column_model_data.SQLColumnModelData, {str, str}): 1
Union[(None, models.Model)]: 1
List[SingleQuery]: 1
RunMode: 1
Dict[(str, DataFrame)]: 1
Tuple[(List[Any], Optional[int])]: 1
Tuple[(arrow.Arrow, arrow.Arrow)]: 1
IHyperOpt: 1
Optional[Type[Any]]: 1
IPairList: 1
Opt[Node]: 1
Optional[PartySetting]: 1
Set[PartySetting]: 1
List[DbParty]: 1
Sequence[ArticleToShip]: 1
Iterator[OrderItemQuantity]: 1
Iterator[ArticleToShip]: 1
Dict[(ArticleNumber, str)]: 1
OrderActionType: 1
Sequence[OrderItem]: 1
Sequence[OrderEvent]: 1
Order: 1
DbOrder: 1
Iterator[DbOrderItem]: 1
Optional[Order]: 1
Sequence[Order]: 1
OrderItemTransferObject: 1
PaymentMethod: 1
Set[Article]: 1
OrderTransferObject: 1
OrderEmailData: 1
Sequence[CartItem]: 1
DbArticle: 1
Optional[DbAttachedArticle]: 1
List[Tuple[(ShopID, ArticleNumber, str, PaymentState, int)]]: 1
Iterator[ArticleCompilationItem]: 1
List[AvatarCreationTuple]: 1
Dict[(UserID, str)]: 1
BoardAccessGrantID: 1
DbCategory: 1
Sequence[CategoryWithLastUpdate]: 1
CategoryWithLastUpdate: 1
DbPosting: 1
Set[TopicID]: 1
Optional[Board]: 1
Sequence[Board]: 1
DbTopic: 1
Optional[LastCategoryView]: 1
Optional[LastTopicView]: 1
OrgaTeam: 1
Optional[OrgaTeam]: 1
Iterator[Tuple[(User, UserDetail)]]: 1
Iterator[Tuple[(Brand, int)]]: 1
OrgaFlag: 1
Optional[OrgaFlag]: 1
SessionToken: 1
Optional[SessionToken]: 1
Optional[DbArea]: 1
DbSeat: 1
List[Tuple[(TicketCategory, int)]]: 1
Dict[(AreaID, int)]: 1
Optional[DbSeat]: 1
Set[DbSeat]: 1
DbSeatGroup: 1
DbSeatGroupOccupancy: 1
Optional[DbSeatGroup]: 1
Sequence[DbSeatGroup]: 1
DbUserDetail: 1
UserEvent: 1
Set[User]: 1
AnonymousUser: 1
List[Country]: 1
MatchID: 1
Optional[Match]: 1
Sequence[MatchComment]: 1
MatchComment: 1
TourneyCategory: 1
Optional[TourneyCategory]: 1
Sequence[TourneyCategory]: 1
Avatar: 1
Optional[BrandSetting]: 1
Set[BrandSetting]: 1
Optional[Brand]: 1
List[Brand]: 1
Dict[(Badge, int)]: 1
Set[QuantifiedBadgeAwarding]: 1
Mountpoint: 1
Optional[Mountpoint]: 1
Sequence[Mountpoint]: 1
Optional[Snippet]: 1
Sequence[Snippet]: 1
Optional[SnippetVersion]: 1
Sequence[SnippetVersion]: 1
List[SnippetVersion]: 1
SnippetType: 1
Permission: 1
Optional[Role]: 1
Set[Role]: 1
FrozenSet[PermissionID]: 1
Sequence[Role]: 1
Sequence[Channel]: 1
DbItem: 1
Optional[DbItem]: 1
Optional[Item]: 1
Sequence[DbItemVersion]: 1
SubjectID: 1
Optional[Subject]: 1
Subject: 1
DbConsent: 1
Sequence[DbConsent]: 1
Optional[VersionID]: 1
Sequence[Version]: 1
Dict[(VersionID, int)]: 1
MessageTemplateRenderResult: 1
DbArchivedAttendance: 1
Sequence[Party]: 1
Dict[(PartyID, Set[User])]: 1
Dict[(PartyID, Set[UserID])]: 1
Optional[TicketCategory]: 1
Sequence[TicketCategory]: 1
Sequence[TicketEvent]: 1
Dict[(PartyID, int)]: 1
DbTicketBundle: 1
Optional[DbTicketBundle]: 1
Iterator[DbTicket]: 1
Optional[SiteSetting]: 1
Optional[Site]: 1
Iterable[Subscriber]: 1
Iterator[Subscriber]: 1
Dict[(Union[(SubscriptionState, str)], int)]: 1
Sequence[Subscription]: 1
List[PresenceTimeSlot]: 1
List[TaskTimeSlot]: 1
PresenceTimeSlot: 1
TaskTimeSlot: 1
Iterator[Tuple[(date, int)]]: 1
DateTimeRange: 1
List[NavigationItem]: 1
ImageFile: 1
Optional[ImageType]: 1
Iterator[OrderWithOrderer]: 1
Dict[(ArticleNumber, Article)]: 1
Iterator[OrderEventData]: 1
Set[Enum]: 1
Ticket: 1
Seat: 1
Iterator[UserEventData]: 1
List[Attendee]: 1
Dict[(SeatID, Seat)]: 1
Iterator[TicketEventData]: 1
Dict[(User, PresenceTimeSlot)]: 1
VersionID: 1
List[VersionID]: 1
SnippetVersionID: 1
BadgeID: 1
CharNode: 1
List[CharNode]: 1
WifiMode: 1
RunHandler: 1
Dict[(str, RepositoryMetadata)]: 1
Tuple[(str, Union[(int, str, None)], str, str, str)]: 1
Iterable[Tuple[(str, Dict[(str, Any)])]]: 1
Iterable[XmlElement]: 1
List[_PackageData]: 1
Iterable[Tuple[(str, Dict[(str, str)])]]: 1
Iterable[Tuple[(str, str, str)]]: 1
Iterable[Tuple[(str, str, int, str, str, str)]]: 1
MetapackageRequest: 1
Dict[(str, List[Package])]: 1
Iterator[types.ModuleType]: 1
ViewRegistrant: 1
Collection[Dict[(str, Any)]]: 1
List[Tuple[(float, float)]]: 1
List[Tuple[(float, str)]]: 1
Dict[(str, Package)]: 1
List[VersionAggregation]: 1
'UserVisibleVersionInfo': 1
xml.etree.ElementTree.Element: 1
Tuple[(Dict[(str, Any)], str)]: 1
'_AsyncJSONRPCBatch': 1
'LedCanvas': 1
LedLevel: 1
Iterator[Tuple[(int, int, LedLevel)]]: 1
Iterator[Position]: 1
UILayer: 1
StacPropertyView: 1
YAML: 1
jsonschema.Draft6Validator: 1
CommentedMap: 1
MainWindow: 1
GravityProject: 1
QSettings: 1
Generator[(RecentProject, None, None)]: 1
QLabel: 1
IAirborneController: 1
IFlightController: 1
IDataSetController: 1
DataType: 1
Tuple[(int, str, int)]: 1
VirtualBaseController: 1
FlightController: 1
TransformGraph: 1
List[QStandardItem]: 1
List[DataSegmentController]: 1
WorkspaceTab: 1
'IAirborneController': 1
List[MenuBinding]: 1
Union[(QWidget, None)]: 1
Generator[('VirtualBaseController', None, None)]: 1
MaybeChild: 1
Generator[(QStandardItem, None, None)]: 1
DataSegment: 1
'DataSegmentController': 1
Union[DataFrame]: 1
Union[(DataFrame, None)]: 1
DataFileController: 1
DataSegmentController: 1
Gravimeter: 1
Union[(IAirborneController, None)]: 1
Generator[(IAirborneController, None, None)]: 1
Flight: 1
Generator[(DataSetController, None, None)]: 1
AirborneProject: 1
Generator[(IFlightController, None, None)]: 1
DataFile: 1
Union[(QValidator, None)]: 1
List[Gravimeter]: 1
'GravityProject': 1
List[Flight]: 1
Union[(Flight, Gravimeter)]: 1
Dict[(str, Union[(str, int, float)])]: 1
sa_orm.Session: 1
DatabaseConfig: 1
_ClockSet: 1
typing.Iterable[Clocked]: 1
orm.Session: 1
nine.Type[EntityClock]: 1
nine.Type[TemporalProperty]: 1
typing.Iterable[sa.Column]: 1
psql_extras.DateTimeTZRange: 1
orm.RelationshipProperty: 1
bases.TemporalProperty: 1
Booking: 1
DatabaseBuild: 1
List[BaseSpider]: 1
BuildingsProvider.Builder: 1
html.HtmlElement: 1
SettingsSource: 1
ShelveSettings: 1
ModelResourceType: 1
AssociationModelResource: 1
List[praw.models.Submission]: 1
chr: 1
Union[(list, None)]: 1
List[Tuple[(Text, Text)]]: 1
Optional[Condition]: 1
List[DeclareLaunchArgument]: 1
List['LaunchDescriptionEntity']: 1
Optional[List['LaunchDescriptionEntity']]: 1
Optional[LaunchDescription]: 1
Iterable[Substitution]: 1
LaunchDescriptionSource: 1
Iterable[Tuple[(SomeSubstitutionsType, SomeSubstitutionsType)]]: 1
Optional[List[Substitution]]: 1
Callable[([Event], bool)]: 1
(Action, Tuple[Any]): 1
'LaunchDescription': 1
Optional[Type['Parser']]: 1
Union[(int, str, float, bool)]: 1
List[Union[(int, str, float, bool)]]: 1
Union[(List[Union[(int, str, float, bool)]], Union[(int, str, float, bool)])]: 1
Substitution: 1
Callable[([Action], bool)]: 1
Union[(Text, signal_module.Signals)]: 1
Optional[Dict[(Text, Text)]]: 1
List[Tuple[(LaunchDescriptionEntity, asyncio.Future)]]: 1
'Executor': 1
SrvTypeResponse: 1
JudgingCriteria: 1
AutoKeyData: 1
ItemWidgetType: 1
Tuple[(type, bytes)]: 1
'RoundRobin': 1
Union[(str, Iterable[str])]: 1
TextToSpeechClient: 1
SynthesizeSpeechResponse: 1
container_v1.ClusterManagerClient: 1
LanguageServiceClient: 1
AnalyzeEntitiesResponse: 1
AnalyzeEntitySentimentResponse: 1
AnalyzeSentimentResponse: 1
AnalyzeSyntaxResponse: 1
AnnotateTextResponse: 1
ClassifyTextResponse: 1
VideoIntelligenceServiceClient: 1
google.auth.credentials.Credentials: 1
google_auth_httplib2.AuthorizedHttp: 1
ClientInfo: 1
SpeechClient: 1
Dict[(str, ColumnFamily)]: 1
Dict[(str, ClusterState)]: 1
DagModel: 1
DagRun: 1
List[DagRun]: 1
Optional[DagRun]: 1
BaseOperator: 1
Union[('SerializedDAG', 'SerializedBaseOperator', dict, list, set, tuple)]: 1
DAG: 1
Iterable[Connection]: 1
'BaseHook': 1
Optional['BaseJob']: 1
Union[(int, bytes)]: 1
Tuple[Tuple[(int, ...)]]: 1
Tuple[(Tuple[(str, ...)], Tuple[(str, ...)])]: 1
(list, User): 1
CommandHandler: 1
CallbackQueryHandler: 1
(list, list, list): 1
PendingAction: 1
ElementTree.ElementTree: 1
GetListConfigParser: 1
Tuple[(LintResult, None)]: 1
Body: 1
Tenant: 1
models.Author: 1
models.Revision: 1
Tuple[(models.Revision, models.Source)]: 1
Author: 1
Tuple[(Revision, bool)]: 1
List[RevisionResult]: 1
Tuple[(GitHubClient, Identity)]: 1
List[Tuple[(UUID, str)]]: 1
Mapping[(str, UUID)]: 1
Tuple[(list, bool)]: 1
Mapping[(str, Build)]: 1
objects.PaginatedListProxy[objects.User]: 1
objects.PaginatedListProxy[objects.Repo]: 1
'PaginatedListProxy[objects.ReviewComment]': 1
'PaginatedListProxy[objects.Review]': 1
Head: 1
PartialUser: 1
'objects.PaginatedListProxy[objects.BaseResponseObject]': 1
'objects.PaginatedListProxy[objects.IssueEvent]': 1
'objects.Commit': 1
'PaginatedListProxy[objects.Gist]': 1
'PaginatedListProxy[objects.BaseObject]': 1
'objects.Repo': 1
'objects.Organization': 1
'objects.Issue': 1
'PaginatedListProxy[objects.BaseResponseObject]': 1
'PaginatedListProxy[objects.Branch]': 1
'PaginatedListProxy[objects.PullRequest]': 1
Optional[SchemaABC]: 1
RequestFilters: 1
RequestFields: 1
RequestIncludes: 1
RequestSorting: 1
SortDirection: 1
ResourceIdentifier: 1
QFParsed: 1
Tuple[(str, Optional[MimeTypeComponents])]: 1
'JSONPointer': 1
Generator[('People', None, None)]: 1
Generator[('Comment', None, None)]: 1
Generator[('Article', None, None)]: 1
'DiffNode': 1
Sequence['DiffEngine']: 1
Tuple[(Delta, ...)]: 1
json: 1
Dict[(str, Node)]: 1
Iterator[Dict]: 1
TypedNode: 1
AnnotationSufficiency: 1
association.ExtensionConjunctions: 1
List[AnnotationKey]: 1
InferenceResult: 1
List[Entity]: 1
Tuple[(List, RepairState)]: 1
GoRulesResults: 1
ontol.Ontology: 1
(StoreItem, StoreItemVariant): 1
StoreTransaction: 1
StrictPipeline: 1
API: 1
Sequence[Person]: 1
StreamingBody: 1
'SecretKey': 1
'SigningKey': 1
'PrivateKey': 1
'BackendOrganizationAddr': 1
'BackendOrganizationBootstrapAddr': 1
BackendOrganizationAddr: 1
BackendConfig: 1
BaseBlockStoreComponent: 1
Device: 1
Dict[(DeviceName, Device)]: 1
Tuple[(SecretKey, bytes)]: 1
Tuple[(Optional[DeviceID], Pendulum, bytes)]: 1
Tuple[(Optional[DeviceID], Pendulum)]: 1
Tuple[(OrganizationID, DeviceID)]: 1
'FileManifest': 1
'local_manifests.LocalFileManifest': 1
'FolderManifest': 1
'local_manifests.LocalFolderManifest': 1
'WorkspaceManifest': 1
'local_manifests.LocalWorkspaceManifest': 1
'UserManifest': 1
'local_manifests.LocalUserManifest': 1
RemoteManifest: 1
'BlockAccess': 1
Tuple[(EntryID, LocalFileManifest)]: 1
Tuple[(Tuple[WorkspaceEntry], bool)]: 1
Tuple[(UserManifest, bool)]: 1
LocalUserManifest: 1
List[Tuple[(OrganizationID, DeviceID, str, Path)]]: 1
yamldown.Buffer: 1
'cls': 1
'SimplePropellant': 1
('OpenBurnGrain' or None): 1
'SimResults': 1
ActionProperty: 1
'ColorScheme': 1
'PoolItemContextManager': 1
'Method': 1
'PrefixCodec': 1
PrefixCodec: 1
np.int8: 1
np.uint8: 1
np.uint16: 1
np.uint64: 1
Tuple[(np.float64, np.datetime64)]: 1
typing.IO[bytes]: 1
ModuleInfo: 1
InitContext: 1
typing.Callable[([_T], _T)]: 1
loader.ModuleInfo: 1
TempDownload: 1
QByteArray: 1
typing.Iterator['ScopedValue']: 1
'ConfigErrorDesc': 1
usertypes.Backend: 1
configtypes.BaseType: 1
typing.Tuple[(typing.Mapping[(str, Option)], Migrations)]: 1
typing.Mapping[(str, _ReplacementFunction)]: 1
BaseApiClient: 1
SSHClient: 1
ChannelFile: 1
JsonFileDict: 1
'BaseCoder': 1
'IRResource': 1
Optional['Resource']: 1
Optional[Scout]: 1
Tuple[(str, list)]: 1
'EnvoyConfig': 1
EnvoyCommonTLSContext: 1
ListOfCerts: 1
SequenceView: 1
Union[(Path, bool)]: 1
Tuple[(str, Callable)]: 1
Tuple[(Dict[(str, str)], Dict[(str, Dict[(str, str)])])]: 1
Tuple[(int, SSH)]: 1
RemoteInfo: 1
RowProxy: 1
Package(): 1
Pallet(): 1
Machine(): 1
BaseCommitizen: 1
List[Tuple[(float, int)]]: 1
Generator[(Tuple[(int, int, float)], None, None)]: 1
EveState: 1
EvalMetric: 1
'CrossEntropyMetric': 1
ModelConfig: 1
Tuple[(mx.sym.Symbol, mx.sym.Symbol, mx.sym.Symbol)]: 1
'OutputHandler': 1
Generator[(inference.TranslatorInput, None, None)]: 1
Dict[(str, mx.nd.NDArray)]: 1
Iterable[Tuple[(int, float)]]: 1
List[mx.nd.NDArray]: 1
inference_image.ImageCaptioner: 1
'Encoder': 1
Tuple[(mx.sym.Symbol, mx.sym.Symbol, int)]: 1
List[Tuple[(str, mx.init.Initializer)]]: 1
List[mx.io.DataDesc]: 1
TranslatorInput: 1
List[TranslatorOutput]: 1
Tuple[(mx.nd.NDArray, int, Optional[lexicon.TopKLexicon], List[Optional[constrained.RawConstraintList]], List[Optional[constrained.RawConstraintList]], mx.nd.NDArray)]: 1
Tuple[(List[ImageInferenceModel], vocab.Vocab)]: 1
Tuple[(mx.mod.Module, Tuple[int])]: 1
QTreeWidgetItem: 1
SettingsClass: 1
GolemRemoteDriver: 1
'ExtendedRemoteWebElement': 1
ExtendedRemoteWebElement: 1
Iterable[Tuple[(str, List[SourceInfo])]]: 1
Iterator[Tuple[(S, Iterator[T])]]: 1
Union[(Dict, str, List)]: 1
'types.CallableGenerator': 1
Generator[(ModuleInfo, None, None)]: 1
Callable[([ApplicationContext], None)]: 1
Dict[(str, Callable[([ApplicationContext], None)])]: 1
ApplicationContext: 1
List[ServerSlice]: 1
'List[ServerSlice]': 1
local.IOBase: 1
Union[(str, tuple, int, float, bool, 'DynamicProxy')]: 1
List[DefineEntity]: 1
List[Tuple[(Location, Location)]]: 1
List[DynamicStatement]: 1
Tuple[(str, 'NamedType')]: 1
Dict[(str, ExpressionStatement)]: 1
typing.Dict[(object, ResultVariable)]: 1
List[Explainer]: 1
Dict[(str, Tuple[(str, Callable)])]: 1
Dict[(str, Dict[(str, UrlMethod)])]: 1
List[CallTarget]: 1
'Endpoint': 1
Tuple[(Optional[Dict[(str, AnyStr)]], Optional[common.UrlMethod])]: 1
common.UrlMethod: 1
Optional[MutableMapping[(str, str)]]: 1
Generator[(Any, Any, None)]: 1
ResourceState: 1
'string[]': 1
'any': 1
'string': 1
(networkx.Graph, list): 1
Union[(asyncio.Future, SlackResponse)]: 1
Union[(dict, List[dict], str)]: 1
Mapping[(Text, Any)]: 1
sqlalchemy.sql.elements.BinaryExpression: 1
sqlalchemy.orm.query.Query: 1
Sequence[models.Commit]: 1
Sequence[models.Cherrypick]: 1
Sequence[models.Release]: 1
Sequence[models.Build]: 1
MetricImplementation: 1
Dict[(Text, MetricImplementation)]: 1
Dict[(models.TravisState, int)]: 1
(str, callable): 1
'Block': 1
List[Property]: 1
EnumValue: 1
u2.Session: 1
List[Mapping]: 1
'chatbot session object': 1
'io.BytesIO': 1
Union[(virtual_fs.AbstractFS, Tuple)]: 1
(SubAbstractFS, subfs.SubFS): 1
Iterable[Tuple[(str, Field)]]: 1
Optional[Sequence]: 1
List[Type[ParameterBuilder]]: 1
Type[ParameterBuilder]: 1
Loader: 1
(ndarray, ndarray): 1
Union[(str, dt.date)]: 1
Callable[([float], float)]: 1
Tuple[(bool, str, Union[(str, None)])]: 1
cusparseHandle_t: 1
ctypes.c_int: 1
DeviceNDArray: 1
scipy.sparse.csr_matrix: 1
[BaseStation]: 1
List[BaseStation]: 1
'list': 1
'Python object': 1
Operators: 1
[None, int]: 1
BucketList: 1
Optional[ResourceClass]: 1
Optional[ObjectType]: 1
Optional[Object]: 1
Sequence[Metadata]: 1
SystemMetadata: 1
Optional['Project']: 1
List['Project']: 1
List[Project]: 1
taskw.TaskWarrior: 1
Tuple[(int, float, complex)]: 1
Iterable[AnalysedGame]: 1
IrwinQueue: 1
Opt[IrwinQueue]: 1
EngineQueue: 1
MongoClient: 1
Opt[Dict]: 1
Opt[Response]: 1
AnalysedGameID: 1
AnalysedGameTensor: 1
List[TrueRank]: 1
AnalysedGame: 1
List[AnalysedGameTensor]: 1
AnalysedPositionID: 1
AnalysedPosition: 1
Opt[AnalysedPosition]: 1
List[EngineEval]: 1
Opt[GameTensor]: 1
Opt[Analysis]: 1
TrueRank: 1
Rank: 1
Analysis: 1
AnalysedMove: 1
Tuple[(Password, Salt)]: 1
Tuple[(Opt[Token], Authorised)]: 1
Tuple[(Opt[Authable], Authorised)]: 1
Opt[Token]: 1
GameReportID: 1
PlayerReportID: 1
List[WeightedMovePrediction]: 1
WeightedGamePrediction: 1
List[Opt[ndarray]]: 1
AnalysedGameActivation: 1
BasicGameActivationID: 1
BasicGameActivation: 1
Sequence[Link]: 1
Sequence[MDHLink]: 1
Sequence[bool]: 1
Dict[(bytes, str)]: 1
Tuple[(bytes, ...)]: 1
_Var: 1
'_TemporaryGroup': 1
_Group: 1
Sequence[Snapshot]: 1
Sequence[Dict[(str, str)]]: 1
Sequence[Repo]: 1
Sequence[PublishEndpoint]: 1
Dict[(str, 'BaseBuilder')]: 1
Dict[(str, 'BasePacker')]: 1
Dict[(str, 'BaseVersioner')]: 1
Dict[(str, BaseVersionParser)]: 1
Dict[(str, 'BaseVersionParser')]: 1
PEP440Adapter: 1
VersionContainer[PEP440Adapter]: 1
DockerClient: 1
Dict[(str, 'BaseInitializer')]: 1
ProcessOutput: 1
'DebianVersion': 1
ProcessedStringWithTemplates: 1
Union[(BytesIO, None)]: 1
Dict[(str, Union[(Dict[(str, str)], str)])]: 1
'PackerArtifact': 1
Dict[(str, 'BaseStore')]: 1
AptlyBaseVersioner: 1
AptlyVersioner: 1
AutoCloseSession: 1
List[DictableMixin]: 1
Optional[DictableMixin]: 1
group.Group: 1
party.Party: 1
expense.Expense: 1
payment.Payment: 1
VectorQueue: 1
Tuple[(set, set)]: 1
ListOrError: 1
DevBase: 1
Dict[(str, Tuple[str])]: 1
Dict[(str, OptionValue)]: 1
Tuple[(bytes, Path)]: 1
List[Tuple[(Pattern[bytes], str)]]: 1
Tuple[(List[str], List[Tuple[(int, str)]])]: 1
Tuple[(bytes, bytes, int)]: 1
Optional[TemporaryDirectory]: 1
Union[(str, TemporaryDirectory)]: 1
BlackJackGame: 1
__GameHandler: 1
__DBwrapper: 1
Union[(str, int, float, bool, None)]: 1
List[Category]: 1
List[Motion]: 1
Tuple[(int, Dict[(int, List[Motion])])]: 1
ConfigVariableDict: 1
IdManyRelatedField: 1
RedisConnectionContextManager: 1
Type[Model]: 1
List[Cachable]: 1
Dict[(str, Cachable)]: 1
ElementCache: 1
SchemaVersion: 1
Callable[([], List[Cachable])]: 1
RawConfigParser: 1
Conflict: 1
iter([Citation]): 1
iter([Text]): 1
iter([Element]): 1
iter([str]): 1
iter([bytes]): 1
TypeDescriptorNode: 1
TraitsNode: 1
ModulesNode: 1
FunctionNode: 1
HashOutput: 1
Optional[Error]: 1
Iterator[Error]: 1
Tuple[(NewErrorCountPerFile, int)]: 1
Callable[([str], str)]: 1
Tuple[(List[RouteState], Optional[UUID])]: 1
Tuple[(bool, List[RouteState], Optional[UUID])]: 1
Optional[PrivateKey]: 1
Optional[PublicKey]: 1
BalanceHash: 1
Tuple[(ST, List[List[Event]])]: 1
FeeAmount: 1
List[TokenAmount]: 1
Optional[List[Tuple[(TokenAmount, FeeAmount)]]]: 1
'SendRefundTransfer': 1
BlockHash: 1
TokenNetworkRegistry: 1
SecretRegistry: 1
ServiceRegistry: 1
PaymentChannel: 1
UserDeposit: 1
ClientErrorInspectResult: 1
typing.TransactionHash: 1
ChannelDetails: 1
BlockTimeout: 1
Optional[TokenNetworkAddress]: 1
Optional[Tuple[(Address, Address)]]: 1
Tuple[(Locksroot, Locksroot)]: 1
ID: 1
'WriteAheadLog': 1
Tuple[(ST, List[Event])]: 1
RaidenDBVersion: 1
CanonicalIdentifier: 1
QueueIdentifier: 1
'SignedBlindedBalanceProof': 1
'RequestMonitoring': 1
Optional[Signature]: 1
BalanceProofSignedState: 1
LockedTransferSignedState: 1
'PFSCapacityUpdate': 1
typing.List[typing.TokenAddress]: 1
Optional[typing.Address]: 1
List[APIServer]: 1
List[App]: 1
Tuple[(List[App], List[APIServer])]: 1
WriteAheadLog: 1
Iterator[DummyUser]: 1
Tuple[(RaidenService, PFSFeedbackEventHandler, TokenNetworkRegistryAddress, TokenNetworkAddress, List[Address], Optional[UUID])]: 1
List[TokenAddress]: 1
Tuple[(ServiceRegistry, List[str])]: 1
Tuple[(FakeWeb3, Dict[(int, Any)])]: 1
Iterator[SynapseConfigGenerator]: 1
Iterator[List[ParsedURL]]: 1
Optional[SC]: 1
Optional[TM]: 1
Optional[StateChange]: 1
Optional[ChannelSettleState]: 1
Optional[NewChannelDetails]: 1
DecodedEvent: 1
Iterable[DecodedEvent]: 1
Secret: 1
HostPort: 1
PublicKey: 1
PaymentID: 1
SecretHash: 1
TransactionHash: 1
Tuple[(bool, Optional[EthClient], Optional[str])]: 1
Proxies: 1
Tuple[(Address, PrivateKey)]: 1
typing.Optional[Adapter]: 1
Union[(str, Tuple[(str, str)])]: 1
Dict[(str, Union[(str, Tuple[(str, str)])])]: 1
Type[APNsException]: 1
HTTP20Connection: 1
Optional[torch.Tensor]: 1
MusicDataset: 1
Iterable[List[float]]: 1
PoloniexPrivateAPI: 1
PoloniexPublicAPI: 1
Generator[(float, None, None)]: 1
Tuple[(Series, Series)]: 1
OrderType: 1
Iterable[Series]: 1
MarketHistory: 1
MarketState: 1
Iterator[Tuple[(int, int, bytes)]]: 1
Dict[(str, np.array)]: 1
'CompletedCommand': 1
ObjectDetector: 1
Optional[discord.CategoryChannel]: 1
List[discord.Member]: 1
(Keyword or None): 1
(NecroUser or None): 1
pytz.timezone: 1
UserPrefs: 1
SheetRange: 1
NDChar: 1
CharacterStats: 1
Optional[RaceInfo]: 1
Necrobot: 1
Union[discord.abc.Messageable]: 1
(datetime.timedelta or None): 1
Daily: 1
RSAKey: 1
TunirConfig: 1
Tuple[(subprocess.Popen, str)]: 1
discord.VoiceChannel: 1
discord.CategoryChannel: 1
discord.User: 1
discord.Role: 1
Script: 1
Dict[(str, Dict[(int, str)])]: 1
Iterator[List]: 1
Tuple[(Any, float, float)]: 1
RigidBodyTick: 1
BallPrediction: 1
HelperProcessRequest: 1
LoadoutConfig: 1
BotConfigBundle: 1
Set[BotConfigBundle]: 1
gd.FieldInfoPacket: 1
DesiredGameState: 1
Type['RLBotException']: 1
Vector3: 1
FieldInfo: 1
BallPredictionPacket: 1
'PlayerConfig': 1
MatchSettings: 1
PlayerConfig: 1
Optional[Grade]: 1
Iterator[Result]: 1
typing.Union[(dict, None)]: 1
CommandContext: 1
ARGS_RESPONSE_NT: 1
typing.Tuple[(ArgumentParser, Response)]: 1
'AsyncCommandThread': 1
'environ.RemoteConnection': 1
typing.Union[(None, STEP_RENAME)]: 1
environ.Response: 1
typing.Union[(ProjectStep, None)]: 1
RunResult: 1
typing.Union[(str, None, dict)]: 1
SharedCache: 1
'CauldronTest': 1
typing.Union[(projects.Project, None)]: 1
typing.Union[(None, report.Report)]: 1
typing.Union[(None, 'projects.ProjectStep')]: 1
typing.Union[(types.ModuleType, None)]: 1
'caching.SharedCache': 1
typing.Union[(dict, str)]: 1
typing.Union[(None, dict, 'definitions.FileDefinition')]: 1
typing.List[file_io.FILE_COPY_ENTRY]: 1
typing.Union[(FILE_WRITE_ENTRY, FILE_COPY_ENTRY)]: 1
typing.Union[(None, STEP_DATA)]: 1
typing.Union[(int, None)]: 1
futures.Executor: 1
Conditional: 1
Case: 1
Test: 1
UnboundTest: 1
LazyCall: 1
Optional['CommandGraphNode']: 1
'CommandGraphNode': 1
'CommandGraphCall': 1
Tuple[(Optional[List[str]], Optional[List[str]])]: 1
Optional[EntityType]: 1
Union[(bool, int, float, str, Mapping[(str, Union[(bool, int, float, str, Mapping[(str, object)], Sequence)])], Sequence[Union[(bool, int, float, str, Mapping[(str, object)], Sequence)]])]: 1
Union[(datetime.date, datetime.datetime)]: 1
MonolingualText: 1
Iterator[Locale]: 1
'MonolingualText': 1
Union[(MultilingualText, type)]: 1
Iterator['Entity']: 1
Sequence[object]: 1
Iterator[Tuple[('Entity', Sequence[object])]]: 1
Sequence[Tuple[('Entity', Sequence[object])]]: 1
Iterator[Sequence[object]]: 1
Sequence[Sequence[object]]: 1
EntityType: 1
MultilingualText: 1
[Any, None]: 1
[compose, Any]: 1
number: 1
Tuple[(str, int, float)]: 1
ocr_record: 1
TorchSeqRecognizer: 1
transforms.Compose: 1
IntTensor: 1
Tuple[('PytorchCodec', Set)]: 1
cursor.CursorFactory: 1
Set[Tuple[(str, str)]]: 1
BlockCompiler: 1
BoundTagFactory: 1
WordList: 1
Tuple[(ECDS, bytes)]: 1
Tuple[(bytes, SValues)]: 1
Tuple[(int, bool)]: 1
Tuple[(Point, int)]: 1
Tuple[(dsa.ECDS, Receipt)]: 1
Tuple[(ssa.ECSS, Receipt)]: 1
EventHandlerInfo: 1
List[Tuple[(int, ExpectationsVsPredictionsInGroupedBatches)]]: 1
Optional[List[LabeledExample]]: 1
'Corpus': 1
Dict[(K, 'Corpus')]: 1
Callable[([List[LabeledExampleFromFile]], Tuple[(List[LabeledExampleFromFile], List[LabeledExampleFromFile])])]: 1
List[LabeledSpectrogram]: 1
Dict[(K, Tuple[V])]: 1
Iterable[List[E]]: 1
ExpectationsVsPredictionsInGroupedBatches: 1
mathutils.Matrix: 1
'PoseThumbnailsPreferences': 1
ptr: 1
Iterator[GaugeMetricFamily]: 1
Optional[ConsoleOutputSegment]: 1
Slave: 1
List[Build]: 1
'RouteNode': 1
List['RouteNode']: 1
'UnresponsiveServer': 1
SystemStates: 1
SensorTypes: 1
InlineKeyboardButton: 1
'Revision': 1
(dict, Dict[(str, List[dict])]): 1
(dict, List[dict]): 1
Memory: 1
Dict[(str, MEMORY_IMPL)]: 1
List[MEMORY_IMPL]: 1
Dict[(int, op.Instruction)]: 1
Tuple[(str, Tuple[(str, ...)])]: 1
TorrentsDiff: 1
Dict[(str, Optional[Torrent])]: 1
Dict[(str, Torrent)]: 1
Dict[(str, List[Torrent])]: 1
List[Torrent]: 1
List[Union[(Torrent, str)]]: 1
Union[(Torrent, str)]: 1
Tuple[(bytes, Dict[(str, str)])]: 1
Union[(addinfo, addinfourl)]: 1
Tuple[(argparse.ArgumentParser, List[str], Section)]: 1
Generator[(Log, None, None)]: 1
Optional[BaseClient]: 1
List[BaseTracker]: 1
List[BaseConfetti]: 1
'StatRecord': 1
Optional[WithStat]: 1
List[StatRecord]: 1
Callable[([Torrent, Optional[BaseClient]], str)]: 1
Dict[(str, Type[BasePlugin])]: 1
Type[BaseClient]: 1
'UpdateResult': 1
Type[BaseConfetti]: 1
Section: 1
Union[(int, float, bool, str, None)]: 1
List[List[Union[(T, str, bool)]]]: 1
Dict[(str, Union[(str, Dict[(int, str)])])]: 1
Iterable[Tuple[(List[K], Any)]]: 1
Downloaders: 1
ProcessorPipeline: 1
OriginalFile: 1
EnsemblUrlBuilder: 1
Union[(list, tuple)]: 1
Union[(str, dict, tuple)]: 1
'Function | Any': 1
'Balance': 1
typing.Optional[GitHub]: 1
List[Diff[T]]: 1
Iterable[Tuple[(T, T)]]: 1
Iterator[CaptureResult[Section]]: 1
Iterator[CaptureResult[Wikilink]]: 1
Iterable[Revision]: 1
Iterable[Page]: 1
QFileDialog: 1
Modulator: 1
SimulatorItem: 1
defaultdict(set): 1
ProtocolGroup: 1
ProtocolTreeItem: 1
(np.ndarray, int): 1
QGraphicsScene: 1
IQArray: 1
QUndoCommand: 1
SpectrogramScene: 1
QTextCursor: 1
ProtocolTableModel: 1
GeneratorTableModel: 1
GeneratorListModel: 1
ZoomableScene: 1
QRectF: 1
SimulatorMessage: 1
SimulatorMessageTableModel: 1
MessageTypeTableModel: 1
ParticipantTableModel: 1
LabelValueTableModel: 1
PLabelTableModel: 1
ProtocolTreeModel: 1
SimulatorMessageFieldModel: 1
ProtocolGenerator: 1
(tibrv_status, tibrvftMember): 1
(tibrv_status, tibrvftMonitor): 1
(tibrv_status, tibrvDispatcher): 1
(tibrv_status, int, int, int): 1
(tibrv_status, tibrvMsg): 1
(tibrv_status, tibrvEventType): 1
List[SubmittedCodefile]: 1
SimilarityResult: 1
ISignClient: 1
CertificateSubject: 1
CertificateIssuer: 1
Base64Str: 1
PDF: 1
Sequence[FieldError]: 1
isign.Files: 1
'SVG': 1
PipelineStageUnwind: 1
PipelineStageProject: 1
Aggregateby: 1
MetadataTags: 1
MetadataTimeRange: 1
List[UserProxyType]: 1
List[GroupProxyType]: 1
List[PropertyProxyType]: 1
Callable[([DecoratedInType], DecoratedOutType)]: 1
UnboundTableArgs: 1
LazilyJoined: 1
List[Locale]: 1
Optional[Locale]: 1
List[DataSource]: 1
Optional[UserLike]: 1
Backends: 1
BaseUserDB: 1
Optional[BaseFinanceInformation]: 1
typing.Iterable[T]: 1
py._path.local.LocalPath: 1
typing.Iterable[typing.Dict[(str, typing.Any)]]: 1
QWebEnginePage: 1
(object or str): 1
ConfigAccessor: 1
Interface: 1
Camera: 1
List[vimba_c.VmbFeatureInfo]: 1
vimba_c.VmbFrame: 1
List[vimba_c.VmbCameraInfo]: 1
List[vimba_c.VmbInterfaceInfo]: 1
Union[(str, int, float, bool)]: 1
Union[(None, Tuple[(int, int)], Tuple[(float, float)], Tuple[(str, str)])]: 1
Vimba: 1
udp_client.SimpleUDPClient: 1
Tuple[(bool, int, bool, Optional[FBSType], bool)]: 1
Optional[FBSType]: 1
Tuple[(str, Tuple)]: 1
Iterator[Tuple[(Text, Text)]]: 1
Tuple[(Optional[int], Optional[Text])]: 1
WSGIResponse: 1
'BeRbcManager': 1
Union[(pd.DataFrame, gpd.GeoDataFrame)]: 1
Tuple[(float, float, float, float, float, float)]: 1
(np.array, np.array): 1
(Tuple, np.array, float): 1
models.User: 1
'ProjectsQuerySet': 1
ProjectsQuerySet: 1
Iter(Configuration): 1
Configuration.Name: 1
Iter(Language): 1
LanguageEntity: 1
Iter(LanguageEntity): 1
Iter(TestFixture): 1
TestFixture.Name: 1
BlogSeo: 1
Iter(BlogSeo): 1
Iter(Gateway): 1
Login: 1
Iter(Role): 1
Iter(Right): 1
IsAuthenticated.HasAccess: 1
PersonIcon.Id: 1
CollaboratorSpecification: 1
BlogTypePost: 1
Iter(BlogTypePost): 1
BlogTypePost.Id: 1
Blog: 1
Iter(BlogMedia): 1
BlogMedia.Id: 1
BlogPost: 1
Iter(BlogCollaboratorType): 1
BlogCollaborator: 1
Iter(BlogCollaborator): 1
Iter(BlogComment): 1
BlogCollaboratorGroup: 1
Iter(BlogCollaboratorGroupMember): 1
BlogCollaboratorGroup.Id: 1
BlogTheme.Id: 1
ISearchProvider: 1
IDelivery: 1
IQueryIndexer: 1
IThumbnailProcessor: 1
Iter(MetaInfo): 1
Iter(MetaDataInfo): 1
Iter(MetaData): 1
Iter(QueryCriteria): 1
MetaType: 1
Iter(MetaType): 1
Iter(ArticleCtx): 1
Iter(Article): 1
ValidationResult: 1
Iterable[Exception]: 1
Iterable[Snapshot]: 1
Iterable[_WatchEvent]: 1
Serializable: 1
List[Union[(timedelta, isodate.Duration)]]: 1
List[timedelta]: 1
GoogleDiskIdentifier: 1
pykube.KubeConfig: 1
Optional[kube.Resource]: 1
ResourceKey: 1
kube.Resource: 1
Tuple[(pykube.objects.PersistentVolume, pykube.objects.PersistentVolumeClaim)]: 1
FileKind: 1
AudioSourceInfo: 1
AudioSource: 1
Iterator[Iterator[np.ndarray]]: 1
DynamicRangeMetrics: 1
Dict[(str, Tuple[(str, Optional[str])])]: 1
Union[(Tuple[(TypeLike, ...)], Dict[(str, Tuple)])]: 1
Dict[(str, Tuple)]: 1
ExchangeRateManager: 1
typing.Generator[(bytes, None, None)]: 1
'StreamDescriptor': 1
typing.Tuple[(typing.Optional[typing.Dict], bytes)]: 1
typing.Optional[BlobAvailabilityRequest]: 1
typing.Optional[BlobPriceRequest]: 1
typing.Optional[BlobDownloadRequest]: 1
typing.Optional[BlobPaymentAddressRequest]: 1
typing.Optional[BlobErrorResponse]: 1
typing.Optional[BlobAvailabilityResponse]: 1
typing.Optional[BlobPriceResponse]: 1
typing.Optional[BlobDownloadResponse]: 1
typing.Optional[BlobPaymentAddressResponse]: 1
'BlobResponse': 1
Claim: 1
MainNetLedger: 1
WalletDatabase: 1
Iterator[I]: 1
'Stream': 1
'Repost': 1
'Collection': 1
'Claim': 1
LanguageList: 1
LocationList: 1
Fee: 1
Video: 1
ClaimReference: 1
typing.Tuple[(bytes, str)]: 1
IterativeNodeFinder: 1
IterativeValueFinder: 1
typing.Tuple[(asyncio.Queue, asyncio.Task)]: 1
typing.Union[(RequestDatagram, ResponseDatagram, ErrorDatagram)]: 1
typing.Tuple[(bytes, str, int)]: 1
typing.Tuple[(typing.Union[(int, bytes, list, tuple, dict)], int)]: 1
typing.Callable[([float], typing.Awaitable[None])]: 1
'BaseWalletManager': 1
typing.Tuple[(str, bytes)]: 1
Iterator[Tuple[(bytes, dict)]]: 1
'ArithUint256': 1
'baseaccount.BaseAccount': 1
'Wallet': 1
Optional[BareCustomEmoji]: 1
'Cursor': 1
Tuple[Tuple]: 1
Optional[sqlite3.Row]: 1
Iterable[sqlite3.Row]: 1
Generator[(Any, None, 'Connection')]: 1
'Optional[Type]': 1
'DictWrapper': 1
Iterator['ElmPackage']: 1
Optional['ElmPackage']: 1
Optional['ElmApplication']: 1
Iterator[ElmPackage]: 1
Dict[(str, VersionRange)]: 1
VersionRange: 1
ElmProject: 1
Iterator[ElmModule]: 1
Iterator[Tuple[(str, ExactVersion)]]: 1
ExactVersion: 1
'SearchEntry': 1
Iterator[RawSourceLine]: 1
'ChunkLineType': 1
Iterator[Chunk]: 1
TransitionInfo: 1
Tuple[(dict, OrderedDict)]: 1
GroupEvaluation: 1
ColorizingStreamHandler: 1
Tuple[(ColorizingStreamHandler, ColorizingStreamHandler)]: 1
rpm.spec: 1
Union[(Type[Plugin], List[Type[Plugin]])]: 1
Options: 1
List[Tuple[(Pattern[str], str)]]: 1
Union[(List[Type[Plugin]], Type[Plugin])]: 1
JWTSecretsSetup: 1
JWTSecret: 1
WildcardTLSSecretSetup: 1
IngressControllerWithSecret: 1
JWTAuthMergeableSetup: 1
SmokeSetup: 1
ExternalNameSetup: 1
Union[(np.ndarray, Tuple[(np.ndarray, Dict)])]: 1
Dict[(str, BoxBoundary)]: 1
Tuple[(str, np.ndarray, np.ndarray)]: 1
Tuple[(ModelBase, pd.DataFrame, pd.DataFrame)]: 1
error: 1
'MergedModelInstance': 1
Tuple[(Model, List[Model])]: 1
RequestFactory: 1
Optional[Profile]: 1
Union[(str, dict)]: 1
Tuple[(str, str, List)]: 1
RsaKey: 1
Optional[UserType]: 1
List[UserType]: 1
Optional[ActivitypubProfile]: 1
HTTPSignatureHeaderAuth: 1
Optional['Wizard']: 1
Optional['TensorboardSpecification']: 1
Optional['JobSpecification']: 1
Optional['NotebookSpecification']: 1
Optional['BuildSpecification']: 1
Tuple[('BuildJob', bool)]: 1
'Cluster': 1
Optional['PipelineSpecification']: 1
Optional['PersistenceConfig']: 1
Optional[PodResourcesConfig]: 1
'TensorboardJob': 1
Optional['OutputsConfig']: 1
'RedisEphemeralTokens': 1
Optional[Union[(str, Dict)]]: 1
List[Optional[Union[(str, Dict)]]]: 1
Tuple[(str, Action)]: 1
Tuple[(str, 'Option')]: 1
'option': 1
'Option': 1
Optional[Tuple[('EphemeralUser', None)]]: 1
Tuple[('EphemeralUser', None)]: 1
'PodStateConfig': 1
Optional[Mapping]: 1
Optional['JobStateConfig']: 1
Optional['Cluster']: 1
Tuple[(str, 'Event')]: 1
Iterable['Attribute']: 1
'EventContextSpec': 1
'BuildJob': 1
ExperimentGroup: 1
Union[(Response, StreamingHttpResponse)]: 1
'BaseSpecification': 1
Optional['ContainerResourcesConfig']: 1
'CallbackCondition': 1
ApprovedModel: 1
List[TextIO]: 1
WirelessInterface: 1
WirelessStation: 1
WirelessAccessPoint: 1
PolarisationFrame: 1
(Image, float, float): 1
Union[(Visibility, BlockVisibility)]: 1
(Image, Image): 1
ConvolutionFunction: 1
GridData: 1
Union[(Mapping[(Hashable, int)], Tuple[(Hashable, ...)])]: 1
Indexes: 1
Iterator['Hashable']: 1
Mapping[(Hashable, int)]: 1
Mapping[(Hashable, Variable)]: 1
Iterator[Hashable]: 1
'OrderedDict[Any, pd.Index]': 1
Tuple[(Variable, Optional[pd.Index])]: 1
IPSecResult: 1
List[Comment]: 1
Comment: 1
typing.Sequence[F]: 1
typing.Sequence[api.Resource]: 1
FPTree: 1
Mapping[(str, List[Tuple[(float, float)]])]: 1
ComparisonState: 1
Gtk.Window: 1
SubprocessGenerator: 1
GtkSource.StyleScheme: 1
Gdk.RGBA: 1
Tuple[(ColourMap, ColourMap)]: 1
MeldSettings: 1
Optional[ActionMode]: 1
Gtk.RecentFilter: 1
Gio.PropertyAction: 1
Tuple[(Optional[Message], bool)]: 1
Optional[can.typechecking.CanFilters]: 1
BusState: 1
AsyncIterator[Message]: 1
Awaitable[Message]: 1
Tuple[(Message, ...)]: 1
Tuple[(bool, Optional[models.Field])]: 1
HStoreColumn: 1
Tuple[(str, List[Any])]: 1
'ConditionalJoin': 1
value_class: 1
Optional[LocalizedValue]: 1
LocalizedValue: 1
Optional[LocalizedIntegerValue]: 1
CompletedProcessWithVars: 1
TradeAction: 1
BaseTradingStrategy: 1
'InitialConcentration': 1
typing.Dict[(str, typing.Callable)]: 1
typing.Generator[('ParameterGroup', None, None)]: 1
Parameter: 1
typing.Generator[(typing.Tuple[(str, Parameter)], None, None)]: 1
Parameters: 1
Scheme: 1
typing.Type['glotaran.model.Model']: 1
'Scheme': 1
'glotaran.model.Model': 1
typing.Dict[(str, typing.Union[(xr.DataArray, xr.Dataset)])]: 1
typing.Type['Model']: 1
'Display': 1
DataGenerator: 1
typing.Tuple[(dict, np.ndarray)]: 1
typing.Tuple[(BaseModel, BasePreprocessor, DataGeneratorBuilder, np.ndarray)]: 1
typing.Tuple[(BaseModel, np.ndarray)]: 1
typing.Union[(matchzoo.DataPack, typing.Tuple[(matchzoo.DataPack, list)])]: 1
mz.embedding.Embedding: 1
'BasePreprocessor': 1
Param: 1
collections.abc.KeysView: 1
hyperopt.pyll.Apply: 1
SpaceType: 1
typing.Callable[([typing.Any], bool)]: 1
typing.Union[('BaseMetric', str)]: 1
Embedding: 1
'matchzoo.DataPack': 1
StatefulUnit: 1
List[Alteration]: 1
Core: 1
Dict[(str, ndarray)]: 1
Timedelta: 1
Callable[([], Union[(datetime, Number)])]: 1
Callable[([], Union[(timedelta, Number)])]: 1
Union[(pd.DataFrame, pd.Series)]: 1
Dict[(int, List[Callable])]: 1
Callable[([Event], Event)]: 1
List[Tuple[(str, Tuple[str])]]: 1
OrderedComponentSet: 1
Union[(str, Tuple[(str, str, SubFuncContext, bool)])]: 1
DetectionErrorRate: 1
(Optional[int], Optional[str]): 1
GraphQLSchema: 1
PentConfig: 1
Dict[(V, K)]: 1
Sanic: 1
GraphQLNonNull: 1
GraphQLList: 1
Iterator[pymysql.Connection]: 1
KvetchData: 1
List[UUID]: 1
List[EdgeData]: 1
List[IndexEntry]: 1
Iterable[IndexDefinition]: 1
loompy.LoomView: 1
Union[(List[Any], colors.LinearSegmentedColormap)]: 1
Union[(chrono.Date, str)]: 1
Optional[payee.Payee]: 1
control.Database: 1
Tuple[(bool, bool, bool)]: 1
Tuple[(bool, bool, account.Account)]: 1
'Payee': 1
'Pig': 1
List[Tuple[('account.Account', chrono.Date, decimal.Decimal, 'payee.Payee', str)]]: 1
Tuple[(chrono.date.Date, decimal.Decimal, decimal.Decimal)]: 1
'Register': 1
KeyEventHandler: 1
List[Template]: 1
Optional[builtins.bool]: 1
Optional[builtins.int]: 1
Optional[builtins.float]: 1
Optional[builtins.list]: 1
Optional[builtins.tuple]: 1
Optional[builtins.set]: 1
Optional[builtins.dict]: 1
Iterable['Project']: 1
'Favorite': 1
Iterable['Favorite']: 1
'QtGui.QFont': 1
'WbScmUiComponentsABC': 1
'WbScmUiActionsABC': 1
'wb_scm_project_dialogs.ProjectSettingsDialog': 1
'wb_main_window.WbMainWindow': 1
Optional['CmusConfig._CmusConfig']: 1
http.client.HTTPConnection: 1
typing.Set: 1
typing.Optional[BufferLineMatch]: 1
'ExportsContext': 1
typing.List[ModuleDefinition]: 1
'TimersContext': 1
IRCServer.Server: 1
typing.List[IRCLine.SentLine]: 1
typing.Iterable[IRCChannel.Channel]: 1
IRCChannel.Channel: 1
EventHook: 1
Docstring: 1
typing.Dict[(str, typing.Optional[str])]: 1
ssl.SSLSocket: 1
typing.Dict[(str, Response)]: 1
IRCLine.Hostmask: 1
typing.Optional[CTCPMessage]: 1
typing.Dict[(bytes, bytes)]: 1
Union[(Tuple[(str, List[str], str, Dict[(str, Optional[str])])], Tuple[(None, None, None, None)])]: 1
Optional[IRCResponse]: 1
IRCResponse: 1
Gio.Menu: 1
APIClient: 1
Tuple[(Union[(str, Tuple[(str, str)])], ...)]: 1
'EmailTemplate': 1
HWINDOW: 1
Tuple[(xgb.DMatrix, xgb.DMatrix)]: 1
'Nougat': 1
Callable[([], Awaitable[None])]: 1
Tuple[(Driver, Controller)]: 1
GridOutCursor: 1
Callable[([MongoCredential, 'aiomongo.Connection'], None)]: 1
Tuple[(List[List[str]], List[List[str]])]: 1
Union[(str, RancherUpgradeException)]: 1
Union[(Tuple[(str, dict)], RancherUpgradeException)]: 1
Union[(str, RancherUpgradeFailException)]: 1
Iterable[nn.Module]: 1
GoogleDocsSource: 1
typing.Optional[SocialToken]: 1
typing.Iterable[GithubDirectoryEntry]: 1
typing.Iterable[User]: 1
typing.Set[AccountRole]: 1
AccountFetchResult: 1
typing.Iterable[Account]: 1
typing.Optional[SourceEditContext]: 1
SourceContentFacade: 1
typing.Optional[Session]: 1
typing.Type['Source']: 1
typing.Optional[bytearray]: 1
ProjectFetchResult: 1
typing.Iterable[DirEntry]: 1
DirectoryEntryType: 1
DirectoryListEntry: 1
typing.Iterable[PathEntry]: 1
typing.Iterable['ProjectPermissionType']: 1
ProjectPermissionType: 1
typing.Set[ProjectPermissionType]: 1
typing.List[ProjectRole]: 1
SessionStatus: 1
SessionRequest: 1
'Generator[ChangeSet]': 1
TestSuite: 1
FileMeta: 1
FileNameAndExtension: 1
IkaType: 1
'ConnectionParams': 1
Union[(bool, None, str)]: 1
request.Request: 1
(bytes, str, str): 1
CAHPlayer: 1
Cursor: 1
TranslationUnit: 1
(EchoFormat, EchoFormat): 1
SingleIntFormat: 1
IntSequenceFormat: 1
RedundantSingleIntDirectoryFormat: 1
MappingDirectoryFormat: 1
MappingFormat: 1
FourIntsDirectoryFormat: 1
Union[(str, Node)]: 1
Union[(int, float, 'Rdate', 'Rstring')]: 1
mx.context.Context: 1
typing.Tuple[(dict, mx.ndarray.ndarray.NDArray)]: 1
typing.Union[(mx.nd.NDArray, mx.nd.NDArray, mx.nd.NDArray)]: 1
mx.gluon.nn.Embedding: 1
typing.List[typing.Union[(list, dict)]]: 1
MqttSettings: 1
Arn: 1
(bool or None): 1
(list, dict, None): 1
SearchResponse: 1
TwitterAccount: 1
DiscordAccount: 1
Tuple[(List[str], List[Dict])]: 1
Tuple[(Optional[str], Optional[str], List[str])]: 1
FileImportInfo: 1
List[TrackedObject]: 1
RandomQuoteResponse: 1
QuoteResponse: 1
List[bayesianpy.model.NetworkModel]: 1
jp.JProxy: 1
Iterable[pd.DataFrame]: 1
TickData: 1
OrderData: 1
Sequence[TradeData]: 1
ContractData: 1
Sequence[ContractData]: 1
AccountData: 1
Sequence[AccountData]: 1
PositionData: 1
Sequence[PositionData]: 1
List[BarData]: 1
BaseDatabaseManager: 1
Sequence['BarData']: 1
Sequence['TickData']: 1
Generator[(bytes, None, None)]: 1
HASH: 1
Tuple[(Optional[str], Dict)]: 1
Forms: 1
Dict[(Commit, List[TagReference])]: 1
Tuple[(str, Any, Any)]: 1
Tuple[(str, str, str, str, str, str)]: 1
Tuple[Release]: 1
unittest.TestCase: 1
Tuple[(Dict[(str, str)], Dict[(str, Union[(dict, str, list)])])]: 1
t.List[int]: 1
BenchmarkingResultBlock: 1
t.List[t.Dict[(str, t.Any)]]: 1
'Tester': 1
t.Union[(str, t.List[str])]: 1
t.Optional[int]: 1
t.List[t.Tuple[(t.Any, t.Any)]]: 1
'InsertionTimeOrderedDict': 1
PlayState: 1
Selection: 1
Set[BinOp]: 1
SolverInterface: 1
List[Label]: 1
Tuple[(Signal, BinOp)]: 1
Tuple[(Signal, Number)]: 1
Set[Signal]: 1
List[List[Expr]]: 1
(bool or int): 1
FuncDesc: 1
(str or Signal): 1
(Expr, Dict[(Prop, Automaton)], Set[Automaton]): 1
'ExtLabel': 1
DstFormulaProp: 1
Tuple[(Set[Node], Set[Transition])]: 1
AHT: 1
LabelsMap: 1
(str, str, bool): 1
(Iterable[Signal], Iterable[Signal], dict): 1
0: 1
List[Tuple[(Node, Label, bool)]]: 1
Set[FrozenSet[Node]]: 1
Dict[(Label, Set[Tuple[(bool, NBWNode)]])]: 1
(AHTTransition, AHTTransition): 1
Set[AHTTransition]: 1
(Tuple[(bool, (LTS or str or None))] or Tuple[(None, None)]): 1
Cmd2ArgumentParser: 1
plugin.CommandFinalizationData: 1
HistoryItem: 1
CommandResult: 1
JSONResponse: 1
uint: 1
Union[(str, Real)]: 1
Tuple[(int, Real)]: 1
Tuple[(str, Real)]: 1
Generator[(int, Union[(str, None)], float)]: 1
Generator[(int, Union[(str, None)], Any)]: 1
T_1_py3: 1
'TestResultt2': 1
Tuple[(Sequence[str], bool)]: 1
(np.array, float): 1
EventRecord: 1
NewEventData: 1
Heuristic: 1
FluentState: 1
Dict[(str, List[Unit])]: 1
Tuple[(str, Dict[(str, list)])]: 1
Dict[(str, set)]: 1
BrowserOutputObject: 1
List[MorphPossibilityObject]: 1
redis.client.Redis: 1
dbAuthor: 1
ResultList: 1
LineList: 1
typing.Callable[([Vec, Vec, Term], Expr)]: 1
typing.Callable[([Vec, Vec, Term], bool)]: 1
Swapper: 1
MyClass: 1
'Competition': 1
camera.SystemCamera: 1
'Effect': 1
Type['Effect']: 1
'EffectPackage': 1
List[Type[Effect]]: 1
List[Effect]: 1
Union[(moderngl.Uniform, moderngl.UniformBlock, moderngl.Subroutine, moderngl.Attribute, moderngl.Varying)]: 1
moderngl.VertexArray: 1
List[BufferFormat]: 1
'Key': 1
ZipAddress: 1
List[FreightResponse]: 1
xml_utils.Element: 1
Optional[Receipt]: 1
PostalUnit: 1
ShippingLabel: 1
SenderAddress: 1
ReceiverAddress: 1
FreightResponse: 1
'ZipCode': 1
'FederalTaxNumber': 1
'StateTaxNumber': 1
'Service': 1
'ExtraService': 1
'RegionalDirection': 1
PalmMessage: 1
Iterable[MtcnnBridge]: 1
Iterable[FacenetBridge]: 1
'ሴ噸邫췯': 1
[SvyStats]: 1
List[Rule]: 1
ShiftFunction: 1
List[Decryption]: 1
Optional[git.Repo]: 1
Tuple[(BoardModel, PostDetails)]: 1
ManagePostDetails: 1
VerificationMethod: 1
'Optional[ThreadModel]': 1
BoardPageModel: 1
CatalogModel: 1
PostModel: 1
VerificationsModel: 1
BoardModeratorModel: 1
Optional[BanModel]: 1
List[BanModel]: 1
List[ReportModel]: 1
TraitType: 1
HasTraits: 1
PollingRate: 1
Preferences: 1
LEDManager: 1
'UChromaHeadset.EffectBits': 1
EffectBits: 1
ByteArgs: 1
typing.Union[(object, None)]: 1
Generator[(Tuple[(str, str, str)], None, None)]: 1
Generator[(Dict[(str, str)], None, None)]: 1
Generator[(Rule, None, None)]: 1
yaml.ScalarNode: 1
'flyingcircus.core.Stack': 1
InternetGateway: 1
VPCGatewayAttachment: 1
'Function': 1
List[Tuple[int]]: 1
'StatusDictionary': 1
Verdict: 1
Tuple[(Iterable[Any], Dict[(str, Iterable[Any])])]: 1
StatusDictionary: 1
pykka.ActorRef: 1
Tuple[(int, np.ndarray)]: 1
_daemon_macro.MacroURL: 1
_daemon_macro.MacroScript: 1
RazerDevice: 1
GitcdConfig: 1
GitcdPersonalConfig: 1
[Github, Bitbucket]: 1
List[Remote]: 1
List[Branch]: 1
BaseCommand: 1
PostparsingData: 1
MongoEngine: 1
CommandsList: 1
Op: 1
AddressMode: 1
'CPU': 1
Literal[False]: 1
Set[StateChange]: 1
ROMType: 1
NestedCompleter: 1
Tuple[(List[float], int)]: 1
Iterator[List[Path]]: 1
Callable[([], Tuple[(Any, Any)])]: 1
Dict[(str, Tuple[(int, int)])]: 1
pygame.Rect: 1
Callable[([object], bool)]: 1
Tuple[(Tuple[(np.ndarray, np.ndarray)], Tuple[(np.ndarray, np.ndarray)])]: 1
'ExtraTree': 1
Generator[(Tuple[(bytes, bytes)], None, None)]: 1
dict(): 1
List[Union[(str, TAG)]]: 1
List[Counter]: 1
List[List[Union[(Item, np.ndarray)]]]: 1
Iterator[Item]: 1
Union[(set, List[Counter])]: 1
'KtrResult': 1
Constructor: 1
Exporter: 1
ReleaseType: 1
Union[(List, Dict, Cursor)]: 1
Union[(Callable, object)]: 1
RepoSchema(many=True): 1
ContributorSchema(many=True): 1
(Game or None): 1
Optional[futures.ThreadPoolExecutor]: 1
Union[(str, Tuple[(IO[bytes], str)])]: 1
'Container': 1
Optional[Egg]: 1
IPump: 1
Dict[(str, Union[(List[Any], List[str])])]: 1
'Undetermined': 1
ErrBot: 1
Tuple[(Union[(str, None)], Sequence[str])]: 1
List[RepoEntry]: 1
Generator[(RepoEntry, None, None)]: 1
[str, bytes]: 1
(rsa.RSAPrivateKeyWithSerialization, x509.CertificateSigningRequest): 1
CertificateAuthority: 1
Optional[inventory_models.InstalledApplication]: 1
commandment.inventory.models.AvailableOSUpdate: 1
PKCS12CertificatePayload: 1
'List[AvatarWrapper]': 1
'RPCStudentResult': 1
'RPCTeacherInCourseItem': 1
'RPCCourseInSemesterItem': 1
'RPCStudentInSemesterResult': 1
'RPCTeacherInSemesterResult': 1
'RPCRoomResult': 1
'RPCStudentInCourseItem': 1
'RPCCourseResult': 1
database.Database: 1
Tuple[(Tuple[(int, int)], Tuple[(int, int)])]: 1
List[RPCTeacherInCourseItem]: 1
Union[(Dict, str)]: 1
Union[(Dict, Tuple)]: 1

------ Assignment types ------

Total assignments: 401021
str: 1768
int: 654
bool: 313
float: 264
Optional[str]: 218
List[str]: 186
ClassVar[int]: 92
Token: 92
dict: 82
Path: 75
Optional[int]: 62
Any: 62
Dict[(str, Any)]: 52
Dict[(str, str)]: 52
datetime: 50
bytes: 49
list: 43
Optional[Token]: 42
CustomLogger: 39
Address: 36
Set[str]: 34
ServiceType: 30
Tuple[str]: 28
ClassVar[str]: 26
CanonicalIdentifier: 26
pendulum.Pendulum: 22
Dict: 21
SecretHash: 21
List[int]: 20
typing.Optional[str]: 19
ClassVar[bool]: 18
UUID: 18
SelectorNode: 18
'_sre.SRE_Pattern': 17
DeviceID: 17
Nonce: 17
Sequence[str]: 16
BoolProperty(default=False): 16
AsyncClient: 16
WithdrawAmount: 16
Session: 15
Optional[float]: 15
OrderType: 15
Number: 15
PaymentID: 15
Tuple[(str, ...)]: 14
ActionType: 14
AppendResponse: 14
t.Optional[str]: 14
Reference: 14
Decimal: 13
MessageID: 13
BlockExpiration: 13
PackageCategories: 13
BunkUser: 13
datetime.datetime: 12
Callable: 12
Worker: 12
List: 12
AsyncIOMotorCursor: 12
Element: 12
TokenNetworkAddress: 12
Logger: 11
tuple: 11
Optional[bool]: 11
typing.List[str]: 11
aiohttp.web.Response: 11
Secret: 11
UserFactory: 10
np.ndarray: 10
AsyncIOMotorClient: 10
[str]: 10
TokenAmount: 10
Union[(SelectorNode, Token)]: 10
Exchange: 10
Optional[dict]: 9
Dict[(str, List[str])]: 9
TriggearConfig: 9
AsyncIOMotorCollection: 9
(ItemTemplateSchema or None): 9
LockedTransferSignedState: 9
ClassVar[CmdId]: 9
Optional[NbtObjectNode]: 9
Set[int]: 8
discord.TextChannel: 8
Optional[bytes]: 8
FrozenSet[str]: 8
Dict[(str, int)]: 8
BoolProperty(): 8
Counter[str]: 8
type: 8
typing.Tuple: 8
models.Manager: 8
URL: 8
ChainID: 8
Model: 7
asyncio.Future: 7
IntProperty(): 7
Text: 7
FloatProperty(default=0.0): 7
List[Any]: 7
OperationMessage: 7
Payload: 7
GithubController: 7
pd.DataFrame: 7
EntryID: 7
ChannelID: 7
TokenNetworkRegistryAddress: 7
Locksroot: 7
Signature: 7
logging.Logger: 6
Dict[(int, str)]: 6
discord.Guild: 6
argparse.Namespace: 6
StringProperty(): 6
List[Tuple[(str, str)]]: 6
_Metadata: 6
StringProperty(default=''): 6
Optional[Dict[(str, Any)]]: 6
Repeat[str]: 6
HookDetails: 6
List[Union[(str, int)]]: 6
List[Dict[(str, Any)]]: 6
ClassVar: 6
ClassVar[Dict[(str, bool)]]: 6
Optional[CheckerCategory]: 6
ItemNode: 6
Response: 5
Pattern: 5
Tuple[(int, int)]: 5
Optional[datetime]: 5
Union[(None, set, int)]: 5
set: 5
argparse.ArgumentParser: 5
Union[(int, float)]: 5
Point: 5
releasetool.Version: 5
SetOfNodeTriples: 5
Direction: 5
BoolProperty(default=True): 5
ClassVar[bytes]: 5
User: 5
'ClientProxy': 5
t.List[str]: 5
aiohttp.ClientResponse: 5
aiohttp.ClientSession: 5
RegistrationCursor: 5
Optional[Term]: 5
XrayTransition: 5
AtomicSubshell: 5
List[Address]: 5
Timestamp: 5
List[RuleBlock]: 5
Name: 5
BlockHash: 5
List[RouteState]: 5
Project: 5
NodeService: 5
T.Sequence[str]: 4
T.Optional[str]: 4
Mapping[(MotifName, int)]: 4
ClientSession: 4
discord.Member: 4
discord.Message: 4
Dict[(str, float)]: 4
LandmarkAnnotationSetFactory: 4
BoolProperty(name='Correct Position', description='Shift objects position for a very small amount to avoid coplanar geometry errors during boolean operation (does not affect active object)'): 4
FloatProperty(name='Position Offset', description='Position offset is randomly generated for each object in range [-x, +x] input value', default=0.005, min=0.0, step=0.01, precision=3, unit='LENGTH'): 4
FloatProperty(name='Overlap Threshold', description='Threshold for checking overlapping geometry', default=1e-06, min=0.0, step=0.0001, precision=6): 4
Tuple: 4
SetOfNodePairs: 4
Vector: 4
Mapping[(str, str)]: 4
ConfigAttribute: 4
Headers: 4
BaseQuery: 4
CFGBlock: 4
Options: 4
bpy.props.StringProperty(subtype='DIR_PATH'): 4
Iterable[str]: 4
t.Optional[datetime]: 4
object: 4
configparser.ConfigParser: 4
MysqlPacket: 4
ActionId: 4
FrozenSet[Type[Version]]: 4
List[List[str]]: 4
typing.Optional[datetime.date]: 4
Type: 4
FloatVectorProperty(name='Center', subtype='XYZ'): 4
UserID: 4
Pendulum: 4
Test: 4
MappingTest: 4
BlockNumber: 4
TargetAddress: 4
LockedTransferUnsignedState: 4
Event: 4
Slot: 4
List[StmtNode]: 4
List[Token]: 4
Injectable: 4
List[UserXP]: 3
tbl_gsetting: 3
Plugin: 3
Dict[(str, Union[(str, int)])]: 3
T.List[str]: 3
T.Set[str]: 3
Config: 3
Tuple[(int, ...)]: 3
Union[(int, str)]: 3
Dict[(str, dict)]: 3
List[Path]: 3
typing.Optional[pathlib.Path]: 3
Optional[List[str]]: 3
Optional[Path]: 3
NumberLike: 3
PolygonAnnotationSetFactory: 3
Enum: 3
Optional[Dict]: 3
Category: 3
FloatProperty(): 3
BoolProperty(name='Automatically check for updates', description='Automatically check for updates with specified interval', default=True): 3
EnumProperty(name='Auto-check interval', description='Auto-check interval', items=(('1', 'Once a day', ''), ('7', 'Once a week', ''), ('30', 'Once a month', '')), default='7'): 3
BoolProperty(name='Update to pre-release', description='Update add-on to pre-release version if available'): 3
EnumProperty(name='Report Language', description='Product report language', items=(('AUTO', 'Auto (Auto)', 'Use user preferences language setting'), ('en_US', 'English (English)', ''), ('es', 'Spanish (Español)', ''), ('fr_FR', 'French (Français)', ''), ('ru_RU', 'Russian (Русский)', ''))): 3
BoolProperty(name='Save To File', description='Save product report to file in project folder', default=True): 3
BoolProperty(name='Hidden Gems', description='Enable or disable given warning', default=True): 3
BoolProperty(name='Overlapping Gems', description='Enable or disable given warning', default=True): 3
BoolProperty(options={'SKIP_SAVE', 'HIDDEN'}): 3
EnumProperty(name='Stone', items=dynamic_list.stones): 3
EnumProperty(name='Cut', items=dynamic_list.cuts): 3
Union[(str, None)]: 3
List[Tuple[(int, int)]]: 3
ChannelType: 3
Set[MsgType]: 3
List[ChangelogItem]: 3
Set: 3
typing.Optional[int]: 3
typing.Dict[(str, int)]: 3
typing.Set[str]: 3
typing.Type: 3
List[Release]: 3
gym.Env: 3
Optional[User]: 3
ClassVar[float]: 3
Optional[Dict[(str, str)]]: 3
date: 3
ClassVar[Optional[str]]: 3
List[Tuple[(str, Any, str)]]: 3
Dict[(str, Schema)]: 3
Recipient: 3
ApplicationContext: 3
Iterable[Instance]: 3
'user': 3
UserSummary: 3
Status: 3
FloatProperty(min=0.0001, default=1.0, max=5.0): 3
List[Callable]: 3
ClassVar[Signal]: 3
asyncio.Task: 3
SchemaMessage: 3
Language: 3
RegistrationQuery: 3
aiohttp.web_request.Request: 3
typing.Any: 3
Tuple[(Any, ...)]: 3
Dict[(str, Callable)]: 3
FrozenSet[Sort]: 3
Sequence[TraceExample]: 3
StringProperty(name='Search', description='Filter to search', default=''): 3
IntProperty(default=0): 3
Notation: 3
List[REMINDER_TUPLE_TYPE]: 3
BoolProperty(name='Apply Modifiers', default=True, description="Apply object's modifiers"): 3
discord.abc.GuildChannel: 3
ToolboxController: 3
Interval: 3
List[Filter]: 3
AnyStr: 3
Database: 3
List[Rule]: 3
FloatProperty(name='Radius', min=0.0, default=0.5): 3
StringProperty(default='*.mu', options={'HIDDEN'}): 3
Uri: 3
Optional[RealmRole]: 3
VerifyKey: 3
SecretKey: 3
ClassVar[Dict[(str, str)]]: 3
List[IRBaseMapping]: 3
AmbassadorTest: 3
IDNamePair: 3
BalanceProofSignedState: 3
PaymentAmount: 3
InitiatorAddress: 3
BalanceHash: 3
HopState: 3
TokenAddress: 3
BalanceProofUnsignedState: 3
AsyncResult: 3
_io.TextIOWrapper: 3
Union[(str, Callable)]: 3
Optional[Vec3Node]: 3
Union[(Token, JsonObjectNode)]: 3
DuplicateComponent: 3
DumbComponent: 3
matplotlib.axes.Axes: 3
SocialToken: 3
typing.Union[(Source, DiskSource)]: 3
Offset: 3
Optional[Mapping[(str, Sequence[str])]]: 3
Optional[Mapping[(str, str)]]: 3
IHeater: 3
VersionType: 3
List[RPCCourseInSemesterItem]: 3
Jokusoramame: 2
UserXP: 2
RolemeRole: 2
tbl_rolestate: 2
Union[(str, Application)]: 2
Metadata: 2
FileRef: 2
BagMessage: 2
web.Application: 2
List[Tag]: 2
Dict[(int, int)]: 2
List[PluginBase]: 2
T.Any: 2
timedelta: 2
Mapping[(MotifName, set)]: 2
Mapping[(MotifName, Mapping[(Mutation, int)])]: 2
T: 2
List[PathMatch]: 2
Optional[Tuple[Note]]: 2
Tuple[float]: 2
constr(min_length=2, max_length=2): 2
IDStr: 2
commands.Command: 2
List[discord.TextChannel]: 2
pathlib.Path: 2
List[bytes]: 2
_BinaryIO: 2
Optional[Tuple[(bytes, bytes)]]: 2
Variable: 2
'Tuple[Foo, List[Enum], Any]': 2
List[Element]: 2
Version: 2
Environment: 2
Union[(ecc.ECPubkey, ecc.ECPrivkey)]: 2
Dict[(Source, int)]: 2
Type[Any]: 2
BoolProperty(name='Total (ct.)', description='Include or exclude given column'): 2
IntProperty(name='Width', description='Number of horizontal pixels in the rendered image', default=1200, min=4, subtype='PIXEL'): 2
IntProperty(name='Height', description='Number of vertical pixels in the rendered image', default=750, min=4, subtype='PIXEL'): 2
FloatProperty(name='Line Width', default=1.2, min=1.0, soft_max=5.0, subtype='PIXEL'): 2
EnumProperty(name='Icons', items=(('LIGHT', 'Light', ''), ('DARK', 'Dark', ''))): 2
EnumProperty(items=dynamic_list.assets): 2
FloatProperty(name='Spacing', default=0.2, min=0.0, step=1, precision=2, unit='LENGTH'): 2
IntProperty(name='Detalization', default=32, min=12, soft_max=64, step=1): 2
EnumProperty(name='Material', items=dynamic_list.weighting_materials, options={'SKIP_SAVE'}): 2
StringProperty(name='Set Name', options={'SKIP_SAVE'}): 2
FloatProperty(name='Length', step=0.1, unit='LENGTH'): 2
FloatProperty(name='Width', step=0.1, unit='LENGTH'): 2
FloatProperty(name='Profile', default=0.5, min=0.15, max=1.0, subtype='FACTOR'): 2
StringProperty(name='Category Name', description='Category name', options={'SKIP_SAVE'}): 2
StringProperty(name='Asset Name', description='Asset name', options={'SKIP_SAVE'}): 2
BoolProperty(name='Mesh Cleanup', description='Perform mesh cleanup in between boolean operations, enabling this option will greatly affect performance of a boolean operation'): 2
BoolProperty(name='Triangulate', description='Triangulate geometry before boolean operation, in some cases may improve result of a boolean operation'): 2
FloatProperty(name='Merge Distance', description='Minimum distance between elements to merge', default=0.0002, min=1e-05, step=0.01, precision=5, unit='LENGTH'): 2
EnumProperty(name='Secondary Object', description='How to display object in viewport', items=(('BOUNDS', 'Bounds', ''), ('WIRE', 'Wire', ''), ('SOLID', 'Solid', ''), ('TEXTURED', 'Textured', '')), default='WIRE'): 2
EnumProperty(name='Combined Object', description='How to display object in viewport', items=(('BOUNDS', 'Bounds', ''), ('WIRE', 'Wire', ''), ('SOLID', 'Solid', ''), ('TEXTURED', 'Textured', '')), default='BOUNDS'): 2
IntProperty(name='Threshold', description='Number of objects to animate per frame step', default=1, min=1): 2
IntProperty(name='Seed', description='Seed value for randomizer to get different offset patterns', min=0): 2
FloatProperty(name='Radius', description='Effective range at which effectors can influence animated objects', soft_min=0.0, default=5.0): 2
Dict[(str, bool)]: 2
List[float]: 2
Counter[BaseEntity]: 2
ModuleID: 2
Optional[InstanceID]: 2
discord.Embed: 2
Dict[(str, Dict[(str, str)])]: 2
namedtuple: 2
List[Callable[([circuits.Circuit], None)]]: 2
Union[(str, List[str], Tuple[(str, ...)])]: 2
List[Union[(str, Callable)]]: 2
typing.Dict: 2
typing.MutableMapping[(str, typing.Any)]: 2
MutableMapping[(str, Any)]: 2
MessageData: 2
List[View]: 2
Dict[(str, List[View])]: 2
FloatProperty(default=1.0, soft_min=0): 2
List[Tuple[(int, MessageT)]]: 2
Mapping[(str, Any)]: 2
Tuple[(float, float)]: 2
Set[InstrumentedAttribute]: 2
List[Entity]: 2
'taskmanager.TaskManager': 2
CommandDict: 2
Optional[List[int]]: 2
Optional[Dict[(str, int)]]: 2
typing.Optional[cert.CertificateManager.CrossbarUsers]: 2
Type[GLambdaTask]: 2
Type[BlenderEnvironment]: 2
Optional[Any]: 2
List[TxItem]: 2
Exception: 2
Dict[(str, Set[str])]: 2
List[CFGEdge]: 2
Optional[Deadline]: 2
Optional['XStream']: 2
typing.Dict[(str, typing.Any)]: 2
List[MenuItem]: 2
LogLevel: 2
Params: 2
DataIterator: 2
Iterable: 2
UpdatedString: 2
'repo': 2
Bumps: 2
Geometry: 2
FloatProperty(min=(- 8.0), default=2.0, max=8.0): 2
'Optional[str]': 2
Request: 2
List[discord.Role]: 2
Optional[timedelta]: 2
public(address): 2
StrList: 2
BaseAuthService: 2
HttpRequest: 2
List[Artist]: 2
List[Album]: 2
List[Track]: 2
Color: 2
Value: 2
Dict[(int, 'CardInfo')]: 2
Type[T]: 2
ExternalDocsMessage: 2
Optional[Server]: 2
DeregistrationQuery: 2
JenkinsInstanceConfig: 2
typing.List[SignalValue]: 2
typing.List[Message]: 2
Strategies: 2
asyncio.Queue: 2
asyncio.Future[Any]: 2
Set[asyncio.Future[Any]]: 2
Sort: 2
Optional[Tuple[(RuleParamId, ...)]]: 2
SituationId: 2
Optional[Tuple[(Term, ...)]]: 2
RWATokenType: 2
TextAnomalies: 2
BoolProperty(name='Update Previews', description='Update previews from server', default=False): 2
StringProperty(name='Tags', description='Tags (comma separated)', default=''): 2
Cache: 2
PyManager: 2
rd.MeshFormat: 2
Prestador: 2
VerseRange: 2
List[Passage]: 2
Optional[BibleVersion]: 2
SearchResults: 2
MockUser: 2
NetworkController: 2
QInputNavigator: 2
ActivationsController: 2
NetworkView: 2
ToolboxView: 2
ThriftServer: 2
Opt[float]: 2
Opt[str]: 2
List[Subtitle]: 2
discord.Role: 2
ClassVar[Optional[bool]]: 2
typing.List[search_client.SearchClient]: 2
typing.List[typing.Dict[(str, typing.Dict[(str, str)])]]: 2
structs.Units: 2
Station: 2
[Cloud]: 2
List[Package]: 2
BinaryIO: 2
pickle.Unpickler: 2
Optional[Package]: 2
Package: 2
List[List[RuleStatistics]]: 2
RepositoryManager: 2
Dict[(str, Dict[(str, Any)])]: 2
Optional[datetime.datetime]: 2
FloatProperty(name='Slip'): 2
FloatProperty(name='Value'): 2
BoolVectorProperty(size=32, name='Culling Mask', subtype='LAYER'): 2
Optional[DeviceID]: 2
Dict[(EntryName, EntryID)]: 2
PluginManager: 2
Optional[semantic_version.Version]: 2
Optional[IRCluster]: 2
Option[str]: 2
Dict[(int, Dict[(str, str)])]: 2
Optional[BaseAccessPermissions]: 2
Dict[(str, List[int])]: 2
Dict[(str, Path)]: 2
FeeScheduleState: 2
TokenNetworkState: 2
TransactionHash: 2
AdditionalHash: 2
TransferDescriptionWithSecretState: 2
FeeAmount: 2
List[ChannelID]: 2
Optional[Secret]: 2
Optional[Signature]: 2
Optional[Torrent]: 2
Optional[timezone.datetime]: 2
typing.List[typing.Type[base.BaseTransform]]: 2
PathSegment: 2
typing.Dict[(int, Node)]: 2
Optional[git.Repo]: 2
Dict[(str, Union[(str, List[str])])]: 2
List[FenaCmdNode]: 2
List[MainCmdNode]: 2
List[ExecuteSubIfBlockArg]: 2
Union[(SelectorNode, Vec3Node)]: 2
NbtObjectNode: 2
NamespaceIdNode: 2
Optional[SelectorNode]: 2
Union[(ItemNode, Token)]: 2
Vec3Node: 2
Union[(Token, SelectorNode)]: 2
SelectorVarNode: 2
Optional[SelectorArgsNode]: 2
List[SelectorDefaultArgNode]: 2
SelectorScoreArgsNode: 2
List[SelectorScoreArgNode]: 2
Union[(IntRangeNode, Token)]: 2
Union[SelectorDefaultArgValueNode]: 2
Union[(Token, NumberRangeNode, IntRangeNode)]: 2
Union[(Token, NbtObjectNode, NbtArrayNode, NbtIntegerNode, NbtFloatNode)]: 2
Union[(Tuple[(str, str)], Tuple[()])]: 2
Optional[GtkSource.StyleScheme]: 2
Gtk.TextView: 2
Component1: 2
Render: 2
bpy.props.StringProperty(subtype='FILE_PATH'): 2
LinkedSourceAuthentication: 2
Union[(pd.DataFrame, pd.core.frame.DataFrame)]: 2
Optional[bz.interactive._Data]: 2
ShiftOperator: 2
ShiftFunction: 2
PermissionOverwrite: 2
HeaterInterface: 2
IPump: 2
List[RPCTeacherInCourseItem]: 2
RedisInterface: 1
ResultGenerator: 1
List[RolemeRole]: 1
List[Role]: 1
dt_guild.Guild: 1
List[CommandRateLimit]: 1
Optional[FilesystemRef]: 1
Optional[BlockDevMount]: 1
DriveDriver: 1
Ref: 1
Optional[Ref]: 1
SerialPortDriver: 1
FilesystemRef: 1
VmFilesystemDriver: 1
VmState: 1
Optional[BootKernel]: 1
List[Drive]: 1
List[VmFilesystem]: 1
List[SerialPort]: 1
FormatDatabase: 1
TypeDatabase: 1
FrozenSet[T]: 1
Mutator[T]: 1
Tuple[(BagMessage, ...)]: 1
Message: 1
Optional[ScheduledTaskManager]: 1
List[Card]: 1
List['CommandBase']: 1
MacroType: 1
ActorsTagger: 1
PluginBase: 1
List[urwid.Widget]: 1
T.Dict[(str, T.Pattern)]: 1
T.List[EdictGlossary]: 1
T.List[EdictKanji]: 1
T.Dict[(str, T.Set[str])]: 1
T.List[Exception]: 1
T.List[Workspace]: 1
Dict[(Any, Tuple[(Any, Any, Any, Any)])]: 1
Dict[(str, Tuple[(Any, Any, Any)])]: 1
Dict[(Any, Tuple[(Any, Callable)])]: 1
FriendTags: 1
Utils: 1
CurrentUser: 1
Friends: 1
Groups: 1
Applications: 1
Overlay: 1
Screenshots: 1
CurrentApplicationDlcs: 1
CurrentApplicationAchievements: 1
InstalledApplications: 1
CurrentApplication: 1
Mapping[(Analysis, MutationSource)]: 1
Protein: 1
Union[(None, set, int, str)]: 1
Dict[(Tuple[(Type[Any], Union[(Any, Tuple[(Any, ...)])])], Type[BaseModel])]: 1
Dict[(Type[Any], Callable[([Any], Any)])]: 1
List[Tuple[(AnyType, List[Any])]]: 1
Type[BaseModel]: 1
Optional[DataT]: 1
Optional[Error]: 1
Birth: 1
StrictStr: 1
List[Pet]: 1
DateModel: 1
NoneStr: 1
Mode: 1
Extensions: 1
Dict[(PathMatch, Dict[(str, Any)])]: 1
WebpackConfig: 1
Dict[(bytes, User)]: 1
List['DoNotPropagate']: 1
List['SynthDefBuilder']: 1
typing.Union[(OscMessage, OscBundle)]: 1
typing.Optional[typing.Union[(Requestable, Response)]]: 1
typing.Tuple[(typing.Union[(str, int, float)], ...)]: 1
typing.Callable: 1
typing.Optional[typing.Tuple[(typing.Union[(str, int, float)], ...)]]: 1
UGenInputMap: 1
Dict[(int, Iterator[float])]: 1
Dict[(Callable, Set[str])]: 1
Dict[(str, Set[Callable])]: 1
List[PDFAttachmentModel]: 1
List[AttachmentModel]: 1
NameEmail: 1
EmailSendMethod: 1
List[EmailRecipientModel]: 1
constr(min_length=20, max_length=40): 1
constr(min_length=1, max_length=11): 1
SmsSendMethod: 1
List[SmsRecipientModel]: 1
MessageStatus: 1
MandrillMessageStatus: 1
List[MandrillSingleWebhook]: 1
MessageBirdMessageStatus: 1
ClassVar[Tuple[(str, ...)]]: 1
ClassVar[pathlib.Path]: 1
ClassVar[List[pathlib.Path]]: 1
ClassVar[Pattern[str]]: 1
Optional[discord.Message]: 1
Optional[asyncio.subprocess.Process]: 1
datetime.date: 1
Dict[(str, Callable[(['LogScrollingMenu', discord.RawReactionActionEvent], Awaitable[None])])]: 1
overlay_mod.OverlayStore: 1
SystemdUserServiceManager: 1
hgrepo.HgRepository: 1
typing.Optional[SystemdUserServiceManager]: 1
_DefaultObject: 1
configparser.Interpolation: 1
DefaultDict[(ConfigSectionName, Dict[(ConfigOptionName, Union[(ConfigValue, _UnsupportedValue)])])]: 1
ConfigSectionName: 1
ConfigOptionName: 1
Optional[Type[ConfigValue]]: 1
overlay_mod.Overlay: 1
ProcessID: 1
Optional['TerminalSettings']: 1
'LogFollower': 1
List[process_finder.ProcessID]: 1
Dict[(bytes, Tuple[(str, int, int)])]: 1
Dict[(bytes, bytes)]: 1
List[ProblemBase]: 1
Optional[Callable[([bytes, str], bool)]]: 1
CheckoutConfig: 1
SubprocessProtocol: 1
signal: 1
IOHistory: 1
GrandChallengeTiffFileTags: 1
Dict[(str, Dict[(str, float)])]: 1
ChallengeFactory: 1
MeasurementAnnotationFactory: 1
BooleanClassificationAnnotationFactory: 1
IntegerClassificationAnnotationFactory: 1
CoordinateListAnnotationFactory: 1
ETDRSGridAnnotationFactory: 1
Tuple[(bool, str)]: 1
'Foo.Bar': 1
List['FooBar']: 1
Foo: 1
List[List[Element]]: 1
naming.Naming: 1
descriptor_pb2.SourceCodeInfo.Location: 1
Optional[releasetool.github.GitHub]: 1
Optional[Sequence[str]]: 1
List[ArtifactVersions]: 1
any: 1
Dict[(Source, List[Module])]: 1
DefaultDict[(Module, List[Source])]: 1
Dict[(Filename, Hash)]: 1
Dict[(Source, Set[Source])]: 1
Args: 1
List[Tuple[(Source, float, int)]]: 1
Set[Source]: 1
List[Type[Any]]: 1
List[Dict]: 1
ColumnDescription: 1
List[SetInfoType]: 1
Dict[(str, Card)]: 1
Optional[ItemEquipment]: 1
Optional[ItemWeapon]: 1
ParsemisMiner: 1
BoolProperty(description='Enable material for weighting and product report', default=True): 1
StringProperty(default='Untitled'): 1
StringProperty(default='Unknown'): 1
FloatProperty(description='Density g/cm³', default=0.01, min=0.01, step=1, precision=2): 1
StringProperty(name='Name', default='Untitled'): 1
PointerProperty(name='Object', description='Measured object', type=Object): 1
EnumProperty(name='Type', description='Measurement type', items=(('DIMENSIONS', '', '', 0), ('WEIGHT', '', '', 1), ('RING_SIZE', '', '', 2))): 1
EnumProperty(name='Format', items=(('DIA', 'Diameter', '', 0), ('CIR', 'Circumference', '', 1), ('US', 'USA', '', 2), ('UK', 'Britain', '', 3), ('CH', 'Swiss', '', 4), ('JP', 'Japan', '', 5))): 1
EnumProperty(name='Axis', items=(('0', 'X', ''), ('1', 'Y', ''), ('2', 'Z', ''))): 1
BoolProperty(name='X'): 1
BoolProperty(name='Y'): 1
BoolProperty(name='Z'): 1
CollectionProperty(type=MaterialCollection): 1
CollectionProperty(type=MeasurementCollection): 1
BoolProperty(name='Use Custom Library Folder', description='Set custom asset library folder, if disabled the default library folder will be used', update=update_asset_refresh): 1
StringProperty(name='Library Folder Path', description='Custom library folder path', subtype='DIR_PATH', update=update_asset_refresh): 1
BoolProperty(name='Display Asset Name', description='Display asset name in Tool Shelf'): 1
BoolProperty(name='Hide Default Sets', description='Hide default JewelCraft sets from weighting sets menu', update=dynamic_list.weighting_set_refresh): 1
BoolProperty(name='Use Custom Library Folder', description='Set custom asset library folder, if disabled the default library folder will be used', update=dynamic_list.weighting_set_refresh): 1
StringProperty(name='Library Folder Path', description='Custom library folder path', subtype='DIR_PATH', update=dynamic_list.weighting_set_refresh): 1
StringProperty(default='JCASSET_PRECIOUS'): 1
FloatVectorProperty(name='Color', default=(0.9, 0.9, 0.9, 1.0), size=4, min=0.0, soft_max=1.0, subtype='COLOR'): 1
FloatVectorProperty(name='Prongs', default=(0.8, 0.8, 0.8, 1.0), size=4, min=0.0, soft_max=1.0, subtype='COLOR'): 1
FloatVectorProperty(name='Cutter', default=(0.8, 0.8, 0.8, 1.0), size=4, min=0.0, soft_max=1.0, subtype='COLOR'): 1
IntProperty(name='Gem Table', default=19, min=1): 1
IntProperty(name='Options', default=17, min=1): 1
IntProperty(name='Gem Size', default=18, min=1): 1
IntProperty(name='Distance', default=16, min=1): 1
EnumProperty(items=(('ASSET_MANAGER', 'Asset Manager', ''), ('WEIGHTING', 'Weighting', ''), ('PRODUCT_REPORT', 'Product Report', ''), ('THEMES', 'Themes', ''), ('UPDATES', 'Updates', ''))): 1
BoolProperty(description='Enable widgets drawing', update=widget.handler_toggle): 1
EnumProperty(name='Category', description='Asset category', items=dynamic_list.asset_folders, update=update_asset_list): 1
EnumProperty(name='Weighting Set', description='Set of materials for weighting', items=dynamic_list.weighting_set): 1
PointerProperty(type=MaterialsList): 1
BoolProperty(name='Show Composition', description='Display material composition in the list'): 1
BoolProperty(name='Show Density', description='Display material density in the list'): 1
PointerProperty(type=MeasurementsList): 1
BoolProperty(name='Show All', description='Display spacing widget for all visible gems'): 1
BoolProperty(name='In Front', description='Draw widgets in front of objects'): 1
BoolProperty(name='Use Overrides', description='Use object defined widget overrides', default=True): 1
EnumProperty(name='Format', items=(('US', 'USA', ''), ('UK', 'Britain', ''), ('CH', 'Swiss', ''), ('JP', 'Japan', '')), update=upd_size): 1
EnumProperty(name='Size', items=dynamic_list.abc, update=upd_size): 1
IntProperty(name='Size', default=8, min=1, max=27, update=upd_size): 1
FloatProperty(name='Size', default=4.5, min=0.0, step=50, precision=1, update=upd_size): 1
FloatProperty(name='Diameter', default=15.28, min=0.001, step=10, unit='LENGTH', update=upd_diameter): 1
FloatProperty(name='Circumference', default=48.0, min=0.001, step=100, precision=1, unit='LENGTH', update=upd_circumference): 1
BoolProperty(name='Start Up', description='Make curve start at the top', default=True, options={'SKIP_SAVE'}): 1
BoolProperty(name='Ring Size', update=upd_size): 1
BoolProperty(name='1/2', update=upd_size): 1
BoolProperty(options={'HIDDEN', 'SKIP_SAVE'}): 1
BoolProperty(name='Under', options={'SKIP_SAVE'}): 1
BoolProperty(name='Individual', description='Move each object individually'): 1
IntProperty(name='Prong Number', default=4, min=1, soft_max=10): 1
FloatProperty(name='Diameter', default=0.4, min=0.0, step=1, unit='LENGTH'): 1
FloatProperty(name='Top', default=0.4, step=1, unit='LENGTH'): 1
FloatProperty(name='Bottom', default=0.5, step=1, unit='LENGTH'): 1
FloatProperty(name='Position', default=radians(45.0), step=100, precision=0, unit='ROTATION'): 1
FloatProperty(name='Intersection', default=30.0, soft_min=0.0, soft_max=100.0, precision=0, subtype='PERCENTAGE'): 1
FloatProperty(name='Alignment', step=100, precision=0, unit='ROTATION'): 1
BoolProperty(name='Symmetry'): 1
FloatProperty(name='Symmetry Pivot', step=100, precision=0, unit='ROTATION'): 1
FloatProperty(name='Bump Scale', default=0.5, soft_min=0.0, soft_max=1.0, subtype='FACTOR'): 1
FloatProperty(name='Taper', default=0.0, min=0.0, soft_max=1.0, subtype='FACTOR'): 1
StringProperty(name='Name', options={'SKIP_SAVE'}): 1
EnumProperty(name='Type', description='Measurement type', items=(('DIMENSIONS', 'Dimensions', '', 'SHADING_BBOX', 0), ('WEIGHT', 'Weight', '', 'FILE_3D', 1), ('RING_SIZE', 'Ring Size', '', 'MESH_CIRCLE', 2))): 1
EnumProperty(name='Format', items=(('DIA', 'Diameter', ''), ('CIR', 'Circumference', ''), ('US', 'USA', ''), ('UK', 'Britain', ''), ('CH', 'Swiss', ''), ('JP', 'Japan', '')), options={'SKIP_SAVE'}): 1
EnumProperty(name='Axis', items=(('0', 'X', ''), ('1', 'Y', ''), ('2', 'Z', '')), options={'SKIP_SAVE'}): 1
BoolProperty(name='X', default=True, options={'SKIP_SAVE'}): 1
BoolProperty(name='Y', default=True, options={'SKIP_SAVE'}): 1
BoolProperty(name='Z', default=True, options={'SKIP_SAVE'}): 1
StringProperty(name='Name', description='Material name', options={'SKIP_SAVE'}): 1
StringProperty(name='Composition', description='Material composition', options={'SKIP_SAVE'}): 1
FloatProperty(name='Density', description='Density g/cm³', default=0.01, min=0.01, step=1, precision=2, options={'SKIP_SAVE'}): 1
BoolProperty(name='Handle', default=True, update=update_coords_handle): 1
FloatProperty(name='Top', default=0.5, step=0.1, unit='LENGTH'): 1
FloatProperty(name='Bottom', default=0.5, step=0.1, unit='LENGTH'): 1
FloatProperty(name='Length Offset', step=0.1, unit='LENGTH'): 1
FloatProperty(name='Width Offset', step=0.1, unit='LENGTH'): 1
FloatProperty(name='Top', default=0.05, step=0.1, unit='LENGTH'): 1
FloatProperty(name='Bottom', step=0.1, unit='LENGTH'): 1
FloatProperty(name='Table', options={'HIDDEN'}): 1
BoolProperty(name='Hole', default=True, update=update_coords_hole): 1
FloatProperty(name='Top', default=0.25, step=0.1, unit='LENGTH'): 1
FloatProperty(name='Bottom', default=1.0, step=0.1, unit='LENGTH'): 1
FloatProperty(name='Position Offset', step=0.1, unit='LENGTH'): 1
FloatProperty(name='Culet', options={'HIDDEN'}): 1
BoolProperty(name='Curve Seat'): 1
IntProperty(name='Segments', default=15, min=2, soft_max=30, step=1): 1
BoolProperty(name='Curve Profile'): 1
IntProperty(name='Segments', default=10, min=1, soft_max=30, step=1): 1
FloatProperty(name='Factor', default=0.1, min=0.0, step=1): 1
FloatProperty(name='Factor 1', default=1.0, min=0.0, soft_max=2.0, subtype='FACTOR'): 1
FloatProperty(name='Factor 2', default=1.0, min=0.0, soft_max=2.0, subtype='FACTOR'): 1
BoolProperty(name='Bevel Corners'): 1
FloatProperty(name='Width', default=0.1, min=0.0, step=0.1, unit='LENGTH'): 1
FloatProperty(name='Width', default=18.0, min=0.0, max=50.0, step=1, subtype='PERCENTAGE'): 1
IntProperty(name='Segments', default=1, min=1, soft_max=30, step=1): 1
FloatVectorProperty(name='Widget Color', default=(1.0, 1.0, 1.0, 1.0), size=4, min=0.0, soft_max=1.0, subtype='COLOR'): 1
BoolProperty(name='Size', options={'SKIP_SAVE'}): 1
BoolProperty(name='Stone', options={'SKIP_SAVE'}): 1
BoolProperty(name='Cut', options={'SKIP_SAVE'}): 1
FloatProperty(name='Size', default=1.0, min=0.0, step=10, precision=2, unit='LENGTH'): 1
BoolProperty(name='Extend', description='Extend selection'): 1
BoolProperty(name='Select Children'): 1
FloatProperty(name='Threshold', default=0.1, soft_min=0.0, step=1, precision=2, unit='LENGTH'): 1
FloatProperty(name='Size', default=1.0, min=0.0001, step=5, precision=2, unit='LENGTH'): 1
EnumProperty(name='Cut', items=dynamic_list.cuts, options={'SKIP_SAVE'}): 1
EnumProperty(name='Stone', items=dynamic_list.stones, options={'SKIP_SAVE'}): 1
BoolProperty(name='Parent to selected', description='Parent imported asset to selected objects (Shortcut: hold Alt when using the tool)'): 1
EnumProperty(items=(('DESTRUCTIVE', 'Destructive', ''), ('NONDESTRUCTIVE', 'Non-destructive', ''), ('UI', 'Themes', ''), ('UPDATES', 'Updates', ''))): 1
BoolProperty(description='Disable boolean modifiers on all objects', default=True, update=update_mod_disable): 1
BoolProperty(name='Keep Objects', description='Do not remove selected objects after boolean operation (Shortcut: hold Alt when using the tool)', options={'SKIP_SAVE'}): 1
BoolProperty(description='Affect referenced shape key', default=True): 1
EnumProperty(name='Data', description='Animation data type', items=(('ALL', 'All', ''), ('OBJECT', 'Object', ''), ('OBJECT_DATA', 'Object Data', ''), ('SHAPE_KEYS', 'Shape Keys', ''), ('MATERIAL', 'Material', ''))): 1
EnumProperty(name='Sort By', description='Sort objects method', items=(('CURSOR', 'Cursor', ''), ('NAME', 'Name', ''), ('MULTI', 'Multi-Offset', ''), ('RANDOM', 'Random', '')), default='CURSOR'): 1
FloatProperty(name='Offset', description='Frame step for animation offset', default=1, min=0, step=10, precision=3): 1
BoolProperty(name='Reverse', description='Reverse sort order'): 1
BoolProperty(name='Proxymity', description='Enable offset by proximity from effector'): 1
PointerProperty(name='Animated', description='Collection for animated objects', type=Collection): 1
PointerProperty(name='Effectors', description='Collection for effector objects (to affect objects from animated collection)', type=Collection): 1
BoolProperty(name='Location', update=proxy_effector.update_proxy_use_loc): 1
BoolProperty(name='Rotation', update=proxy_effector.update_proxy_use_rot): 1
BoolProperty(name='Scale', update=proxy_effector.update_proxy_use_sca): 1
BoolProperty(name='Absolute Shape Keys', update=proxy_effector.update_proxy_use_sk): 1
BoolProperty(name='Trail', description='Leave permanent trail after effector left the effective range'): 1
FloatVectorProperty(description='Start location', subtype='TRANSLATION', unit='LENGTH'): 1
FloatVectorProperty(description='Final location', subtype='TRANSLATION', unit='LENGTH'): 1
FloatVectorProperty(description='Start rotation', subtype='EULER', unit='ROTATION'): 1
FloatVectorProperty(description='Final rotation', subtype='EULER', unit='ROTATION'): 1
FloatVectorProperty(description='Start scale', subtype='TRANSLATION', default=(1.0, 1.0, 1.0)): 1
FloatVectorProperty(description='Final scale', subtype='TRANSLATION', default=(1.0, 1.0, 1.0)): 1
FloatProperty(name='Evaluation Time', description='Start evaluation time', min=0.0): 1
FloatProperty(name='Evaluation Time', description='Final evaluation time', min=0.0): 1
FloatProperty(name='Falloff', description='Effector radius falloff', min=0.0, max=1.0, subtype='FACTOR'): 1
FloatProperty(name='Fade', description='Fade trail over time', min=0.0, max=1.0, precision=3, subtype='FACTOR'): 1
PointerProperty(type=Collection, name='Animated', description='Collection for animated objects'): 1
PointerProperty(type=Collection, name='Effectors', description='Collection for effector objects (to affect objects from animated collection)'): 1
EnumProperty(items=(('UPDATES', 'Updates', ''),)): 1
CollectionProperty(type=CommotionShapeKeyCollection): 1
BoolProperty(description='Enable proxymity effector\nWARNING: works only on animation playback', update=proxy_effector.handler_toggle): 1
EnumProperty(name='Animation Data', description='Animation data type', items=(('FCURVES', 'F-Curves', '', 'IPO_BEZIER', 0), ('STRIPS', 'Strips', '', 'NLA', 1))): 1
EnumProperty(name='Interpolation', description='Interpolation type for absolute shape keys', items=(('KEY_LINEAR', 'Linear', ''), ('KEY_CARDINAL', 'Cardinal', ''), ('KEY_CATMULL_ROM', 'Catmull-Rom', ''), ('KEY_BSPLINE', 'BSpline', ''))): 1
FloatProperty(name='Frame Offset', description='Frame step for animation offset', default=1, min=0, step=10, precision=3): 1
BoolProperty(name='Reverse', description='Reverse animation offset'): 1
AttackContext: 1
Dict[(str, BaseCommand)]: 1
List[Union[(Expression, Callable)]]: 1
Iterable[Tuple[(str, bool)]]: 1
Union[(str, Callable[([str, str], str)])]: 1
Callable[([int, str], bool)]: 1
Encoding: 1
Injection: 1
BoundedSemaphore: 1
Union[(str, CompoundTransformation)]: 1
OrderedDict: 1
Union[(float, list, None)]: 1
Dict[(str, Callable[([Model, Namespace], None)])]: 1
BoolProperty(name='Apply modifiers', default=True): 1
BoolProperty(name='Save vertex normals', default=True): 1
BoolProperty(name='Save texture coords (if available)', default=True): 1
BoolProperty(name='Save vertex colors (if available)', default=True): 1
Mapping[(str, Set[str])]: 1
List[WarningTuple]: 1
Optional['Direction']: 1
Final[Dict[(str, Any)]]: 1
threading.Lock: 1
EFBChannel: 1
Dict[(ModuleID, EFBChannel)]: 1
List[EFBMiddleware]: 1
Optional[threading.Thread]: 1
Dict[(ModuleID, threading.Thread)]: 1
NullTranslations: 1
Optional[List[ReactionName]]: 1
Union[(Item, Text)]: 1
List[InternationalString]: 1
Header: 1
Footer: 1
DictLike[(str, CategoryScheme)]: 1
DictLike[(str, Codelist)]: 1
DictLike[(str, ConceptScheme)]: 1
DictLike[(str, ContentConstraint)]: 1
DictLike[(str, DataflowDefinition)]: 1
DictLike[(str, DataStructureDefinition)]: 1
DictLike[(str, AgencyScheme)]: 1
DictLike[(str, ProvisionAgreement)]: 1
List[DataSet]: 1
DataflowDefinition: 1
Union[(_AllDimensions, List[Dimension])]: 1
DictLike[(str, AttributeValue)]: 1
DataStructureDefinition: 1
DataContentType: 1
Dict[(Union[(str, Resource)], bool)]: 1
Tuple[(Dimension, ...)]: 1
Tuple[(int, int, int)]: 1
Tuple[Callable[([str], str)]]: 1
List[ORG_T]: 1
List[CircuitSampleJob]: 1
Tuple[(Optional[int], ...)]: 1
Dict[(ops.Gate, int)]: 1
Tuple[List[Any]]: 1
mbq.env.Environment: 1
List['TagOption']: 1
Dict[(str, List[Union[(str, Tuple[(str, FileType)], ClassFunc)]])]: 1
Dict[(Tuple[(str, type)], Dict[(str, utils.InstanceConfigDict)])]: 1
utils.DeploymentsJsonV2: 1
TaskManagerConfig: 1
FlinkDeploymentConfigDict: 1
CassandraClusterDeploymentConfigDict: 1
Dict[(str, Type['DrainMethod'])]: 1
Optional[marathon_tools.MarathonClients]: 1
Optional[ChronosClient]: 1
SpoolInfo: 1
Dict[(str, Dict[(str, Callable)])]: 1
Dict[(str, ConstraintOp)]: 1
TaskID: 1
SlaveID: 1
List[Resource]: 1
ContainerInfo: 1
CommandInfo: 1
NativeServiceConfigDict: 1
Dict[(str, Type['BaseMetrics'])]: 1
LoggingDict: 1
PathBasedRoutingDict: 1
SourceRequiredDict: 1
Mapping[(str, Mapping[(str, Mapping[(str, str)])])]: 1
PluginsDict: 1
defaultdict: 1
Calendar: 1
ImmutableDict: 1
'-nb_access'[:10]: 1
Union[(Sequence[Extension], Sequence[str])]: 1
List[Extension]: 1
DbContext: 1
DbConnection: 1
typing.Tuple[(typing.Optional[int], typing.Optional[int])]: 1
typing.List[typing.Type[base._Component]]: 1
typing.Optional[typing.Type[Message]]: 1
typing.Set[connections.ServerConnection]: 1
Sequence[Type[_Action]]: 1
Sequence[Type[_Rex]]: 1
typing.Dict[(typing.Type[flow.Flow], typing.Callable[([typing.Any], TEventGenerator)])]: 1
typing.Mapping[(str, typing.Sequence[str])]: 1
urwid.Edit: 1
typing.Sequence[Column]: 1
base.BaseGridEditor: 1
Dict[(str, Type[flow.Flow])]: 1
Dict[(str, Game)]: 1
BoolProperty(name='Apply Modifiers', description='Apply Modifiers...', default=True): 1
BoolProperty(name='Export Materials', description='Export Materials...', default=True): 1
BoolProperty(name='Import Normals', description='Import Normals...', default=False): 1
StringProperty(name='outputFolder', subtype='NONE', default='seq'): 1
StringProperty(name='outputSubFolder', subtype='NONE', default='ren'): 1
StringProperty(name='outputSequence', subtype='NONE', default='render'): 1
IntProperty(default=8, min=1, max=60): 1
BoolProperty(name='do Output SubFolder', description='do Output SubFolder...', default=False): 1
BoolProperty(name='do use scene frames', description='do use scene frames...', default=False): 1
IntProperty(default=1, min=1, max=10000): 1
IntProperty(default=100, min=1, max=10000): 1
IntProperty(default=10, min=1, max=10000): 1
FloatProperty(default=0.3, min=0.0, max=1.0): 1
StringProperty(name='MorfNames', subtype='NONE', default=''): 1
BoolProperty(name='use world matrix', description='use world matrix...', default=False): 1
BoolProperty(name='apply modifiers to morf', description='apply modifiers to morf...', default=False): 1
FloatProperty(default=0.0, min=(- 1000.0), max=1.0): 1
FloatProperty(default=1.0): 1
EnumProperty(items=(('X', 'X', ''), ('Y', 'Y', ''), ('Z', 'Z', '')), default='X'): 1
EnumProperty(name='Key Inputs Style', items=(('Blender', 'Blender', ''), ('Maya', 'Maya', '')), default='Blender'): 1
EnumProperty(name='Objects To Snap', items=(('Selected', 'Selected', ''), ('Visible', 'Visible', '')), default='Visible'): 1
IntProperty(default=13, min=1, max=128): 1
EnumProperty(name='Spread Mode', items=(('Original', 'Original', ''), ('Uniform', 'Uniform', '')), default='Original'): 1
EnumProperty(items=(('Turbulence', 'Turbulence', ''), ('Fractal', 'Fractal', ''), ('HeteroTerrain', 'HeteroTerrain', '')), default='Turbulence'): 1
IntProperty(default=2): 1
FloatProperty(default=0.5, soft_min=0): 1
FloatProperty(default=2.0, soft_min=0): 1
bpy.props.FloatVectorProperty(name='Arc Axis', description='Arc Axis', default=(0.0, 0.0, 1.0), size=3): 1
EnumProperty(items=(('Normal', 'Normal', ''), ('Even', 'Even', '')), default='Normal'): 1
EnumProperty(items=(('Custom', 'Custom', ''), ('Middle', 'Middle', ''), ('MiddleCrossed', 'MiddleCrossed', '')), default='Custom'): 1
FloatProperty(name='Offset', description='Offset Arc', default=0.0): 1
FloatProperty(name='Scale', description='Scale Arc', default=0.0): 1
bpy.props.FloatProperty(name='Rotate', description='Rotate Arc Axis', default=0): 1
bpy.props.FloatVectorProperty(name='Rotate Axis', description='Rotate Axis', default=(0.0, 0.0, 1.0), size=3): 1
EnumProperty(items=(('Normal', 'Normal', ''), ('Generic', 'Generic', '')), default='Generic'): 1
bpy.props.IntProperty(name='Cuts Number', description='Cuts Number for Generic Mode', default=10, min=2): 1
bpy.props.IntProperty(name='Verts Number', description='Verts Number for Cuts', default=8, min=3): 1
bpy.props.IntProperty(name='Rotate Loops', description='Cuts Number for Generic Mode', default=0, min=(- 360), max=360): 1
bpy.props.FloatProperty(name='Unbevel Value', description='Unbevel Value', default=1.0, min=0.0): 1
List[Entry]: 1
Optional[ImportError]: 1
Mapping[(Flag, str)]: 1
Mapping[(str, Flag)]: 1
FrozenSet[Flag]: 1
ExtensionOptions: 1
Collection[Type[Command]]: 1
ClassVar[Optional[Type['Command']]]: 1
Optional['ExtensionOptions']: 1
Final[ContentTypeHeader]: 1
Dict[(str, 'MessageDecoder')]: 1
ClassVar[HeaderRegistry]: 1
Union[(str, int)]: 1
List[ServerChallenge]: 1
Optional[Mapping[(bytes, Type['Command'])]]: 1
AppendRequest: 1
{str: str}: 1
Set[PartialEmoji]: 1
AdminMonitoringConfig: 1
ActionVerb: 1
Dict[(str, Tuple[(int, ...)])]: 1
Dict[(str, np.ndarray)]: 1
Dict[(str, PolicyLoaderFn)]: 1
'Service': 1
List['PreferencePanel']: 1
Blueprint: 1
Dict[(Any, bytes)]: 1
List[Handler]: 1
LoginSessionQuery: 1
'FileUploadsExtension': 1
Optional[Permission]: 1
'Admin': 1
Query: 1
UserQuery: 1
List['Allele']: 1
FastDictCache[(Tuple[(str, str)], Char)]: 1
Dict[(bool, Filter)]: 1
Queue[Union[(_T, _Done)]]: 1
Dict[(str, List[KeyPress])]: 1
Dict[(str, Union[(Keys, Tuple[(Keys, ...)])])]: 1
Dict[(Tuple[(AbstractEventLoop, int)], Optional[Callable[([], None)]])]: 1
Future[None]: 1
ContextVar['AppSession']: 1
'Optional[NodeKeyReuseConfig]': 1
Optional[NodeKeyReuseBase]: 1
Optional[NodeKeyReuseConfig]: 1
ClassVar[Optional[Publisher]]: 1
ClassVar[Dict[(str, Tuple[(str, str, Any)])]]: 1
typing.Tuple[(str, ...)]: 1
ProviderPerformance: 1
ClassVar[Dict[(str, List[Offer])]]: 1
Tuple[(float, float, float, float)]: 1
AclRule: 1
List[Tuple[(str, AclRule, Optional[int])]]: 1
Dict[(str, Union[(_Always, SortedList)])]: 1
Type[TaskApiPayloadBuilder]: 1
Union[(None, Dict[(str, Any)], Tuple[(Dict[(str, Any)], int)])]: 1
SubtaskId: 1
'taskkeeper.TaskHeaderKeeper': 1
typing.Dict[(str, dict)]: 1
'keysauth.KeysAuth': 1
'requestedtaskmanager.RequestedTaskManager': 1
Dict[(str, ResourceHandshake)]: 1
ClassVar[Optional['DockerManager']]: 1
Optional[MemoryCheckerThread]: 1
Optional[List[DockerBind]]: 1
ECCx: 1
Dict[(str, SupportStatus)]: 1
Dict[(str, Environment)]: 1
Optional[EnvironmentsConfig]: 1
PathOrStr: 1
Type[Task]: 1
Type[Builder]: 1
'Type[DockerEnvironment]': 1
uuid.UUID: 1
List[Tuple[float]]: 1
Shipping: 1
Iterable[ImageInfo]: 1
List[TocEntry]: 1
etree.ElementTree: 1
etree.Element: 1
Dict[(str, PhysicalItem)]: 1
Iterable[TocEntry]: 1
Dict[(str, ImageInfo)]: 1
TxType: 1
Dict[(CallLogKey, CallLogValue)]: 1
List[ScrySet]: 1
List[ScryCard]: 1
Dict[(Optional[str], str)]: 1
Oracle: 1
ScryfallCardCount: 1
ClassVar[Set[Tuple[(str, str, str)]]]: 1
ClassVar[Dict[(Tuple[(str, str)], Type['SerializationDialect'])]]: 1
Sequence[Optional[str]]: 1
Sequence[EnumMeta]: 1
Sequence[Type[models.ScryObject]]: 1
Dict[(str, BaseSchema)]: 1
List[NodeNG]: 1
Dict[(Union[(astroid.FunctionDef, astroid.Module)], ControlFlowGraph)]: 1
Optional[ControlFlowGraph]: 1
Optional[CFGBlock]: 1
List[Tuple[(NodeNG, Dict[(str, CFGBlock)])]]: 1
Image.Image: 1
Optional[Exception]: 1
Collection[str]: 1
Dict[(Type[_Event], str)]: 1
'IServerMethodFunc': 1
const.Cardinality: 1
List[Method]: 1
HelloReply: 1
contextvars.ContextVar[XRequestId]: 1
SovrinErrorCode: 1
List[SyncSourceSuite]: 1
SyncSourceInfo: 1
typing.List[config.Key]: 1
typing.List[config.Mouse]: 1
typing.Iterable[typing.Type['ConfigPageMixin']]: 1
aioinflux.MEASUREMENT: 1
aioinflux.TIMEINT: 1
aioinflux.TAG: 1
aioinflux.BOOL: 1
aioinflux.INT: 1
aioinflux.FLOAT: 1
aioinflux.ENUM: 1
aioinflux.TAGENUM: 1
aioinflux.STR: 1
FollowedStatus: 1
bpy.props.CollectionProperty(name='adf', type=bpy.types.OperatorFileListElement): 1
bpy.props.StringProperty(options={'HIDDEN'}): 1
bpy.props.StringProperty(): 1
EnumProperty(items=depth_axis_enum, name='Axis', description="Select the axis defining the distance vertices will be placed from the surface. Each vertex will be placed at the same offset, from the surface, as the distance from the vertex to the furthest vertex on the axis. Using an object's orientation axis is useful to get a better fit on the surface, if vertices are oriented accordingly (the object has a 'floor' of coplanar vertices orthogonal to the axis). If multiple object's are selected, the axis is defined by the parent object", default='CLOSEST'): 1
EnumProperty(items=largest_obj_enum, name='Selection Parent', description='Determines how selected objects relate to each other, if selection should be projected as a group, select relevant parent function. Children will be projected relative to the parent object defined by the parent function', default='SINGLE'): 1
FloatProperty(name='Surface Offset', description='Move the projection closer/away from target surface by a fixed amount (along neg. view forward axis)', default=0, min=(- sys.float_info.max), max=sys.float_info.max, step=1): 1
FloatProperty(name='Intersection Epsilon', description='Error marginal for intersection tests, can solve intersection problems where vertices are projected through edges', default=1e-05, min=1e-05, max=1, step=1, precision=4): 1
EnumProperty(items=proj_type_enum, name='Surface Alignment', description='Determines how the mesh will be aligned on the surface. Alignment primarily defines the mesh axis pointing up/away from the surface. It also affects how the mesh will be rotated around the axis and how the target area is determined for the projection'): 1
BoolProperty(name='Smooth', description='If the mesh placed on the surface will be smoothly bent around edges', default=True): 1
BoolProperty(name='Keep Relative Scale', description='Scales the surface mapping to the same size ratio of the projected mesh', default=False): 1
FloatProperty(name='Scale', description='Scale the projected mesh (and the mapped UV area) on the surface', default=1, soft_min=0.01, soft_max=10, step=2, precision=2): 1
FloatProperty(name='Surface Offset', description='Move the projection closer/away from target surface by a fixed amount', default=0, min=(- sys.float_info.max), max=sys.float_info.max, step=1): 1
FloatVectorProperty(name='Move', description='Move the mesh over the surface by moving the mapped UV area along the UV coordinates', default=(0.0, 0.0), size=2, step=1, precision=4): 1
FloatProperty(name='Rotate', description='Rotate the mesh on the surface by rotating the mapped UV area', default=0, min=(- sys.float_info.max), max=sys.float_info.max, step=8): 1
FloatVectorProperty(name='Scale Separated', description='Scale each X,Y surface mapping component separately or scale mesh Z axis', default=(1.0, 1.0, 1.0), soft_min=0.01, soft_max=10, size=3, step=2): 1
FloatProperty(name='Partitions per face', description='Higher value increases invoke stage but execute (updates) runs faster. Higher value increases the numbers of partitions the uv map will be divided in', default=0.5, min=0.1, max=20, step=100): 1
FloatProperty(name='Intersection Bias', description='Error marginal for intersection tests, can solve intersection problems', default=1e-05, min=1e-05, max=1, step=1): 1
BoolProperty(name='Print Execution Time', description='Prints execution time to the information panel, mutes warning in the last report panel', default=False): 1
EnumProperty(items=rot_type_enum, name='Alignment', description='Determines the axis of the parent object that will be aligned to the camera view', default='CLOSEST'): 1
EnumProperty(items=parent_obj_enum, name='Selection Parent', description='Method for determining the selected object that will be treated as the parent object', default='ACTIVE'): 1
BoolProperty(name='Exclude active object', description="Exclude the active object from selection, and disallows it from parenting the selection (useful if it's a projection target selection)", default=False): 1
website: 1
classification: 1
IntProperty(name='Segments', description='Segment count', default=50, min=2, max=1000): 1
BoolProperty(name='Cyclic', description='Close the shape', default=False): 1
tzinfo: 1
Optional[RoutingConfiguration]: 1
Set[ServerConnection]: 1
Application: 1
Optional[torch.LongTensor]: 1
Dict[(str, Dict[(str, List[str])])]: 1
Dict[(Type, Dict[(str, Type)])]: 1
Dict[(str, BertModel)]: 1
Callback: 1
Callable[([TrainerBase], None)]: 1
commands.Context: 1
asyncio.AbstractEventLoop: 1
Dict[(MetaFormat, Set[str])]: 1
Dict[(DataFormat, Set[str])]: 1
Set[bytes]: 1
Dict[(str, Set[UpdateStatus])]: 1
Dict[(str, ParsedResult)]: 1
FrozenSet[Flavor]: 1
Dict[(str, Type[Command])]: 1
typing.Dict[(str, str)]: 1
DeckManager: 1
Callable[([AnkiDeck], Archiver)]: 1
AnkiDeck: 1
DeckExporter: 1
Callable[([Path], AnkiRepo)]: 1
Notifier: 1
Repo: 1
AnkiHookManager: 1
Iterable[int]: 1
AnkiExporter: 1
Callable[([str, Any], Any)]: 1
Callable[([str], Optional[str])]: 1
ArchiverVendor: 1
typing.List[Talk]: 1
Grid: 1
DictStrAny: 1
StringProperty(default='*.ifc', options={'HIDDEN'}): 1
BoolProperty(name='Use entity names', description='Use entity names rather than GlobalIds for objects', default=True): 1
BoolProperty(name='Process relations', description='Convert containment and aggregation relations to parenting (warning: may be slow on large files)', default=False): 1
BoolProperty(name='Use Blender booleans', description='Use Blender boolean modifiers for opening elements', default=False): 1
List[Stack]: 1
ColRanges: 1
Type[Platform]: 1
Dict[(Tuple[(Any, ...)], 'BaseAnalytics')]: 1
BaseAnalytics: 1
t.List[T]: 1
snug.Query['Page']: 1
'issue': 1
t.Optional[Issue.State]: 1
t.Optional[Issue.Sort]: 1
State: 1
t.Optional[bool]: 1
t.List[Stop]: 1
t.List[Component]: 1
t.Optional[t.List[Notification]]: 1
Union[(discord.Member, discord.TextChannel)]: 1
discord.Attachment: 1
'nabbot.NabBot': 1
Union[(discord.User, discord.Member)]: 1
Union[(discord.Member, discord.ClientUser)]: 1
Steel: 1
ApplianceFactor: 1
Properties: 1
Fluid: 1
StringProperty(default='TT_tube'): 1
IntProperty(name='Profile Subdivision', description='subdivision level for the profile (circumference)', default=4, min=0, max=16): 1
IntProperty(min=0, default=12, max=30, description='subdivision level for the length of the initial curve'): 1
BoolProperty(default=0): 1
'List[str]': 1
'CacheTableManager': 1
'ConfigParser': 1
'Connection': 1
'AIDResultsManager': 1
'TitleSearcher': 1
'Optional[List[Track]]': 1
Dict[(int, Node)]: 1
DiGraph: 1
RoadmaptoolsConfig: 1
ConfigStore: 1
Type[Union[(Group, User)]]: 1
typing.Dict[(InMemoryCacheKey, str)]: 1
StringProperty(name='Sprite render path', description='Where to save the sprite frames. %s = frame name %d = rotation number', default='C:/temp/sprite%s%s.png'): 1
IntProperty(name='Steps', description='The number of different angles to render', default=8): 1
StringProperty(name='Frame names', description='The naming scheme for all frames.\n Each letter corresponds to a single frame.', default='ABCDEFGHIJKLMN'): 1
StringProperty(name='Step names', description='The naming scheme for rotation steps.\n Each letter corresponds to a single camera angle.', default='12345678'): 1
StringProperty(name='Target object', description='The object to be rotated. Usually an Empty\nwith the actual models as children.', default=''): 1
Sequence[Installable]: 1
Union[(discord.User, None)]: 1
List[discord.Guild]: 1
Union[(discord.TextChannel, None)]: 1
public({balanceOf: currency_value, id_num: bytes32, enrolled: bool, first_name: bytes32, last_name: bytes32, grade: decimal[6][8]}[address]): 1
num: 1
DataLoader: 1
torch.device: 1
StatScope: 1
FillStrategy: 1
Rinzler: 1
callable: 1
Sequence[Tuple[(str, 'LinkObject')]]: 1
Sequence[RelOptType]: 1
Type[Transform]: 1
Optional[Type[BasePagination]]: 1
Variant: 1
List[ChainMap]: 1
ChainMap: 1
List[Union[(MasterBot, SlaveBot)]]: 1
Dict[(int, dict)]: 1
Optional[Game]: 1
socketIO_client.SocketIO: 1
Type[Bot]: 1
Dict[(str, StringsDict)]: 1
Type[P]: 1
ClassVar[Dict[(str, FieldDescriptor)]]: 1
ClassVar[Dict[(str, Any)]]: 1
Union[(Type[_VT], str)]: 1
'venom.validation.Schema': 1
Type[_KT]: 1
Type[RequestContext]: 1
Mapping[(Service, Union[(Service, 'venom.rpc.comms.AbstractClient')])]: 1
MutableMapping[(asyncio.Task, 'RequestContext')]: 1
ClassVar['venom.util.AttributeDict']: 1
ClassVar[ServiceManager]: 1
ClassVar[Dict[(str, MethodDescriptor)]]: 1
ClassVar[Dict[(str, Method)]]: 1
ClassVar[Type['Service']]: 1
ResponseMessage: 1
ResponsesMessage: 1
Repeat[ParameterMessage]: 1
Repeat[TagMessage]: 1
InfoMessage: 1
Map[(str, PathsMessage)]: 1
Map[(str, SchemaMessage)]: 1
Set[Service]: 1
Set[Type[Method]]: 1
Set[Type[Message]]: 1
ClassVar[Type['ClientMethod']]: 1
S: 1
BaseRequest: 1
ClassVar[Dict[(Tuple[(Type['venom.protocol.Protocol'], Type[Message])], 'MessageTranscoder')]]: 1
ClassVar[Dict[(Type[Message], Type['MessageTranscoder'])]]: 1
Type[Message]: 1
Type[MessageTranscoder]: 1
FieldMask: 1
StringValue: 1
Optional[Runtime]: 1
SimulatorControlType: 1
List[isim.Runtime]: 1
List[isim.DeviceType]: 1
Dict[(str, Type['Edit'])]: 1
Sequence[IndexResult]: 1
Sequence[Edit]: 1
Vocabulary: 1
LanguageProxy: 1
RepositoryMetadata: 1
SourceFile: 1
PurePosixPath: 1
{category: bytes32, author: address, cost: wei_value}[bytes32]: 1
public(bool[bytes32][bytes32]): 1
public(bytes32[address]): 1
public(address[bytes32]): 1
public(decimal): 1
Dict[(str, Callable[([Any], str)])]: 1
Dict[(str, Type[BlockRuntime])]: 1
Optional[logging.Logger]: 1
Dict[(str, Dict[(Vulnerabilities, List[Issue])])]: 1
Namespace: 1
ParseResult: 1
Vulnerabilities: 1
List[List[Union[(str, List[str])]]]: 1
Dict[(Any, Any)]: 1
List[_MatchRule]: 1
Union[(Dict[(str, Dict[(str, str)])], None)]: 1
Union[(Dict[(Any, Any)], None)]: 1
GuildMusicManager: 1
PrOpenedHookDetails: 1
TagHookDetails: 1
PushHookDetails: 1
AuthenticationResult: 1
JenkinsClient: 1
ClearQuery: 1
InsertOneResult: 1
UpdateResult: 1
List[LabeledHookDetails]: 1
bpy.props.EnumProperty(items=[('obj', 'obj', 'obj file format'), ('glb', 'glb', 'glb file format'), ('glTF', 'glTF', 'glTF file format')], description='Choose the file format between obj, glb (binary packed - recommended) or glTF (unpacked)', default='glb'): 1
bpy.props.BoolProperty(name='To Unreal Engine', description='Will fix the scale and orientation to export to Unreal Engine 4', default=False): 1
bpy.props.StringProperty(name='Path', description='Indicate the path to your game asset folder', default='//', subtype='DIR_PATH'): 1
bpy.props.BoolProperty(name='Bake Textures', description='Will bake your textures, if disabled it will set your low poly to flat shading and disable Unfold Half. Disabling it is ideal to send low poly models with flat base colors. You can also use this to generate your low poly, edit the UVs then use Selected to Active.', default=True): 1
bpy.props.EnumProperty(items=[('256', '256', '256 px resolution'), ('512', '512', '512 px resolution'), ('1K', '1K', '1K px resolution'), ('2K', '2K', '2K px resolution'), ('4K', '4K', '4K px resolution')], description='Choose the texture resolution in X (width)', default='512'): 1
bpy.props.EnumProperty(items=[('256', '256', '256 px resolution'), ('512', '512', '512 px resolution'), ('1K', '1K', '1K px resolution'), ('2K', '2K', '2K px resolution'), ('4K', '4K', '4K px resolution')], description='Choose the texture resolution in Y (height)', default='512'): 1
bpy.props.IntProperty(name='Sample Count', description='Increasing this value will reduce the noise on your texture for the Ambient Occlusion and SSS, but it will increase the baking time', default=8, min=1): 1
bpy.props.BoolProperty(name='Bake AO', description='Will bake the AO map separately ideal for PBR materials. Do not include an AO node in your base color shader', default=False): 1
bpy.props.BoolProperty(name='Unfold Half by Symmetry', description='Will generate an UV Map for the half right of the low poly to double the quality of the texture', default=False): 1
bpy.props.BoolProperty(name='Selected to Active', description='Will use your own low poly and UV Map, the active selection must be your low poly', default=False): 1
bpy.props.BoolProperty(name='Calculate LODs', description='Your LODs will automatically be calculated relative to the LOD0 like this: LOD1: 50%; LOD2: 25%, LOD3: 12.5%', default=True): 1
bpy.props.IntProperty(name='LOD0 (tris)', default=1000, min=1): 1
bpy.props.IntProperty(name='LOD1 (tris)', default=0, min=0): 1
bpy.props.IntProperty(name='LOD2 (tris)', default=0, min=0): 1
bpy.props.IntProperty(name='LOD3 (tris)', default=0, min=0): 1
bpy.props.BoolProperty(name='Imposter Cards', description='Displays your high poly on multiple planes. Enable Backface Culling in the viewport to display it.', default=False): 1
bpy.props.BoolProperty(name='Show output in Blender', description='Display your output in Blender', default=True): 1
bpy.props.BoolProperty(name='Smooth High Poly', description='Will apply a smooth shading on your high poly', default=True): 1
bpy.props.BoolProperty(name='Smooth Low Poly', description='Will apply a smooth shading on your low poly', default=True): 1
bpy.props.BoolProperty(name='Bake Lighting/Shading', description='The lighting and shading information will be baked, this is useful if you have emissive materials', default=False): 1
bpy.props.FloatProperty(name='Cage Size', description="The amount of temporary extrusion used on your low poly during the baking. A value too low will reveal intersections, a value too high can create new intersections between concave shapes and generate wavy edges. After generating your low poly if the result isn't correct, use the Solidify modifier on the low poly, change the offset to 1 and tweak the thickness by holding shift until it envelops the high poly to find the right value, then generate your asset again", default=0.05, min=0, max=1): 1
bpy.props.IntProperty(name='Edge Padding', description='The amount of pixels that goes beyond the UV seam. A value too low can reveal the seam, a value too high takes more time to calculate', default=16, min=0, max=64): 1
bpy.props.FloatProperty(name='UV Margin', description="The space between each UV islands. A value too low won't allow to have enough edge padding for the texture beyond the seams", default=0.01, min=0, max=64): 1
bpy.props.IntProperty(name='UV Angle', description='The step angle where your UV Map must create an UV Seam. If the value is too low the UV Map will contain many individual faces, the game engine will need more calculations to display your textures. A value too high could create overlapping and not optimize the texel density (space available) resulting in a low texture quality', default=45, min=1, max=89): 1
bpy.props.BoolProperty(name='Center XY', description='Center your game asset in the X and Y axis before exporting it, this makes it easier to manipulate it in the game engine (you can also have a collection of high polys in the Blender scene in different positions)', default=False): 1
bpy.props.BoolProperty(name='On the Ground', description='Move your asset on the ground', default=False): 1
bpy.props.BoolProperty(name='Remove Inside', description="The addon will perform an Union boolean between every meshes that aren't merged (connected vertices), this will remove the geometry inside your model before calculating the polycount and performing an UV Mapping", default=False): 1
bpy.props.BoolProperty(name='Ground AO', description='Before the baking, the addon will generate a plane at the height of the grid to generate Ambient Occlusion like if the object were standing on the ground. Use it with every static meshes that lays on the ground', default=False): 1
bpy.props.BoolProperty(name='Remove Underground', description="Everything bellow the grid will be removed, this will save triangles that won't be visible bellow your model", default=False): 1
List[Mention]: 1
'GitHubHandler': 1
'GitHubAppHandler': 1
typing.List[Signal]: 1
typing.List[SignalValueDefinition]: 1
_ProjectConfig: 1
_PersonalConfig: 1
_ProjectCustomization: 1
String[1:]: 1
ApiMetadata__Changelog: 1
Union[(StrictInt, StrictStr)]: 1
RequestParams: 1
BaseRequestParams: 1
SetupRequestParams: 1
ResolveRequestParams: 1
InstallRequestParams: 1
UpdateRequestParams: 1
RemoveRequestParams: 1
GetRequestParams: 1
Union[(None, StrictInt, StrictStr)]: 1
ErrorCodes: 1
Error: 1
ClassVar[Set[Strategies]]: 1
List[PkgFolderCoercer]: 1
PkgOptionsCoercer: 1
_ConfigStorageBase: 1
ipv4.CensysIPv4: 1
websites.CensysWebsites: 1
certificates.CensysCertificates: 1
export.CensysExport: 1
Optional[Tuple[(str, str)]]: 1
A: 1
Connection: 1
Mysql: 1
Type[_BaseTable]: 1
L4Contract: 1
Set[SituationId]: 1
Set[ActionId]: 1
LazyRecTuple: 1
FrozenSet[K]: 1
TupleLinkedList: 1
Dict[(Sort, str)]: 1
Dict[(str, Callable[([str], SMTExpr)])]: 1
Iterable[SubsortConstraint]: 1
Tuple[(Tuple[(Set[Sort], Sort)], ...)]: 1
Tuple[(Sort, Sort)]: 1
SExpr: 1
List[SExpr]: 1
Dict[('ActorEventRule', Dict[(RuleParamId, int)])]: 1
List[RoleId]: 1
DeonticKeyword: 1
Term: 1
TriggerType: 1
SortOp: 1
StateVarId: 1
SortTuple: 1
Set[SimpleFnType]: 1
Dict[(SortTuple, Optional[Sort])]: 1
RoleId: 1
Optional[ActionParamSubst]: 1
Optional[ActionParamSubstList]: 1
EventType: 1
Trace: 1
Optional[models.Nomination]: 1
LayoutObject: 1
WindowUnitType: 1
Optional[RWARatioTokenOptions]: 1
Optional[RWAAverageTokenOptions]: 1
RWAWindowOptions: 1
RWAPlotOptions: 1
KMeansViz: 1
KMeansInit: 1
TokenOption: 1
NormOption: 1
CullingOption: 1
StatsFrontEndOption: 1
MatrixFrontEndOption: 1
FileIDContentMap: 1
TokenizerOption: 1
SimilarityFrontEndOption: 1
BCTOption: 1
DendroOption: 1
IntProperty(name='mesh_id', default=0): 1
EnumProperty(items=(lambda self, context: BISItems.get_previews(self, NodeManager.storage_type(context))), update=(lambda self, context: BISItems.on_preview_select(self, NodeManager.storage_type(context)))): 1
EnumProperty(items=(lambda self, context: BISItems.get_previews(self, MeshManager.storage_type(context))), update=(lambda self, context: BISItems.on_preview_select(self, MeshManager.storage_type(context)))): 1
StringProperty(name='message', description='message', default=''): 1
IntProperty(name='width', default=400): 1
BoolProperty(name='word_wrap', default=True): 1
StringProperty(name='delimiter', default='\n'): 1
BoolProperty(name='Experimental mode', default=False, update=(lambda self, context: self.experimental_mode_change(context))): 1
EnumProperty(items=[('NODEGROUP', 'Node Group', 'Node Group', '', 0), ('MATERIAL', 'Material', 'Material', '', 1)], default='MATERIAL'): 1
StringProperty(name='Login', description='User Login', default=''): 1
StringProperty(subtype='PASSWORD', name='Password', description='User Password', default=''): 1
BoolProperty(name='Stay logged (insecure)', description='Stay logged', default=False): 1
IntProperty(name='text_id', default=0): 1
StringProperty(name='IN_OUT', default='IN'): 1
bpy.props.EnumProperty(items=[('NodeSocketInt', 'Int', 'Int', '', 0), ('NodeSocketFloat', 'Float', 'Float', '', 1), ('NodeSocketColor', 'Color', 'Color', '', 2), ('NodeSocketVector', 'Vector', 'Vector', '', 3), ('NodeSocketShader', 'BSDF', 'Shader', '', 4)], default='NodeSocketInt'): 1
IntProperty(name='node_group_id', default=0): 1
StringProperty(name='textName', description='Add text with current name', default=''): 1
EnumProperty(items=(lambda self, context: BISItems.get_previews(self, TextManager.storage_type())), update=(lambda self, context: BISItems.on_preview_select(self, TextManager.storage_type()))): 1
StringProperty(name='mesh_by_name', description='Add mesh by name', default=''): 1
StringProperty(name='Name', description='Mesh name', default=''): 1
bpy.props.StringProperty(name='Tags', description='Tags (comma separated)', default=''): 1
AtomicShell: 1
Optional[MCommEvent]: 1
MServer: 1
Type[logging.Formatter]: 1
Optional[Pattern]: 1
CHAIN_TYPE: 1
HelpHandler: 1
BoolProperty(name='Keep Vertex Groups', default=True, description='Transfer all the Vertex Groups'): 1
BoolProperty(name='Keep Materials', default=True, description='Transfer all the Materials'): 1
BoolProperty(name='Resize', default=True, description='Scale the new object in order to preserve the average surface area'): 1
EnumProperty(items=[('QUAD', 'Quad Faces', ''), ('TRI', 'Triangles', '')], name='Source Faces', description='Source polygons', default='QUAD', options={'LIBRARY_EDITABLE'}): 1
EnumProperty(items=[('BEAUTY', 'Beauty', 'Split the quads in nice triangles, slower method'), ('FIXED', 'Fixed', 'Split the quads on the 1st and 3rd vertices'), ('FIXED_ALTERNATE', 'Fixed Alternate', 'Split the quads on the 2nd and 4th vertices'), ('SHORTEST_DIAGONAL', 'Shortest Diagonal', 'Split the quads based on the distance between the vertices')], name='Quad Method', description='Method for splitting the quads into triangles', default='FIXED', options={'LIBRARY_EDITABLE'}): 1
EnumProperty(items=[('BEAUTY', 'Beauty', 'Arrange the new triangles evenly'), ('CLIP', 'Clip', 'Split the polygons with an ear clipping algorithm')], name='Polygon Method', description='Method for splitting the polygons into triangles', default='BEAUTY', options={'LIBRARY_EDITABLE'}): 1
BoolProperty(name='Preserve Borders', default=True, description='Preserve original borders'): 1
MutableMapping[(type, MutableMapping[(Thread, 'CurrentThreadScheduler')])]: 1
MutableMapping[(type, 'ImmediateScheduler')]: 1
MutableMapping[(type, 'TimeoutScheduler')]: 1
Union[(list, tuple)]: 1
Optional[date]: 1
Latitude: 1
Longitude: 1
List[Contact]: 1
Union[(datetime, str)]: 1
Optional[Union[(str, datetime)]]: 1
List[Dict[(str, List[str])]]: 1
Klient: 1
ErrorCode: 1
{str: PaladinSpell}: 1
ClassVar[Set[str]]: 1
ClassVar[Pattern]: 1
typing.Union[('Bugzilla', 'FakeBugTracker', None)]: 1
typing.Iterable[BuildV1]: 1
'UserV1': 1
typing.Union[(None, str)]: 1
Servico: 1
Tomador: 1
List[RPS]: 1
Bible: 1
List[BookDict]: 1
Verse: 1
Optional[Verse]: 1
Erasmus: 1
Dict[(str, Service)]: 1
SummaryDict: 1
List[VerseDict]: 1
Optional[BasicAuth]: 1
VerseDict: 1
SearchResultDict: 1
Chapter: 1
ConfessionTypeEnum: 1
NumberingTypeEnum: 1
Optional[Callable[([], AsyncIterator[Any])]]: 1
Optional[List[Any]]: 1
Optional[Callable[([Sequence[str]], AsyncIterator[Any])]]: 1
Dict[(int, List[Passage])]: 1
MockCommand: 1
Dict[(str, ChapterJSON)]: 1
ClassVar[Mapping[(str, Type)]]: 1
ClassVar[List[str]]: 1
ClassVar[dict]: 1
List[Group]: 1
AutoencoderController: 1
MaximizationController: 1
QMaximizationControls: 1
QMaximizationDisplay: 1
QMaximizationConfig: 1
QDatasourceList: 1
QDatasourceSelectionBox: 1
QModelImageView: 1
QInputInfoBox: 1
TrainingController: 1
ActivationView: 1
Toolbox.Change: 1
DatasourceView: 1
DatasourceController: 1
CheckEnum: 1
Set[Type['SourceCollector']]: 1
BackupRoot: 1
BackupLatest: 1
SnapDirTmp: 1
KeepAmount: 1
List[Command]: 1
Optional[ArgumentParser]: 1
AppProcessState: 1
Optional[CompanionInfo]: 1
Optional[ScreenDimensions]: 1
List[TargetDescription]: 1
Optional[CrashLogInfo]: 1
Optional[TestRunFailureInfo]: 1
Optional[List[TestActivity]]: 1
Optional[Set[str]]: 1
List[HIDEvent]: 1
CompanionManager: 1
BootManager: 1
List[Server]: 1
List[EventList]: 1
Callable[(..., bool)]: 1
List[Segment]: 1
VideoWriter: 1
Opt[Dimensions]: 1
Audio: 1
List[Union[(VideoSource, List[VideoSourceList])]]: 1
SourceList: 1
List[Tuple[(TIME_FORMAT, TIME_FORMAT)]]: 1
VideoEffectList: 1
_ClassVar[_Pattern[str]]: 1
_ClassVar[_List[str]]: 1
_ClassVar[_Dict[(str, str)]]: 1
List[discord.File]: 1
commands.Bot: 1
discord.User: 1
Union[(commands.Command, commands.Cog)]: 1
ClassVar[Optional[Tuple[(int, int)]]]: 1
asyncio.subprocess.Process: 1
IntProperty(name='Cutout Index'): 1
typing.Union[(bool, str)]: 1
typing.Dict[(str, typing.Dict[(str, int)])]: 1
typing.Iterable[str]: 1
typing_extensions.Literal[('Html-part', 'Text-part', 'Attachment1', 'Attachment2', 'Attachment3')]: 1
_MailjetParsePartHeaderJson: 1
typing.List[_MailjetSendMessageJson]: 1
proto.MongoCachedCollection[job_pb2.JobGroup]: 1
typing.Dict[(int, str)]: 1
proto.MongoCachedCollection[geo_pb2.Departement]: 1
proto.MongoCachedCollection[advisor_pb2.AdviceModule]: 1
proto.MongoCachedCollection[action_pb2.ActionTemplate]: 1
proto.MongoCachedCollection[strategy_pb2.StrategyAdviceTemplate]: 1
proto.MongoCachedCollection[strategy_pb2.StrategyModule]: 1
typing.List[typing.Tuple[(pymongo.database.Database, typing.Dict[(str, typing.List[strategy_pb2.StrategyModule])])]]: 1
strategy_pb2.StrategyModule: 1
proto.MongoCachedCollection[driving_license_pb2.OneEuroProgramPartnerBank]: 1
proto.MongoCachedCollection[driving_license_pb2.DrivingSchool]: 1
typing.Dict[('geo_pb2.AreaType', typing.Callable[([geo_pb2.FrenchCity], str)])]: 1
proto.MongoCachedCollection[seasonal_jobbing_pb2.MonthlySeasonalJobbingStats]: 1
typing.Dict[(str, Campaign[typing.Any])]: 1
'CliConfig': 1
Optional[AnyStr]: 1
List['MachineOutputRenderer']: 1
Autoload: 1
Source: 1
TransformCallable: 1
Callable[([str, Optional[str]], VariableName)]: 1
Optional[VariableName]: 1
Optional[TransformCallable]: 1
Optional[Source]: 1
_Options: 1
service.Service: 1
structs.ReportData: 1
structs.ReportTrans: 1
[structs.ReportData]: 1
[structs.PirepData]: 1
[structs.AirepData]: 1
[Runway]: 1
RemarksData: 1
[Number]: 1
[TafLineData]: 1
[TafLineTrans]: 1
Icing: 1
Location: 1
Turbulance: 1
Dict[(TlsWrappedProtocolEnum, str)]: 1
Market: 1
SellType: 1
List[BTrade]: 1
Dict[(str, Dict[(int, List[Callable])])]: 1
Optional[List[Path]]: 1
Opt['Node']: 1
List[Tuple[(datetime.datetime, str, int)]]: 1
RunHandler: 1
List[Tuple[(str, int, int, str)]]: 1
jinja2.Template: 1
Dict[(str, Callable[(..., Any)])]: 1
List[RepositoryMetadata]: 1
Dict[(str, RepositoryMetadata)]: 1
IO[Any]: 1
PoliteHTTP: 1
List[Callable[([str], str)]]: 1
Rule: 1
Dict[(str, List[Rule])]: 1
MutableSet[str]: 1
Pattern[str]: 1
ClassVar[Dict[(str, Callable[([str], str)])]]: 1
Callable[([MetapackageRequest, Any], None)]: 1
Dict[(str, _FieldDescriptor)]: 1
ViewFunc: 1
Optional['ViewRegistrant']: 1
List[ViewRegistrant]: 1
List[Tuple[(datetime.timedelta, float)]]: 1
ClassVar[datetime.timedelta]: 1
_Dimensions: 1
PIL.ImageFont: 1
Dict[(str, _CacheEntry)]: 1
List[Tuple[(datetime.date, datetime.date)]]: 1
Mapping[(str, Optional[NormaliseValueFn])]: 1
affine.Affine: 1
ProductDoc: 1
BaseGeometry: 1
Dict[(str, GridDoc)]: 1
StacPropertyView: 1
Dict[(str, MeasurementDoc)]: 1
Dict[(str, AccessoryDoc)]: 1
Dict[(str, Sequence[UUID])]: 1
Dict[(object, ObjectTransform)]: 1
Dict[(str, Callable[([Dict], str)])]: 1
BoolProperty(name='Recursive', description='Recurse object hierarchy.', default=True): 1
BoolProperty(name='Make Convex', description='Create a convex hull from the raw mesh.', default=True): 1
FloatProperty(name='Height', min=0.0, default=1.0): 1
EnumProperty(items=properties.dir_items, name='Direction'): 1
FloatVectorProperty(name='Size', size=3, subtype='XYZ', min=0.0, default=(1.0, 1.0, 1.0)): 1
StringProperty(name='GameData Path', description='Path to KSP GameData tree', subtype='DIR_PATH'): 1
BoolProperty(name='Create Colliders', description='Disable to import only visual and hierarchy elements', default=True): 1
BoolProperty(name='Force Armature', description='Enable to force use of an armature to hold the model hierarchy', default=False): 1
StringProperty(default='*.craft', options={'HIDDEN'}): 1
StringProperty(default='*.cfg', options={'HIDDEN'}): 1
EnumProperty(name='Prop', description='KSP internal prop', items=prop_enum_items): 1
StringProperty(name='tex', update=texture_update_tex): 1
BoolProperty(name='type', description='Texture is a normal map', default=False): 1
BoolProperty(name='RGB Normal', description='Texture is RGB rather than GA (blender shader control, not exported)', update=texture_update_mapping): 1
FloatVectorProperty(name='scale', size=2, subtype='XYZ', default=(1.0, 1.0), update=texture_update_mapping): 1
FloatVectorProperty(name='offset', size=2, subtype='XYZ', default=(0.0, 0.0), update=texture_update_mapping): 1
CollectionProperty(type=MuTextureProperties, name='Textures'): 1
FloatProperty(name='', update=float2_update): 1
CollectionProperty(type=MuFloat2Prop, name='Float2'): 1
FloatVectorProperty(name='', size=4, subtype='XYZ', min=0.0, max=1.0, default=(0.0, 0.0, 0.0, 0.0), update=vector_update): 1
CollectionProperty(type=MuVectorProp, name='Vectors'): 1
BoolProperty(name='invertY', description='Invert Y-axis (for dds images)', default=False): 1
BoolProperty(name='convertNorm', description='Convert GA normal map to RGB', default=False): 1
FloatVectorProperty(name='', size=4, subtype='COLOR', min=0.0, max=1.0, default=(1.0, 1.0, 1.0, 1.0), update=color_update): 1
CollectionProperty(type=MuColorProp, name='Colors'): 1
FloatProperty(name='', update=float3_update): 1
CollectionProperty(type=MuFloat3Prop, name='Float3'): 1
FloatProperty(name='Spring'): 1
FloatProperty(name='Damper'): 1
FloatProperty(name='Target'): 1
FloatProperty(name='Stiffness'): 1
EnumProperty(items=modelType_items, name='Model Type'): 1
IntProperty(name='Size', default=1): 1
EnumProperty(items=method_items, name='Method'): 1
BoolProperty(name='Crossfeed', default=True): 1
BoolProperty(name='Rigid', default=False): 1
StringProperty(name='Tag', default='Untagged'): 1
IntProperty(name='Layer'): 1
EnumProperty(items=collider_items, name='Collider'): 1
BoolProperty(name='Trigger'): 1
FloatVectorProperty(name='Center', subtype='XYZ', update=collider_update): 1
FloatProperty(name='Radius', update=collider_update): 1
FloatProperty(name='Height', update=collider_update): 1
EnumProperty(items=dir_items, name='Direction', update=collider_update): 1
FloatVectorProperty(name='Size', subtype='XYZ', update=collider_update): 1
FloatProperty(name='Mass'): 1
FloatProperty(name='Distance'): 1
PointerProperty(type=MuSpringProp, name='Spring'): 1
PointerProperty(type=MuFrictionProp, name='Forward'): 1
PointerProperty(type=MuFrictionProp, name='Sideways'): 1
StringProperty(name='Name', default=''): 1
StringProperty(name='Type', default=''): 1
StringProperty(name='Config', default=''): 1
EnumProperty(items=modelType_items[1:], name='Model Type', description='Type of exported models when unspecified by root object.'): 1
PointerProperty(name='Internal root', description='Root object of the KSP internal model. Used for prop placement.', type=bpy.types.Object): 1
EnumProperty(items=clearflag_items, name='Clear Flags', default='SKYBOX'): 1
FloatVectorProperty(name='Background Color', size=4, subtype='COLOR', min=0.0, max=1.0, default=(0.0, 0.0, 0.0, 1.0)): 1
FloatProperty(name='Depth'): 1
Mapping[(str, bytes)]: 1
List[Tuple[(str, str, int, Result)]]: 1
RelationTo: 1
association.ExtensionConjunctions: 1
List[RelationTo]: 1
List[Gaf]: 1
ProblemType: 1
List[BaseBlockStoreConfig]: 1
BaseBlockStoreConfig: 1
MaintenanceType: 1
Optional[pendulum.Pendulum]: 1
OrganizationID: 1
Optional[VerifyKey]: 1
List[Tuple[(bytes, DeviceID, pendulum.Pendulum)]]: 1
Dict[(UUID, Tuple[(DeviceID, int, int)])]: 1
Reencryption: 1
RealmStatus: 1
List[RealmGrantedRole]: 1
BackendOrganizationAddr: 1
SigningKey: 1
PrivateKey: 1
Tuple[BlockAccess]: 1
Tuple[WorkspaceEntry]: 1
PublicKey: 1
BlockID: 1
HashDigest: 1
Optional[WorkspaceRole]: 1
'client.RedStar': 1
'config_manager.ConfigManager': 1
'channel_manager.ChannelManager': 1
Dict[(str, 'Resource')]: 1
Optional[Scout]: 1
Optional[List[ScoutNotice]]: 1
datetime.timedelta: 1
List[Header]: 1
IRCORS: 1
IRRetryPolicy: 1
Optional[IRBaseMapping]: 1
IR: 1
V2Admin: 1
Optional[V2Tracing]: 1
Optional[V2RateLimit]: 1
V2Bootstrap: 1
List[V2Route]: 1
List[V2Listener]: 1
List[V2Cluster]: 1
V2StaticResources: 1
ClassVar[Sequence[Dict[(str, Any)]]]: 1
ClassVar[Sequence[Dict[(str, str)]]]: 1
Sequence['OptionTest']: 1
ClassVar[Any]: 1
Mapping[(Type[Node], Type[View])]: 1
Mapping[(Type, Callable[([Any], Node)])]: 1
bpy.props.BoolProperty(name='Ambient Occlusion', description='Add Ambient Occlusion Map via RGB Mix Node', default=False): 1
bpy.props.BoolProperty(name='Metallic Node', description='Add Metallic Node', default=False): 1
bpy.props.BoolProperty(name='Specular Node', description='Add Specular Node', default=False): 1
bpy.props.BoolProperty(name='Relative Paths', description='Use Relative Paths for images.', default=True): 1
bpy.props.FloatProperty(name='Metallic', description='Metallic Value', default=0.5, min=0.0, max=1.0): 1
bpy.props.FloatProperty(name='Specular', description='Specular Value', default=0.5, min=0.0, max=1.0): 1
Optional[Transaction]: 1
'Type': 1
List[common.Request]: 1
common.Response: 1
Optional[httpserver.HTTPServer]: 1
Dict[(str, Dict[(str, UrlMethod)])]: 1
List[routing.Rule]: 1
List[BlockType]: 1
List[Property]: 1
List[EnumValue]: 1
List[Enumeration]: 1
Dict[(str, Type['Reader'])]: 1
Dict[(str, Type['Writer'])]: 1
Optional[List['Type']]: 1
Mapping[(str, Mapping[(str, Any)])]: 1
typing.List[Type['Command']]: 1
Dict[(int, List[int])]: 1
Optional[Namespace]: 1
Dict[(str, Callable[([Dict[(str, Any)]], Set[int])])]: 1
Dict[(Type[Model], Serializer)]: 1
Dict[(int, Dict[(str, Element)])]: 1
Dict[(int, Dict[(str, Any)])]: 1
Dict[(str, Type[Model])]: 1
Dict[(str, object)]: 1
Dict[(str, BaseWebsocketClientMessage)]: 1
Dict[(str, ProjectorSlide)]: 1
Dict[(int, List[Dict[(str, Any)]])]: 1
Dict[(str, List[Dict[(str, Any)]])]: 1
Dict[(str, Dict[(int, Dict[(str, Any)])])]: 1
Optional[Type['BaseVote']]: 1
List[PrivateKey]: 1
BlockGasLimit: 1
NettingChannelState: 1
Random: 1
TransactionChannelDeposit: 1
TokenNetworkRegistryState: 1
SecretRegistryAddress: 1
Optional[BalanceProofSignedState]: 1
QueueIdentifier: 1
InitiatorPaymentState: 1
MediatorTransferState: 1
TargetTransferState: 1
Optional[SendSecretReveal]: 1
HashTimeLockState: 1
List[List[Address]]: 1
RouteState: 1
Dict[(SecretHash, InitiatorTransferState)]: 1
List[MediationPairState]: 1
Optional[WaitingTransferState]: 1
Optional[List[Tuple[(TokenAmount, FeeAmount)]]]: 1
Optional[Interpolate]: 1
PaymentWithFeeAmount: 1
StateChangeID: 1
ST: 1
SavedState[ST]: 1
SignedBlindedBalanceProof: 1
List[RouteMetadata]: 1
RaidenProtocolVersion: 1
List[Block]: 1
Graph: 1
RaidenEvent: 1
ChainState: 1
StatelessFilter: 1
ABI: 1
BlockchainEvent: 1
keys.PrivateKey: 1
List[UpgradeRecord]: 1
Greenlet: 1
Sequence: 1
TokenNetworkRegistry: 1
SecretRegistry: 1
Optional[UserDeposit]: 1
Optional[ServiceRegistry]: 1
ChoraleDataset: 1
RenderingManager: 1
CellAlign: 1
Dict[(str, TorrentEntryAttrs)]: 1
Dict[(str, CacheEntryAttrs)]: 1
Optional[WithStat]: 1
TrackerStat: 1
Optional[BaseTracker]: 1
TorrentsDiff: 1
language_check.LanguageTool: 1
tweepy.OAuthHandler: 1
tweepy.API: 1
Dict[(str, ISignEnvironment)]: 1
Union[(str, ISignEnvironment)]: 1
ProblemInstance: 1
List[ProblemInstance]: 1
Dict[(User, UserState)]: 1
Dict[(ProblemInstance, ProblemState)]: 1
Group: 1
UnboundTableArgs: 1
Iterable[Tuple[(str, Any)]]: 1
TableArgs: 1
Iterable[Tuple[(str, str)]]: 1
List[Note]: 1
Bar: 1
staticmethod: 1
List[Dormitory]: 1
Backends: 1
PycroftApi: 1
UserData: 1
bpy.props.StringProperty(name='name', subtype='DIR_PATH', update=updated_path): 1
bpy.props.EnumProperty(name='log_level', items=[('debug', 'Debug', ''), ('warning', 'Warning', ''), ('error', 'Error', ''), ('critical', 'Critical', '')], default='error', update=update_logger): 1
bpy.props.CollectionProperty(type=AppleseedSearchPath, name='search_paths'): 1
bpy.props.IntProperty(name='path_index', description='', default=0): 1
bpy.props.EnumProperty(name='object_export', items=[('normal', 'Normal', ''), ('archive_assembly', 'Archive Assembly', '')], default='normal'): 1
bpy.props.StringProperty(name='archive_path', default='', subtype='FILE_PATH'): 1
bpy.props.BoolProperty(name='enable_visibility_flags', description='Enable visibility flags for object', default=False): 1
bpy.props.BoolProperty(name='camera_visible', description='Visibility to camera', default=True): 1
bpy.props.BoolProperty(name='light_visible', description='Visibility to lights', default=True): 1
bpy.props.BoolProperty(name='shadow_visible', description='Visibility to shadows', default=True): 1
bpy.props.BoolProperty(name='transparency_visible', description='Visibility to transparency', default=True): 1
bpy.props.BoolProperty(name='probe_visible', description='Visibility to probes', default=True): 1
bpy.props.BoolProperty(name='diffuse_visible', description='Visibility to diffuse rays', default=True): 1
bpy.props.BoolProperty(name='glossy_visible', description='Visibility to glossy rays', default=True): 1
bpy.props.BoolProperty(name='specular_visible', description='Visibility to specular rays', default=True): 1
bpy.props.IntProperty(name='medium_priority', description='Medium priority for nested dielectrics.  Higher numbers take priority over lower numbers.', default=0): 1
bpy.props.BoolProperty(name='double_sided', default=True): 1
bpy.props.BoolProperty(name='photon_target', default=False): 1
bpy.props.FloatProperty(name='object_alpha', description='Object Alpha', default=1.0, min=0.0, max=1.0): 1
bpy.props.BoolProperty(name='object_alpha_use_texture', description='Use a texture to influence object alpha', default=False): 1
bpy.props.PointerProperty(name='object_alpha_texture', type=bpy.types.Image): 1
bpy.props.StringProperty(name='object_sss_set', description='SSS set', default=''): 1
bpy.props.EnumProperty(name='object_ray_bias_method', items=[('none', 'No Ray Bias', ''), ('normal', 'Shift Along Surface Normal', ''), ('incoming_direction', 'Shift Along Incoming Direction', ''), ('outgoing_direction', 'Shift Along Outgoing Direction', '')], default='none'): 1
bpy.props.FloatProperty(name='object_ray_bias_distance', default=0.0): 1
bpy.props.BoolProperty(name='use_deformation_blur', default=True): 1
bpy.props.IntProperty(name='lighting_samples', description='', min=1, soft_max=1000, default=1, update=refresh_preview): 1
bpy.props.IntProperty(name='preview_quality', description='Number of samples used for preview rendering', default=3, min=1, max=64, update=refresh_preview): 1
bpy.props.EnumProperty(name='mode', items=[('surface', 'Surface', ''), ('volume', 'Volume', '')], default='surface', update=refresh_preview): 1
bpy.props.EnumProperty(name='Volumetric Model', description='Volume phase function model', items=[('henyey', 'Henyey-Greenstein', ''), ('isotropic', 'Isotropic', '')], default='isotropic', update=refresh_preview): 1
bpy.props.FloatVectorProperty(name='volume_absorption', description='Volume absorption', default=(0.5, 0.5, 0.5), subtype='COLOR', min=0.0, max=1.0, update=refresh_preview): 1
bpy.props.FloatProperty(name='volume_absorption_multiplier', description='Volume absorption multiplier', default=1.0, min=0.0, max=200.0, update=refresh_preview): 1
bpy.props.FloatVectorProperty(name='volume_scattering', description='Volume scattering', default=(0.5, 0.5, 0.5), subtype='COLOR', min=0.0, max=1.0, update=refresh_preview): 1
bpy.props.FloatProperty(name='volume_scattering_multiplier', description='Volume absorption multiplier', default=1.0, min=0.0, max=200.0, update=refresh_preview): 1
bpy.props.FloatProperty(name='volume_average_cosine', description='Volume average cosine', default=0.0, min=(- 1.0), max=1.0, update=refresh_preview): 1
bpy.props.EnumProperty(name='color_space', items=[('linear_rgb', 'Linear', ''), ('srgb', 'sRGB', '')], default='linear_rgb'): 1
bpy.props.EnumProperty(name='as_wrap_node', items=[('clamp', 'Clamp', ''), ('wrap', 'Wrap', '')], default='wrap'): 1
bpy.props.EnumProperty(name='as_alpha_mode', items=[('alpha_channel', 'Alpha Channel', ''), ('luminance', 'Luminance', ''), ('detect', 'Detect', '')], default='detect'): 1
bpy.props.EnumProperty(name='fisheye_projection_type', items=[('none', 'None', ''), ('equisolid_angle', 'Equisolid Angle', ''), ('equidistant', 'Equidistant', ''), ('stereographic', 'Stereographic', ''), ('thoby', 'Thoby', '')], default='equisolid_angle'): 1
bpy.props.FloatProperty(name='near_z', description='Near clipping distance', default=(- 0.001)): 1
bpy.props.BoolProperty(name='enable_dof', description='Enable depth of field', default=False): 1
bpy.props.BoolProperty(name='enable_autofocus', description='', default=False): 1
bpy.props.FloatProperty(name='f_number', description='Thin lens camera f-stop value', default=8.0, min=0.0, max=32.0, step=3, precision=1): 1
bpy.props.IntProperty(name='diaphragm_blades', description='Number of diaphragm blades. Use minimum of 3 for geometric bokeh', default=3, max=32, min=0): 1
bpy.props.FloatProperty(name='diaphragm_angle', description='Diaphragm tilt angle', default=0, min=(- 360), max=360, precision=3): 1
bpy.props.PointerProperty(name='diaphragm_map', type=bpy.types.Image): 1
bpy.props.EnumProperty(name='sun_mode', description='Mode of the sun lamp.  Sun|Distant', items=[('sun', 'Sun', ''), ('distant', 'Distant', '')], default='distant'): 1
bpy.props.FloatVectorProperty(name='radiance', description='Color of light emitted by lamp', default=(0.8, 0.8, 0.8), min=0.0, max=1.0, subtype='COLOR'): 1
bpy.props.BoolProperty(name='radiance_use_tex', description='Use texture to influence lamp intensity', default=False): 1
bpy.props.PointerProperty(name='radiance_tex', description='Texture to influence lamp intensity', type=bpy.types.Image): 1
bpy.props.FloatProperty(name='radiance_multiplier', description='Multiplier of lamp intensity', default=1, min=0, soft_max=10): 1
bpy.props.BoolProperty(name='radiance_multiplier_use_tex', description='Use texture to influence intensity multiplier', default=False): 1
bpy.props.PointerProperty(name='radiance_multiplier_tex', description='Texture to influence intensity multiplier', type=bpy.types.Image): 1
bpy.props.FloatProperty(name='exposure', description='Exposure', default=0.0, min=(- 64.0), max=64.0): 1
bpy.props.FloatProperty(name='exposure_multiplier', description='Spotlight exposure multiplier', default=1.0, soft_min=(- 64.0), soft_max=64.0): 1
bpy.props.BoolProperty(name='cast_indirect', description='Lamp casts indirect light', default=True): 1
bpy.props.FloatProperty(name='importance_multiplier', description='Adjust the sampling effort for this light with respect to the other lights', default=1, min=0, soft_max=10): 1
bpy.props.FloatProperty(name='turbidity', description='Sun lamp turbidity. If physical sky environment is also used, environment turbidity value will be used instead', default=4, min=0, max=8): 1
bpy.props.BoolProperty(name='use_edf', description='Use the environment EDF to determine Sun angle', default=False): 1
bpy.props.FloatProperty(name='size_multiplier', description='The size multiplier allows to make the Sun bigger or smaller, hence making it cast softer or harder shadows', default=1.0, min=0.0, max=100.0): 1
bpy.props.FloatProperty(name='distance', description='Distance between Sun and scene (millions of km)', default=149.6, min=0.0, max=500.0): 1
bpy.props.FloatProperty(name='tilt_angle', description='Spot lamp tilt angle', default=0, min=(- 360), max=360): 1
bpy.props.FloatVectorProperty(name='area_color', description='Color of area lamp', subtype='COLOR', default=(1.0, 1.0, 1.0)): 1
bpy.props.FloatProperty(name='area_intensity', description='Intensity of area light', default=1.0): 1
bpy.props.FloatProperty(name='area_intensity_scale', description='Intensity of area light', default=1.0): 1
bpy.props.FloatProperty(name='exposure', description='Intensity of area light', default=1.0): 1
bpy.props.BoolProperty(name='area_normalize', description='', default=False): 1
bpy.props.BoolProperty(name='area_visibility', description='', default=True): 1
bpy.props.PointerProperty(name='Lamp OSL Node Tree', type=bpy.types.NodeTree): 1
bpy.props.StringProperty(name='SSS Set Name', default=''): 1
bpy.props.CollectionProperty(type=AppleseedSSSSetsProps, name='appleseed SSS Sets', description=''): 1
bpy.props.IntProperty(name='layer_index', description='', default=0): 1
bpy.props.EnumProperty(name='Environment Type', items=[('constant', 'Constant', 'Use constant color for sky', '', 1), ('gradient', 'Gradient', 'Use sky color gradient', '', 2), ('latlong_map', 'HDRI Environment', 'Use HDRI map texture', '', 3), ('mirrorball_map', 'Mirror Ball', 'Use mirror ball texture', '', 4), ('none', 'None', '', '', 7), ('sunsky', 'Physical Sky', '', '', 5), ('constant_hemisphere', 'Per-Hemisphere Constant', 'Use constant color per hemisphere', '', 6)], description='Select environment type', default='none'): 1
bpy.props.EnumProperty(name='Sky Model', items=[('hosek', 'Hosek-Wilkie', 'Hosek-Wilkie physical sun/sky model')], description='Physical sun/sky model', default='hosek'): 1
bpy.props.FloatProperty(name='sun_theta', description='Sun polar (vertical) angle in degrees', default=0.0, min=(- 180), max=180): 1
bpy.props.FloatProperty(name='sun_phi', description='Sun azimuthal (horizontal) angle in degrees', default=0.0, min=(- 180), max=180): 1
bpy.props.FloatProperty(name='turbidity', description='', default=4.0, min=0.0, max=10.0): 1
bpy.props.FloatProperty(name='turbidity_multiplier', description='', default=2.0, min=0, max=10.0): 1
bpy.props.FloatProperty(name='luminance_multiplier', description='', default=1.0, min=0.0): 1
bpy.props.FloatProperty(name='luminance_gamma', description='', default=1.0, min=0.0): 1
bpy.props.FloatProperty(name='saturation_multiplier', description='', default=1.0, min=0.0): 1
bpy.props.FloatProperty(name='horizon_shift', description='', default=0.0, min=(- 2.0), max=2.0): 1
bpy.props.FloatProperty(name='ground_albedo', description='', default=0.3, min=0.0, max=1.0): 1
bpy.props.FloatProperty(name='env_tex_mult', description='', default=1): 1
bpy.props.PointerProperty(name='env_tex', type=bpy.types.Image): 1
bpy.props.FloatProperty(name='horizontal_shift', description='Environment texture horizontal shift in degrees', default=0.0, min=(- 360.0), max=360.0): 1
bpy.props.FloatProperty(name='vertical_shift', description='Environment texture vertical shift in degrees', default=0.0, min=(- 180.0), max=180.0): 1
bpy.props.FloatProperty(name='env_alpha', description='Alpha value of the environment', default=1.0, min=0.0, max=1.0): 1
bpy.props.FloatProperty(name='env_exposure', description='Environment exposure', default=0.0): 1
bpy.props.FloatProperty(name='env_exposure_multiplier', description='', default=1.0, soft_min=(- 64.0), soft_max=64.0): 1
bpy.props.FloatVectorProperty(name='horizon_color', subtype='COLOR', default=(0.3, 0.3, 0.3), min=0.0, max=1.0): 1
bpy.props.FloatVectorProperty(name='zenith_color', subtype='COLOR', default=(0.1, 0.1, 0.1), min=0.0, max=1.0): 1
bpy.props.PointerProperty(name='script', type=bpy.types.Text): 1
bpy.props.BoolProperty(name='export_normals', default=True): 1
bpy.props.BoolProperty(name='export_uvs', default=True): 1
bpy.props.BoolProperty(name='smooth_tangents', default=False): 1
DiskIdentifier: 1
Dict[(ResourceKey, kube.Resource)]: 1
Iterable[Tuple[(int, float, float, int, str)]]: 1
List[TrackInfo]: 1
AudioSourceInfo: 1
Iterator[Iterator[np.ndarray]]: 1
List['ManagerProgressbar']: 1
List['ManagerDeviceMenu']: 1
Dict[(str, Tuple[(GObject.SignalFlags, None, Union[(Tuple[()], Tuple[GObject.GType], Tuple[(GObject.GType, GObject.GType)], Tuple[(GObject.GType, GObject.GType, GObject.GType)])])])]: 1
None: 1
'GSettings': 1
Dict[(str, 'Option')]: 1
List['ServicePlugin']: 1
Tuple[(str, str)]: 1
Dict[(str, Dict[(str, Popen)])]: 1
Dict[(int, Switch)]: 1
typing.List[BlobInfo]: 1
BlobResponse: 1
typing.Set['KademliaPeer']: 1
WalletDatabase: 1
InputScript: 1
OutputScript: 1
ReadOnlyList[Output]: 1
ReadOnlyList[Input]: 1
typing.List['KademliaPeer']: 1
List[Template]: 1
'Time': 1
CensorType: 1
Pool: 1
Redis: 1
List[Message]: 1
Union[(List, Set)]: 1
Dict[(str, Type['ArchiveTypeBase'])]: 1
List[PatchObject]: 1
Dict[(str, Dict[(int, Dict[(str, Optional[str])])])]: 1
ResultsStore: 1
List[Type[PluginCollection]]: 1
Optional[CoprHelper]: 1
Dict[(str, Optional[str])]: 1
ActivityType: 1
Tree: 1
Optional[Tree]: 1
List[(Token, SelectorNode, JsonObjectNode, NbtObjectNode, NamespaceIdNode)]: 1
SelectorTagArgNode: 1
List[NbtMapNode]: 1
List[(Token, NbtObjectNode, NbtArrayNode, NbtIntegerNode, NbtFloatNode)]: 1
List[JsonMapNode]: 1
Union[(Token, JsonArrayNode, JsonObjectNode)]: 1
List[(Token, JsonArrayNode, JsonObjectNode)]: 1
List[Union[(Token, NbtObjectNode, NbtIntegerNode, NbtFloatNode)]]: 1
List[Union[(Token, JsonObjectNode)]]: 1
Optional[SelectorTagArgNode]: 1
BlockNode: 1
List[ExecuteSubLegacyArg]: 1
List[Union[(Token, SelectorNode, JsonObjectNode, NbtObjectNode, NamespaceIdNode)]]: 1
Dict[(int, 'FPNode')]: 1
'FPNode': 1
FPNode: 1
DefaultDict: 1
Counter: 1
Dict[(str, Union[(str, Sequence[str])])]: 1
Dict[(str, GdkPixbuf.Pixbuf)]: 1
Dict[(Tuple[(str, int)], GdkPixbuf.Pixbuf)]: 1
IndexType: 1
List[ObjectDefinition]: 1
List[IndexDefinition]: 1
List[StoredIdEdgeDefinition]: 1
KvetchData: 1
Optional[observerpattern.Observable]: 1
Optional[Callable]: 1
Sequence[MenuItem]: 1
chrono.Date: 1
event.Event: 1
'payee': 1
'account': 1
Dict[(str, Matchmaker)]: 1
Component2: 1
InheritedComponent: 1
TypeHintedComponent: 1
Optional[Render]: 1
HTTPParser: 1
'Response': 1
ConverterIoType: 1
typing.Union[(None, str, bytes)]: 1
GoogleCredentials: 1
typing.Optional[Github]: 1
typing.Optional[Repository]: 1
typing.Optional[AccountFetchResult]: 1
Account: 1
typing.Set[AccountRole]: 1
typing.Set[AccountPermissionType]: 1
typing.Union[(str, bytes)]: 1
DiskFileFacade: 1
typing.Optional[GitHubFacade]: 1
typing.Optional[GoogleDocsFacade]: 1
CloudSessionFacade: 1
SessionStatus: 1
typing.Set[ProjectRole]: 1
typing.Set[ProjectPermissionType]: 1
DirectoryEntryType: 1
typing.Optional[datetime]: 1
ProjectSourcePuller: 1
Extractor: 1
Mapping[(str, List[DocSet])]: 1
Services: 1
DataBase: 1
Directory: 1
WebUI: 1
Logging: 1
Dict[(str, Union[(str, Dict[(str, Dict[(str, Union[(str, int)])])])])]: 1
Dict[(str, Union[(str, int, Dict, List)])]: 1
Dict[(str, List[Union[(str, int)]])]: 1
MongoClient: 1
Product: 1
OptionType: 1
NodeState: 1
Optional[HomeAssistant]: 1
Optional[HomeAssistantType]: 1
List[IpBan]: 1
Optional[ModuleType]: 1
Optional[Callable[([str, str], bool)]]: 1
ColumnFilter: 1
Sequence[DatasetPart]: 1
Optional[pd.Series]: 1
Optional[DatabaseConfig]: 1
SurveyMeta: 1
Optional[rpy2.robjects.vectors.ListVector]: 1
Optional[Union[(types.FunctionType, types.LambdaType)]]: 1
Mapping[(str, Sequence[str])]: 1
Mapping[(str, Mapping[(T, T)])]: 1
Mapping[(T, T)]: 1
Optional[Callable[([T], T)]]: 1
Optional[Mapping[(str, Callable[([T], T)])]]: 1
Optional[Mapping[(str, Mapping[(T, Callable[([T], T)])])]]: 1
Sequence[ColumnFilter]: 1
Optional[SurveyConfig]: 1
Optional[SocrataConfig]: 1
DatabaseType: 1
InternetGateway: 1
VPCGatewayAttachment: 1
SingleAttributeObject: 1
SimpleResourceProperties: 1
FullResourceProperties: 1
TaggableProperties: 1
APIClient: 1
Rect: 1
BunkDB: 1
(None or discord.Color): 1
Server: 1
ProgressBar: 1
Duel: 1
Option: 1
Vote: 1
'Configuration': 1
Optional[Type]: 1
List[Egg]: 1
PumpInterface: 1
ExtraPumpInterface: 1
Tuple[Future]: 1
List[RPCStudentInCourseItem]: 1

------ Parameter types ------

Total parameters: 142807
str: 37212
int: 14542
bool: 6730
float: 3747
dict: 2840
Any: 1910
Optional[str]: 1620
bytes: 1573
list: 1497
List[str]: 1475
Text: 1072
np.ndarray: 957
Dict[(str, Any)]: 856
Path: 798
List[int]: 781
HttpRequest: 644
object: 588
Dict: 585
Optional[int]: 583
Callable: 442
UserProfile: 405
pd.DataFrame: 370
tuple: 353
datetime: 310
List: 282
Dict[(str, str)]: 282
BELGraph: 282
Context: 281
tf.Tensor: 257
argparse.Namespace: 230
torch.Tensor: 221
Iterable[str]: 220
type: 211
typing.Any: 204
Optional[bool]: 202
User: 198
PipelineContext: 198
UserID: 198
Optional[float]: 188
Sequence[str]: 187
Request: 177
List[List[str]]: 166
Node: 157
Optional[Text]: 155
Event: 154
pathlib.Path: 153
QModelIndex: 153
Session: 149
Union['str']: 148
MagicMock: 147
datetime.datetime: 146
PackageFactory: 146
set: 145
Config: 145
PackageTransformer: 144
np.array: 142
typing.List[str]: 140
List[List[int]]: 139
Message: 138
Optional[List[str]]: 135
typing.Optional[str]: 134
ArgumentParser: 132
Tensor: 131
Dict[(Text, Any)]: 130
mock.MagicMock: 130
MutableMapping[(str, Any)]: 129
Exception: 128
argparse.ArgumentParser: 128
ndarray: 128
Params: 125
Player: 124
DatabaseHandler: 123
Database: 121
Response: 119
T: 119
BaseEntity: 114
TreeNode: 112
Address: 112
Bot: 110
State: 109
Flask: 109
Str: 108
Iterable: 107
IRCMessage: 106
Position: 105
Type: 103
Dict[(str, int)]: 102
HomeAssistantType: 102
Mapping[(str, Any)]: 100
configargparse.Namespace: 97
Client: 97
Logger: 97
List[Any]: 94
typed_list(str): 93
Set[str]: 89
Update: 87
Realm: 85
List[requests.Response]: 85
Model: 84
Tuple[(int, int)]: 84
List[Dict]: 83
Sequence[Text]: 83
DataFrame: 83
Vocabulary: 83
[str]: 82
_CommandBase: 82
'String': 81
Type[T]: 80
pd.Series: 80
Dataset: 80
memoryview: 80
FileGenerator: 80
numpy.ndarray: 79
Document: 77
Union[(int, str)]: 77
HomeAssistant: 76
Namespace: 75
Optional[Dict]: 75
callable: 74
Connection: 74
Mapping: 74
Point: 74
PartyID: 74
None: 72
Sequence[int]: 72
StateApps: 72
Union[(int, float)]: 71
TextIO: 71
DatabaseSchemaEditor: 71
ops.Operation: 71
Expression: 71
scoring_base.ScoringProject: 71
Application: 70
Optional[typing.TState]: 70
'IR': 69
Union[(str, bytes)]: 67
List[float]: 67
ConfigType: 66
BrandID: 65
asyncio.AbstractEventLoop: 64
rest.Context: 64
QWidget: 64
sublime.View: 64
CLI: 64
Token: 63
typing.ScheduledAction: 63
Payload: 63
List[Dict[(str, Any)]]: 61
RequestMeta: 61
Entity: 60
Iterator[str]: 60
Decimal: 59
Project: 59
nn.Module: 59
ModeratorModel: 59
Tuple: 58
Package: 58
typing.Dict: 58
Field: 58
GitServer: 58
BlockSpecification: 58
dt.datetime: 57
Sequence[cirq.Qid]: 57
Domain: 56
Dict[(Text, List[types.Artifact])]: 55
UUID: 55
Queue: 55
Identifier: 55
Link: 55
bytearray: 53
Bool: 53
Action: 52
Learner: 52
AppSession: 51
Union[(str, int)]: 51
Image: 51
InitializerSpecs: 51
Web3: 51
Environment: 50
AsyncHome: 50
yaml.nodes.Node: 49
Optional[Path]: 49
Iterable[int]: 49
Api: 48
Mock: 48
configargparse.ArgumentParser: 47
IO: 47
Optional[Dict[(str, Any)]]: 47
Union['float']: 47
Optional['str']: 47
circuits.Circuit: 47
JsonDict: 47
typing.RelativeTime: 47
Optional[Dict[(str, str)]]: 46
timedelta: 46
Union[(str, Path)]: 46
Element: 46
XY: 46
Optional[Callable]: 45
logging.Logger: 45
'Long': 45
Resolver: 45
BoardModel: 45
Iterable[Any]: 44
ModuleType: 44
logging.LogRecord: 44
discord.Member: 44
apitypes.Tab: 44
Dict[(str, TokenIndexer)]: 44
Activity: 44
LaunchContext: 44
QueueScheduler: 44
ListNode: 43
ConfigParser: 43
Runner: 43
List[dict]: 42
BinaryIO: 42
Sequence: 42
Number: 42
EdgeData: 42
Union['int']: 42
DialogueStateTracker: 42
Monitor: 42
requests.Response: 41
Optional[dict]: 41
socket.socket: 41
'Event': 41
Qubit: 41
CommandParser: 40
model.User: 40
Tag: 40
Callable[([], None)]: 40
Union[(str, List[str])]: 40
List[Token]: 40
Node.indexable: 40
typing.Optional[int]: 40
Int: 40
Optional[Any]: 39
discord.Message: 39
SafeLineLoader: 39
Query: 39
AddNoteMethodType: 39
Repository: 39
ops.Qid: 39
http.HTTPFlow: 39
torch.LongTensor: 39
Identity: 39
Term: 39
Optional[requests.Session]: 39
Graph: 38
Dict[(str, float)]: 38
[]: 38
SQLAlchemy: 38
List[Str]: 38
date: 37
BeautifulSoup: 37
Callable[([Any], Any)]: 37
PandasDataFrame: 37
Node.number: 37
CustomBot: 37
List[Text]: 36
'Boolean': 36
Program: 36
Job: 36
Account: 35
'str': 35
'int': 35
Bus: 35
URL: 35
'Application': 35
Uint: 35
typing.Dict[(str, typing.Any)]: 35
Optional[typing.Scheduler]: 35
cli.CommandContext: 35
Real: 35
KtrPackage: 35
Post: 34
Stream: 34
Optional[cirq.Qid]: 34
Callable[([tf.Tensor], tf.Tensor)]: 34
Optional[bytes]: 33
TagContext: 33
Home: 33
MQTTFixedHeader: 33
Story: 33
ObjCInstance: 33
Curve: 33
IO[str]: 32
Callable[(..., Any)]: 32
Union[(Region, str)]: 32
Node.sequence: 32
Service: 32
Oracle: 32
AsyncObservable: 32
BinarySocketWriter: 32
BinarySocketReader: 32
ShopID: 32
Branch: 32
web.Request: 31
BaseRequest: 31
Dict[(str, Integration)]: 31
argparse._SubParsersAction: 31
protocols.CircuitDiagramInfoArgs: 31
Community: 31
Torrent: 31
aiohttp.ClientSession: 30
Red: 30
hgrepo.HgRepository: 30
Iterable[T]: 30
ET.Element: 30
SimpleConfig: 30
GameState: 30
Strings: 30
GlobalState: 30
TokenAmount: 30
Tuple[(float, float)]: 29
Mapping[(str, str)]: 29
FunctionType: 29
Order: 29
Transaction: 29
Union['bool']: 29
typing.Sequence[flow.Flow]: 29
xr.Dataset: 29
Pose: 29
SerializerCtx: 29
BarData: 29
SpacesDefinition: 29
AgentParameters: 29
FileObject: 29
KtrContext: 29
Collection[str]: 28
Settings: 28
StreamResponse: 28
List[T]: 28
Column: 28
QPainter: 28
DataSet: 28
asyncio.BaseEventLoop: 28
Optional['bool']: 28
WSGIRequest: 28
Living: 28
RepositoryMetadata: 28
Changeset: 28
Observable: 28
'projects.Project': 28
Blog.Id: 28
typing.Callable: 27
Channel: 27
datetime.date: 27
Tokenizer: 27
Form: 27
Team: 27
dm_env.TimeStep: 27
Table: 27
'_io.TextIOWrapper': 27
AnyFormattedText: 27
ModelPart: 27
'CallbackTrainer': 27
MachineChoice: 27
Provider: 27
DeviceBuilder: 27
TickData: 27
SearchObject: 27
Mode: 26
ASlibScenario: 26
'List[int]': 26
'Node': 26
hug.types.text: 26
Node.infinite: 26
Device: 26
KubeClient: 26
CPU32: 26
Record: 26
typing.Dict[(str, str)]: 26
any: 25
Dict[(Any, Any)]: 25
Deck: 25
queue.Queue: 25
Optional[datetime]: 25
Callable[([Any], bool)]: 25
Node.clock: 25
Union[('str', dict)]: 25
BrightsideMessage: 25
RequestContext: 25
S: 25
typing.AbsoluteTime: 25
Profile: 25
Union[('LevelManager', 'CompositeAgent')]: 25
user_pb2.User: 25
ServerConnectivityInfo: 25
ItemSession: 24
Command: 24
Callable[([list], None)]: 24
Union[(bytes, str)]: 24
JSON: 24
AbstractWorker: 24
Optional[Iterable[str]]: 24
ops.Gate: 24
RtlSignal: 24
Log: 24
tf.Session: 24
Iterable[Instance]: 24
'Assistant': 24
pymongo.database.Database: 24
OrderData: 24
FuncDesc: 24
ParseResult: 23
QtWidgets.QWidget: 23
Hashable: 23
Callable[([str], None)]: 23
Union[(Path, str)]: 23
K: 23
Method: 23
Match: 23
Image.Image: 23
Category: 23
iter: 23
Schema: 23
state.State: 23
E: 23
Dict[(str, Dict[(str, int)])]: 23
Direction: 23
Instance: 23
CASCManager: 23
sa_orm.Session: 23
Build: 23
PlayerID: 23
RaidenService: 23
TradeData: 23
asyncio.Future: 22
Callable[([str], str)]: 22
Dict[(str, Dict[(str, Any)])]: 22
types.Channel: 22
beam.pvalue.PCollection: 22
List[bytes]: 22
OrderedDict: 22
Dict[(str, List[str])]: 22
Parser: 22
Union[(str, None)]: 22
io.BytesIO: 22
numpy.array: 22
QColor: 22
Location: 22
AnyStr: 22
Kernel: 22
List[DialogueStateTracker]: 22
Expr: 22
ValueType: 22
'ProgressBar': 22
BaseGraph: 22
World: 22
DssDeployment: 22
Layer: 22
Optional[FileCoord]: 22
typing.Sequence[str]: 21
MachineController: 21
np.dtype: 21
List[bool]: 21
List[Dict[(str, str)]]: 21
Optional[TextIO]: 21
Configuration: 21
Execution: 21
Tuple[(str, str)]: 21
'Project': 21
RateLimitedObject: 21
List[Tuple[(int, int)]]: 21
common.Result: 21
Task: 21
qrllegacy_pb2.LegacyMessage: 21
Dict[(str, torch.LongTensor)]: 21
Member: 21
Optional[Union[(int, str)]]: 21
webdriver.Remote: 21
RelationDescription: 21
SurfaceData: 21
ObservationSpace: 21
nd_sym_type: 21
c.Project: 21
OrderID: 21
TicketID: 21
mx.sym.Symbol: 21
typing.Iterable[str]: 20
pandas.DataFrame: 20
Card: 20
BaseException: 20
PathOrStr: 20
commands.Bot: 20
SiteType: 20
Container: 20
Sequence[float]: 20
svgwrite.Drawing: 20
grids.Grid: 20
Object: 20
Optional['int']: 20
Signal: 20
RasaNLUModelConfig: 20
FlaskClient: 20
cozmo.robot.Robot: 20
MDMClient: 20
torch.optim.Optimizer: 20
PushState: 20
Sort: 20
Sequence[dict]: 20
ChangeEvent: 20
ActionSpace: 20
PersistentData: 20
Visibility: 20
Iterable[Signal]: 20
Sequence[Any]: 19
Driver: 19
AbstractEventLoop: 19
uuid.UUID: 19
Unit: 19
Optional[List[Text]]: 19
Game: 19
Pattern: 19
List[Tuple[(str, str)]]: 19
List[Card]: 19
markdown.Markdown: 19
Citation: 19
API: 19
Sequence[ops.Qid]: 19
Optional[np.ndarray]: 19
Hamiltonian: 19
Value: 19
x509.Certificate: 19
APIRequestFactory: 19
OID: 19
SomeSubstitutionsType: 19
assocparser.AssocParserConfig: 19
ContractManager: 19
List[Post]: 19
Nat: 19
ParameterGroup: 19
BunkBot: 19
Cursor: 18
web.Application: 18
model.Base: 18
AssEvent: 18
Optional[datetime.datetime]: 18
Optional[types.Channel]: 18
Scope: 18
PermissionLookup: 18
View: 18
Tuple[(str, ...)]: 18
List[List[List[str]]]: 18
steps.Step: 18
Optional['float']: 18
mitmproxy.types.Path: 18
List[argparse.ArgumentParser]: 18
TrainingData: 18
MessageContent: 18
typing.Optional[typing.List[str]]: 18
gym.Space: 18
hug.types.float_number: 18
QUrl: 18
HwtSerializerCtx: 18
DEP: 18
ir.f32: 18
ir.f64: 18
'PrinterOutputModel': 18
DatasetType: 18
LdapObject: 18
requests_mock.Mocker: 18
chkit.Deployment: 18
DeviceID: 18
EntryID: 18
lex.LexToken: 18
'Feed': 18
Printer: 18
Algo: 18
Label: 18
Optional[Exception]: 17
RedditAPI: 17
File: 17
Signature: 17
IO[bytes]: 17
EdenCheckout: 17
(int, None): 17
Generator: 17
BaseExpression: 17
RequestFactory: 17
typing.Optional[dict]: 17
List[Path]: 17
Engine: 17
Dialect: 17
Pendulum: 17
nx.Graph: 17
Asset: 17
Iterable[BaseEntity]: 17
ZWaveNode: 17
MaybeBytes: 17
Folder: 17
CompilationBuffer: 17
Component: 17
VWS: 17
DataIndexer: 17
Vind: 17
tsrc.Repo: 17
MessageRecorder: 17
ProjectData: 17
Callable[([Any], Iterable[T])]: 17
VariableIdentifier: 17
Set[VariableIdentifier]: 17
GNEnvironment: 17
BoardID: 17
ChannelID: 17
AtomicDir: 17
FsPath: 17
IntegerArguments: 17
octets: 17
tibrvQueue: 17
tibrvTransport: 17
Money: 16
URLInfo: 16
Optional[Sequence[str]]: 16
'List[str]': 16
QListWidgetItem: 16
Result: 16
_AnyPath: 16
EdenInstance: 16
ProblemTracker: 16
BitpollUser: 16
_HandlerType: 16
sqlite3.Connection: 16
network.TensorNetwork: 16
lt.LabeledTensor: 16
Sequence[T]: 16
Instruction: 16
discord.Guild: 16
QuerySet: 16
Optional[Set[str]]: 16
QCloseEvent: 16
Union['[]']: 16
MessageInterface: 16
FetchAttribute: 16
_Parts: 16
CacheKey: 16
Attrs: 16
Transition: 16
Optional: 16
credentials.Credentials: 16
ScryfallDataSet: 16
QObject: 16
Point2D: 16
Key: 16
Attendable: 16
EpochData: 16
Seq2SeqEncoder: 16
Sample: 16
Item: 16
BitVec: 16
PathType: 16
Optional[Iterable[T]]: 16
ProgramPoint: 16
ToggleEntity: 16
StoqResponse: 16
ArticleNumber: 16
CategoryID: 16
BlockID: 16
PILImage.Image: 16
JobDescriptor: 16
EventEngine: 16
MeasurementSystem: 15
Union[(concurrent.futures.Future, Future)]: 15
Optional[Dict[(Text, Any)]]: 15
proof_assistant_pb2.Theorem: 15
AnyType: 15
Section: 15
torch.device: 15
Tuple[(str, int)]: 15
HttpResponse: 15
Enum: 15
Server: 15
ir.Expr: 15
Issue: 15
Resource: 15
click.Context: 15
cirq.Circuit: 15
'TSelf': 15
TDefault: 15
common.Context: 15
DatasetLike.TYPE: 15
FilterOrBool: 15
Work: 15
Dict[(str, Dict[(str, str)])]: 15
ActionType: 15
HdlType: 15
SceneNode: 15
List[SceneNode]: 15
Callable[([A], B)]: 15
Optional[Gender]: 15
Optional[torch.Tensor]: 15
FeedForward: 15
[str, list, dict]: 15
Type[Message]: 15
SourceVector: 15
Yasen: 15
Callable[([Term], Iterable[T])]: 15
ResolveInfo: 15
L1AProcessingData: 15
Parameters: 15
SiteID: 15
'V2Config': 15
HandlerInput: 15
'projects.ProjectStep': 15
Union[(pd.DataFrame, gpd.GeoDataFrame)]: 15
AwareDT: 15
ModuleManager: 15
Contest: 15
MainEngine: 15
ListProxy: 15
asyncio.StreamReader: 14
model.Tag: 14
T.Any: 14
_T: 14
requests.Session: 14
datetime.timedelta: 14
AnnData: 14
Optional[list]: 14
ConfigSectionName: 14
Contract: 14
Interval: 14
(tuple, list): 14
NumberLike: 14
Union[(float, int)]: 14
AbstractUser: 14
Collection: 14
Tuple[(int, int, int)]: 14
sublime.Edit: 14
tf.train.Optimizer: 14
xarray.Dataset: 14
Vec2: 14
'SQLCompiler': 14
etree.Element: 14
Statement: 14
Union[(UserProfile, RemoteZulipServer)]: 14
mock.Mock: 14
Article: 14
List[tf.Operation]: 14
Dict[(str, np.ndarray)]: 14
Circuit: 14
GridQubit: 14
hug.types.number: 14
Union[(T, 'AtomicVar[T]')]: 14
praw.objects.Submission: 14
WriteStream: 14
typing.Optional[float]: 14
Ellipsoid: 14
hansel.Crumb: 14
RplintTest: 14
QStyleOptionViewItem: 14
Mapping[(str, object)]: 14
Chat: 14
TextFieldEmbedder: 14
Dict[(str, torch.Tensor)]: 14
storage.Storage: 14
FileCache: 14
['SASdata', str]: 14
client.KafkaClient: 14
configuration.Node: 14
array: 14
Automaton: 14
QVariant: 14
List[ActionType]: 14
AbstractJWKBase: 14
Dict[(object, object)]: 14
ProtocolAnalyzer: 14
tibrvMsg: 14
tibrvEvent: 14
User.Id: 14
ServiceDescriptor: 14
hints.Int: 14
BytesIO: 13
SwitchSettings: 13
Callable[(..., None)]: 13
db.Deck: 13
Callable[([str], bool)]: 13
'Client': 13
Optional[BaseException]: 13
proof_assistant_pb2.TheoremDatabase: 13
List[List[float]]: 13
types.EvalSharedModel: 13
conf.Param_tel: 13
configparser.ConfigParser: 13
Optional[Color]: 13
'TreeNode': 13
Optional[timedelta]: 13
path: 13
ThetaType: 13
ParametrizedTensorFactory: 13
(str or None): 13
Injector: 13
ir0.Expr: 13
nx.DiGraph: 13
primitive_set.PrimitiveSet: 13
Optional[List[int]]: 13
'ClauseElement': 13
QMouseEvent: 13
ObjectId: 13
Optional['[]']: 13
env_tools.PreparedEnv: 13
Optional[QObject]: 13
flow.Flow: 13
Iterable[Token]: 13
MotionEvent: 13
AppendMessage: 13
grpclib.client.Channel: 13
Color: 13
CompleteEvent: 13
ApiObject: 13
TSDBClient: 13
'CuraApplication': 13
RuleContext: 13
ParseTree: 13
Decoder: 13
Optional[LogLevel]: 13
DatasetReader: 13
StateType: 13
Activation: 13
LineString: 13
Collection[int]: 13
collections.OrderedDict: 13
ConnectionT: 13
Optional[Mapper]: 13
LyraType: 13
'Callable': 13
project_pb2.Project: 13
SignalEvent: 13
Exchange: 13
TicketCategoryID: 13
DbTopic: 13
QContextMenuEvent: 13
'Connection': 13
ABIRegistry: 13
Optional[DataFrame]: 13
CanonicalIdentifier: 13
JSONRPCClient: 13
TokenAddress: 13
ConfigObject: 13
Optional[Union[(str, Iterable[str])]]: 13
List[Expr]: 13
BoardState: 13
Certificate_model: 13
'User': 12
PulseSettings: 12
'Any': 12
Optional[List]: 12
NpMatrix: 12
Callable[([], Any)]: 12
Union[(int, Sequence[int])]: 12
core.HomeAssistant: 12
Dict[(Text, types.Channel)]: 12
Iterable[float]: 12
Function: 12
ConfigurationSpace: 12
Network: 12
Callable[([T], U)]: 12
SubCategoryDict: 12
Entry: 12
(ConfigFile or None): 12
F: 12
specs.DiscreteArray: 12
'Network': 12
'string': 12
Source: 12
Feature: 12
List[Container]: 12
Manufacturer: 12
Repo: 12
CursorObj: 12
MutableSequence[str]: 12
ParseResults: 12
Node.EvalLiteral: 12
Batch: 12
Dict[(str, tf.Tensor)]: 12
Callable[([], bool)]: 12
'cirq.Operation': 12
Predicate: 12
[int]: 12
Iterable[Node]: 12
Tracker: 12
SearchParams: 12
_Lines: 12
Union[(int, None)]: 12
Name: 12
Worker: 12
List[tf.Tensor]: 12
ForestConnection: 12
ControlFlowGraph: 12
Selector: 12
AddressState: 12
OrderType: 12
models.ServiceForm: 12
Seed: 12
InitializerApplicator: 12
Optional[RegularizerApplicator]: 12
Step: 12
TaintRecord: 12
'HueSatWheelWidget': 12
tf.summary.FileWriter: 12
samplers.Sampler: 12
Operations: 12
List[RelationDescription]: 12
Revision: 12
Dict[(Tdict, Udict)]: 12
PKey: 12
'Dict[str, Any]': 12
ConstantsFile: 12
c.Conductor: 12
base_sqliteplugin_mapping.BaseSQLitePluginMapper: 12
Retry: 12
PredicateMapping: 12
inference.TranslatorInput: 12
inference.TranslatorOutput: 12
wda.Client: 12
TokenNetworkAddress: 12
BlockChainService: 12
GameTickPacket: 12
FMP4Muxing: 12
DataTemplate: 12
Blog: 12
UserType: 12
'BuildJob': 12
'Option': 12
BlockVisibility: 12
pymysql.Connection: 12
t.List[Number]: 12
'MachineController': 11
DriverSettings: 11
Set[int]: 11
Status: 11
Future: 11
Timestamp: 11
List[Tuple]: 11
Participant: 11
pa.Table: 11
schema_pb2.Schema: 11
Site: 11
subprocess.Popen: 11
FinTSMessage: 11
Template: 11
PhaseSettings: 11
t.Optional[t.Callable]: 11
Operator: 11
Rule: 11
Sequence[Tensor]: 11
Optional[tf.Tensor]: 11
QRectF: 11
QKeyEvent: 11
pluginhandler.PluginHandler: 11
Version: 11
respond[0]: 11
document.convert_doc_id: 11
Headers: 11
Optional[Event]: 11
Sequence[Tuple[(str, str)]]: 11
Series: 11
Union[(Text, List[Text])]: 11
state.StateRegister: 11
discord.User: 11
Variable: 11
Mapper: 11
Dispatcher: 11
'ProgressBarCounter[object]': 11
message.base.Message: 11
message.Message: 11
io.IO: 11
QuantumComputer: 11
List[np.ndarray]: 11
ManagementObject: 11
MQTTVariableHeader: 11
Optional[PropertyEvaluationContext]: 11
Wad: 11
TBeautifulCapiRoot: 11
TNamespace: 11
util.Context: 11
GeneSpawner: 11
PushStack: 11
'Handler': 11
typing.Union[(str, pathlib.Path)]: 11
bytes32: 11
RDFTerm: 11
py.path.local: 11
UdoTemplate: 11
Patch: 11
Dict[(K, V)]: 11
Z3Term: 11
List[Statement]: 11
DataWarehouseSchema: 11
Vault: 11
EmailStore: 11
sublime.Window: 11
ViewLike: 11
RawTrigger: 11
Dimensions: 11
ObservationType: 11
PluginScanCommand: 11
CurrentUser: 11
RoleID: 11
Sequence[Package]: 11
AirborneProject: 11
IAirborneController: 11
VerifyKey: 11
ApartCore: 11
mx.nd.NDArray: 11
ExpressionStatement: 11
'RaidenService': 11
ChainState: 11
'environ.RemoteConnection': 11
steptest.CauldronTest: 11
tibrvftMember: 11
tibrvcmTransport: 11
xlsxwriter.workbook: 11
OrderRequest: 11
MdsMktRspMsgBodyT: 11
dbOpus: 11
asyncio.Transport: 10
types.FunctionType: 10
Type[Any]: 10
Optional[List[Any]]: 10
Union[(str, Callable)]: 10
asyncio.StreamWriter: 10
Optional[model.User]: 10
QTextEdit: 10
Gtk.Widget: 10
beam.Pipeline: 10
deephol_pb2.ProofLog: 10
types.FeaturePath: 10
_State: 10
conf.Param_geom: 10
RegexMatches: 10
discord.Server: 10
fpm.isoftype(int): 10
typing.Optional[typing.Sequence[str]]: 10
SubRequest: 10
pendulum.Pendulum: 10
Union[(None, str, State)]: 10
(dict, None): 10
Vector: 10
slice: 10
FrameType: 10
Tuple[(int, ...)]: 10
typing.List: 10
Poster: 10
SectionProxy: 10
PyledgerRequest: 10
'Type': 10
tink_pb2.Keyset: 10
List[Deck]: 10
dt: 10
Optional[Realm]: 10
List[UserProfile]: 10
Node.NumericLiteral: 10
Iterator: 10
Optional[User]: 10
ZWaveValue: 10
cirq.CircuitDiagramInfoArgs: 10
cirq.ApplyUnitaryArgs: 10
Sequence['cirq.Qid']: 10
Optional[numpy.ndarray]: 10
BrightsideConsumerConfiguration: 10
Data: 10
[[]]: 10
ecore.EPackage: 10
Fingerprint: 10
EndpointConfig: 10
'GitObject': 10
Iterable[Flag]: 10
SDF.math.Vector3: 10
Optional[BaseStyle]: 10
Scheme: 10
Serde[KT]: 10
QNetworkReply: 10
CloudRecoService: 10
ttypes.Message: 10
TemporalStateful: 10
VarsDict: 10
List[Instance]: 10
RDD: 10
TreeManager: 10
SelectorLike: 10
Optional[T]: 10
Units: 10
TransformationContext: 10
'Environment': 10
'm.StorageManager': 10
WAMPRegistry: 10
SigningKey: 10
'IOTree': 10
Popen: 10
Scheduler: 10
Callable[([B], C)]: 10
List[TT]: 10
ToolboxController: 10
MessageBus: 10
Vertex: 10
c.BaseTemplate: 10
'Point2': 10
SslClient: 10
ClientAuthConfigEnum: 10
RepositoryNameList: 10
Optional[PackageTransformer]: 10
EventBus: 10
CurseAPI: 10
GameID: 10
VersionContainer: 10
ChainID: 10
constants.C: 10
CommandGraphNode: 10
ImgurConfig: 10
Dict[(K, Any)]: 10
ProtocolLabel: 10
FieldType: 10
mz.DataPack: 10
builtins.str: 10
FileMeta: 10
StopOrder: 10
BaseEngine: 10
LTLToAutomaton: 10
Dict[(Signal, FuncDesc)]: 10
VariantsDb: 10
DBCommand: 10
'md_table.Table': 9
Union[(str, Iterable[str])]: 9
Person: 9
IO[Any]: 9
QtGui.QMouseEvent: 9
LogLevel: 9
AutoTagSettings: 9
Integration: 9
yaml.SafeLoader: 9
vol.Schema: 9
Dict[(int, int)]: 9
Tuple[int]: 9
t.Optional[str]: 9
Optional[Sequence]: 9
List[types.AddMetricsCallbackType]: 9
Sensors: 9
Rtc: 9
Dms: 9
RequestHandler: 9
ConfigOptionName: 9
Output: 9
ConfigurationFile: 9
List[State]: 9
Dict[(str, Optional[str])]: 9
Poll: 9
PathLike: 9
'BaseRunner': 9
Visitor: 9
Set: 9
dm_env.Environment: 9
specs.Array: 9
Tuple[(float, float, float)]: 9
Dict[(str, bool)]: 9
Callable[(..., T)]: 9
MetaData: 9
Spec: 9
BaseHandler: 9
Move: 9
Group: 9
Estimator: 9
List[Node]: 9
(tuple, list, np.ndarray): 9
objectid.ObjectId: 9
StrictRedis: 9
Block: 9
ServiceConfig: 9
Widget: 9
Schedule: 9
[[int]]: 9
MessageType: 9
FirmwareType: 9
Lnk: 9
Sanic: 9
VarName.TYPE: 9
Body: 9
AppContext: 9
FormattedText: 9
typing.Optional[bytes]: 9
TaskId: 9
ZoeAPI: 9
discovery.Resource: 9
CFGBlock: 9
Union[(RtlSignal, Value)]: 9
IpPackager: 9
Serde[VT]: 9
rsa.RSAPrivateKey: 9
VPP: 9
Renderer: 9
'Position': 9
AsyncObservable[T]: 9
Recognizer: 9
models.Participant: 9
vm.XenonStackVector: 9
BaseGeometry: 9
Set[ModelPart]: 9
Callable[([List[str]], List[str])]: 9
DateTime: 9
Union[(str, IO[bytes])]: 9
TBeautifulCapiParams: 9
PushTypeLibrary: 9
Population: 9
Sequence[Genome]: 9
Annotations: 9
sitecfg.SiteConfig: 9
nx.MultiDiGraph: 9
sampler_pb2.Sampler: 9
model_pb2.Sample: 9
atomizers.AtomizerBase: 9
Participation: 9
FieldDescriptor: 9
AccessToken.Payload: 9
SCTID: 9
ClockSide: 9
Subtype: 9
SMTExpr: 9
EducationGroupYear: 9
connection: 9
typing.AbsoluteOrRelativeTime: 9
Bible: 9
Opt[str]: 9
base_mapping_helper.BaseMappingHelper: 9
Purpose: 9
TopicID: 9
DataFile: 9
QDropEvent: 9
OpenBurnMotor: 9
ResultVariable: 9
CompilerException: 9
Optional[JsonType]: 9
torch.utils.data.DataLoader: 9
Union[(str, Sequence[Any], None)]: 9
TokenNetworkRegistryAddress: 9
MarketState: 9
Subreddit: 9
GenericEntropy: 9
DownloaderJob: 9
ExperimentGroup: 9
WirelessInterface: 9
GainTable: 9
DataPack: 9
Addon: 9
GrappleDocument: 9
CodeWriter: 9
EchoFormat: 9
AlgoTemplate: 9
PageModel: 9
ManagePostDetails: 9
TekkenGameState: 9
App: 8
Dict[(str, Union[(str, int)])]: 8
Union[(str, bool)]: 8
ConfigEntry: 8
types.ModuleType: 8
GPencilFrame: 8
mitmproxy.http.HTTPFlow: 8
t.Optional[t.Any]: 8
data_types.PipelineInfo: 8
Dict[(Text, Text)]: 8
types.Extracts: 8
conf.Param_atmos: 8
Optional[Mapping]: 8
'Field': 8
commands.Context: 8
Optional[pathlib.Path]: 8
mtab.MountTable: 8
AnswerableSurveyNode: 8
'Callable[[], None]': 8
Union[(List, Dict)]: 8
ENUM_T: 8
TemplateVarsType: 8
Metadata: 8
ClusterSpec: 8
t.Optional[t.Type]: 8
'BaseWorker': 8
Foo: 8
Compiler: 8
UrlDispatcher: 8
Optional[asyncio.AbstractEventLoop]: 8
typing.BinaryIO: 8
testplan.Environment: 8
Summoner: 8
CoreData: 8
Flask.test_client: 8
'Union[URL, str, Pattern]': 8
ir.Header: 8
ir.AtomicTypeLiteral: 8
ObjectFileContent: 8
Dict[(str, Union[(ir.Expr, List[ir.Expr])])]: 8
List[List[Any]]: 8
Sequence[Sequence[int]]: 8
Type[P]: 8
Actor: 8
'polynomial degree': 8
List[Service]: 8
ResultsType: 8
ControlUnitModel: 8
QStyleOptionGraphicsItem: 8
Iterable[Tuple[(str, Validator)]]: 8
ProfileFieldData: 8
Optional[UserProfile]: 8
List[ZerverFieldsT]: 8
Sequence[Sequence[str]]: 8
Iterable[X]: 8
nd.array: 8
InstructionList: 8
ServicePackage: 8
PointF: 8
value.Scalar: 8
Union[(circuits.Circuit, schedules.Schedule)]: 8
ops.GateOperation: 8
protocols.ApplyUnitaryArgs: 8
raw_types.Qid: 8
Property: 8
SystemPaastaConfig: 8
Union[(FrameDecoder, FrameProtocol)]: 8
ByteString: 8
'mitmproxy.tools.console.master.ConsoleMaster': 8
mrs.MRS: 8
CollectingDispatcher: 8
Optional[TrackerFeaturizer]: 8
List[Dict[(Text, float)]]: 8
KeyArray: 8
Optional[ResponseCode]: 8
ContentTypeHeader: 8
mara_page.response.Response: 8
Hook: 8
ConfigTree: 8
BaseContent: 8
Symbol: 8
NodeId: 8
SQLManager: 8
Manifest: 8
Worksheet: 8
usertypes.ClickTarget: 8
QPoint: 8
Param: 8
Interface: 8
Optional[RtlSignal]: 8
ReaderAdapter: 8
PacketIdVariableHeader: 8
Line2: 8
Serializer: 8
'MetadataClassMap': 8
ir.i32: 8
ir.i64: 8
Optional['QObject']: 8
'Job': 8
ContainerInterface: 8
Robot: 8
'Point2D': 8
SemanticContext: 8
List[Episode]: 8
Character: 8
List[Counter]: 8
List[Stateful]: 8
FeedDict: 8
Postprocessor: 8
Calldata: 8
DSProxyFactory: 8
DSProxy: 8
Union[(str, List[str], Tuple[(str, ...)])]: 8
DataIterator: 8
torch.IntTensor: 8
EventMsgDict: 8
pubsub.Client: 8
(PosixJoin or OsJoin): 8
'BitVec': 8
Union[(BitVec, int)]: 8
ClassifierType: 8
Gtk.Button: 8
'GLQuadRenderer': 8
'GLWidget': 8
'Path': 8
[str, bool, 'SASdata']: 8
model_pb2.Model: 8
Edition: 8
Union[(List[str], Tuple[str])]: 8
str(): 8
ObjDataType: 8
Union[(str, bytes, IO[bytes])]: 8
setup.Operations: 8
SDLInterface: 8
WsManager: 8
JobHolder: 8
Board: 8
ManifestConfig: 8
Bounds: 8
ActionId: 8
Structure: 8
Callable[([C], D)]: 8
Optional[Predicate]: 8
Union[(Pattern, str)]: 8
'SignLattice': 8
GridCell: 8
ClientConfig: 8
'List[ClientConfig]': 8
Erasmus: 8
NetworkController: 8
ToolboxView: 8
AzureConfig: 8
'job_offers._JobOffer': 8
pymongo_database.Database: 8
Union[(Unit, Point2, Point3)]: 8
[sql_query_column_model.SQLColumnModel]: 8
[sql_query_model.SQLQueryModel]: 8
Set[UserID]: 8
Iterable[Package]: 8
'Entity': 8
Hackathon: 8
List[Item]: 8
RemoteInfo: 8
PortMapping: 8
QTreeWidgetItem: 8
LocatableString: 8
typing.Dict[(object, object)]: 8
ConfigWrapper: 8
Colour: 8
Optional[Sequence[float]]: 8
SecretHash: 8
SerializedSQLiteStorage: 8
NettingChannelState: 8
Schedulable: 8
PropertyMock: 8
IngestInputStream: 8
ProgressiveTSMuxing: 8
BotIntegrationClient: 8
BaseClient: 8
ModulbankClient: 8
ModelParameters: 8
Source.Id: 8
'NodeVisitor': 8
CustomObjectsApi: 8
Union[(Sequence[Message], Message)]: 8
Annotation: 8
GrappleField: 8
'IRCBot.Bot': 8
RancherUpgradeOptions: 8
'Exchange': 8
UnaryOp: 8
BinOp: 8
Vec: 8
DriverRuleSettings: 7
PulseRuleSettings: 7
DataManager: 7
Plugin: 7
URIRef: 7
Optional[Dict[(Any, Any)]]: 7
model.TagCategory: 7
model.UserToken: 7
SaQuery: 7
SaColumn: 7
Dict[(str, bytes)]: 7
Callable[([Any], str)]: 7
List[tuple]: 7
ClientCommand: 7
'HomeAssistant': 7
Optional[datetime.timedelta]: 7
hints.Buffer: 7
DBManager: 7
seproxer.options.Options: 7
multiprocessing.Queue: 7
options.Options: 7
webdriver: 7
Mapping[(Text, Any)]: 7
metadata.Metadata: 7
conf.Param_controller: 7
requests.Request: 7
'Release': 7
Type[Model]: 7
Optional[Mode]: 7
{str: str}: 7
Union[(bool, str)]: 7
KazooClient: 7
Union[(bool, None)]: 7
TestConfig: 7
Vote: 7
Matrix.Type(): 7
UploadedFile: 7
StreamReader: 7
Callable[([T], bool)]: 7
List[Port]: 7
StrHeaderListType: 7
IOBase: 7
ir.VarReference: 7
TermT: 7
tink_pb2.KeyData: 7
Tuple[str]: 7
Forcing: 7
'type of elements (square/triangle/mixed)': 7
Iterable[Tuple[(str, str)]]: 7
List[Tuple[(str, int)]]: 7
Optional[List[ValidSqlArgumentDescription]]: 7
StressedWord: 7
Line: 7
DecisionManager: 7
Consumer: 7
Recipient: 7
Dict[(str, Iterable[Dict[(str, Any)]])]: 7
Operation: 7
Zeroconf: 7
DuelLinksInfo: 7
ClientSession: 7
NodePredicates: 7
Iterable[Dict]: 7
Manager: 7
Node.NodeSingle: 7
Handler: 7
Reader: 7
Sequence[np.ndarray]: 7
Type[generic_regularizers.OpRegularizer]: 7
Union['StringIndex']: 7
Optional['AXValue']: 7
skpy.SkypeMsg: 7
ops.OP_TREE: 7
Scalar: 7
TVector: 7
Union[(sympy.Basic, float)]: 7
_SupportsValueEquality: 7
'cirq.google.XmonDevice': 7
_OptimizerState: 7
Sequence[raw_types.Qid]: 7
'cirq.Moment': 7
Type[InstanceConfig_T]: 7
np.matrix: 7
HTTPRequest: 7
Optional[AnyStr]: 7
ActionHandler: 7
Handle: 7
'Block': 7
BrainConfiguration: 7
ValueArray: 7
PolygonLike.TYPE: 7
Type[_RT]: 7
Mailbox: 7
Union[(str, int, None)]: 7
git.Repo: 7
Converter: 7
Registry: 7
Union[(int, slice)]: 7
PrimitiveJsonType: 7
MessageSender: 7
tf.keras.Model: 7
Callable[([Any, Any], bool)]: 7
Optional[object]: 7
List[Optional[int]]: 7
astroid.For: 7
QListWidget: 7
HdlStatement: 7
Architecture: 7
ElementTree: 7
rsa.RSAPrivateKeyWithSerialization: 7
ModelProvider: 7
'SceneNode': 7
ContainerStack: 7
Dict[(str, List[int])]: 7
bs4.BeautifulSoup: 7
models.ResponsibilityPerson: 7
Integer: 7
'Model': 7
BeamSearchDecoder: 7
hug.types.smart_boolean: 7
List[torch.Tensor]: 7
T1: 7
_EventListenerType: 7
ChatSession: 7
datastore.Client: 7
QgsServerResponse: 7
PlayerConnection: 7
TopicNameType: 7
Optional[Living]: 7
PostType: 7
CodeBlock: 7
TransText: 7
Stack: 7
ExprRef: 7
'GLRenderer': 7
[str, list]: 7
Pokemon: 7
object(): 7
pytest.Item: 7
V: 7
'CompilerType': 7
RegistrationCursor: 7
List[CropObject]: 7
DgtBoard: 7
Iterator[int]: 7
BaseModel: 7
pd.Index: 7
Statechart: 7
ContactT: 7
'Term': 7
Dict[(str, L4Contract)]: 7
TableName: 7
Dict[(str, DataWarehouseSchema)]: 7
NooLiteFController: 7
typing.ScheduledPeriodicAction: 7
RelativeTime: 7
Callable[([Any], Observable)]: 7
Callable[(['Observable'], A)]: 7
List[Tf]: 7
Optional[Node]: 7
Set[Expression]: 7
rd.DrawcallDescription: 7
rd.ReplayController: 7
RuntimeContext: 7
'argparse.Namespace': 7
'Optional[str]': 7
'subprocess.Popen': 7
sublime.Settings: 7
SourceResults: 7
Posting: 7
Datasource: 7
Namespaces: 7
CharacterisationFile: 7
QAbstractItemModel: 7
ruby_pcsd.Wrapper: 7
PyMongoDataAccess: 7
_JsonDict: 7
'SegmentationObject': 7
ArchiverResponse: 7
PaymentState: 7
PaymentMethod: 7
OrderEvent: 7
Dict[(UserID, User)]: 7
io: 7
models.Group: 7
RequestType: 7
EventsSource: 7
Iterable[SomeSubstitutionsType]: 7
ClassId: 7
PGHandler: 7
IRBaseMapping: 7
SSH: 7
LossConfig: 7
Iterable[Field]: 7
'index or name': 7
Password: 7
ECDS: 7
hex: 7
List[K]: 7
QItemSelection: 7
Partner: 7
'BlobManager': 7
'KademliaPeer': 7
'PeerManager': 7
ServiceManager: 7
WirelessAccessPoint: 7
PolarisationFrame: 7
InitialConcentration: 7
hints.Str: 7
RandrCtl: 7
Chair: 7
LTS: 7
DstFormulaPropMgr: 7
dbWorkLine: 7
PostingCard: 7
ThreadModel: 7
PostModel: 7
Hardware: 7
hidapi.DeviceInfo: 7
Exp: 7
Butterfly: 6
MultiDict: 6
SwitchRuleSettings: 6
PluginType: 6
Bag: 6
Union[(str, dict)]: 6
Base: 6
db.Card: 6
T.Optional[str]: 6
History: 6
Notification: 6
URLRecord: 6
Statistics: 6
BaseResponse: 6
Iterable[dict]: 6
InboundMessageSession: 6
Coroutine: 6
Optional[Type[BaseException]]: 6
Optional[TracebackType]: 6
TxOutput: 6
Abstract_Wallet: 6
QqTag: 6
dsl.PipelineParam: 6
Protocol: 6
'Union[sqlite3.Connection, apsw.Connection]': 6
base_component.BaseComponent: 6
data_types.DriverArgs: 6
data_types.ComponentInfo: 6
Optional[example_gen_pb2.Output]: 6
List[STATE_ENC_TYPE]: 6
Iterable[Text]: 6
options.StatsOptions: 6
Evaluator: 6
'File': 6
Cache: 6
Optional[Mapping[(str, Any)]]: 6
fpm.isoftype(str): 6
Cluster: 6
Input: 6
Callable[([], str)]: 6
'List[List[int]]': 6
Union[(IPv4Address, IPv6Address)]: 6
Segment: 6
websocket_api.ActiveConnection: 6
CategoryType: 6
language: 6
(aspectbase, None): 6
Callable[([int, float], None)]: 6
CouchbaseError: 6
TargetSettings: 6
ConfigLoader: 6
bin: 6
JobQueue: 6
(Matrix, MatrixSymbol, None): 6
Vector.Type(): 6
PETSc.Vec: 6
(list_of(DirichletBC), ProductOutputDirichletBC): 6
(dict_of(str, list_of(DirichletBC)), dict_of(str, ProductOutputDirichletBC)): 6
PETSc.Mat: 6
settings.AUTH_USER_MODEL: 6
TarFile: 6
LooseCookies: 6
BaseSite: 6
ListOfPathsOrStrs: 6
testplan.Suite: 6
base.Action: 6
'AddressSynchronizer': 6
ValueRange: 6
List[Track]: 6
HttpResource: 6
ir.TemplateDefn: 6
ir.Module: 6
spanner_transaction.Transaction: 6
common_pb2.HashType: 6
tink_pb2.KeyTemplate: 6
P: 6
typing.List[bool]: 6
DisplayItem.DisplayItem: 6
'Request': 6
ImmutableMultiDict: 6
FileType: 6
Markup: 6
Iterable[Dict[(str, str)]]: 6
Tree: 6
Validator: 6
Optional[Stream]: 6
pika.connection.Connection: 6
Iterable[Sequence[str]]: 6
GitterDataT: 6
Union[(None, str)]: 6
ServiceStateChange: 6
QuoteAdapter: 6
EdgePredicates: 6
Union[(BaseEntity, Iterable[BaseEntity])]: 6
ParserElement: 6
Counter: 6
pywikibot.Site: 6
List[Article]: 6
(int, float): 6
EVENT_ACTON_TYPE: 6
Union[('int', dict)]: 6
Union['RequestId']: 6
asyncio.Queue: 6
LogicalMapping: 6
ops.QubitOrderOrList: 6
ops.Moment: 6
schedules.Schedule: 6
protocols.QasmArgs: 6
Union[(value.Duration, timedelta)]: 6
Set[GridQubit]: 6
raw_types.Gate: 6
raw_types.Operation: 6
pyinotify.Event: 6
Opcode: 6
'Double': 6
List[Minutia]: 6
ModelBase: 6
TemplateLike: 6
Match[str]: 6
QQuickItem: 6
typecheck.Type: 6
configparser.SectionProxy: 6
decimal.Decimal: 6
'Pin': 6
List[Dict[(Text, Any)]]: 6
Optional[Domain]: 6
Optional[EventChannel]: 6
Union[(Dict, List)]: 6
DictCursor: 6
KeyType: 6
xr.DataArray: 6
IMAPConfig: 6
Iterable[MaybeBytes]: 6
Sequence[memoryview]: 6
NoteId: 6
Dict[(str, User)]: 6
ENV_VARS_TYPE: 6
BlueprintSetupState: 6
Role: 6
LexicalAssignment: 6
Reference: 6
'Buffer': 6
Iterable[PropertyMapping]: 6
FileTransferToken: 6
TaskThread: 6
GetConfigFunction: 6
StartRequest: 6
typing.TextIO: 6
MetsDocument: 6
Alert: 6
Union[(Dict, Tuple)]: 6
List[Group]: 6
AbstractSession: 6
ScryfallCardCount: 6
MagicCollection: 6
'SoundSpeedLibrary': 6
Polygon: 6
{}: 6
Union[(Chrome, Firefox)]: 6
HWProcess: 6
'InstanceContainer': 6
Optional[FileHandler]: 6
'Polygon': 6
arg(type=StreamOptions): 6
KickForce: 6
TT: 6
Type[BaseDownloadService]: 6
Figure: 6
Battle: 6
Settlement: 6
Dict[(str, Iterable[Any])]: 6
QWheelEvent: 6
School: 6
StreamWrapper: 6
DSProxyCache: 6
TransitionFunction: 6
torch.nn.Module: 6
torch.FloatTensor: 6
SimilarityFunction: 6
Scenario: 6
Opt[int]: 6
Fetcher: 6
List[CauseAction]: 6
typing.IO[typing.Any]: 6
QgsProject: 6
CapiGenerator: 6
Genome: 6
Receiver: 6
Type[L]: 6
Call: 6
Union[(int, BitVec)]: 6
HistogramBase: 6
AttentionLoopState: 6
Union[(Record, int)]: 6
FeatureCollection: 6
sqlutil.Session: 6
discord.TextChannel: 6
Nonce: 6
Union[(List[Any], Tuple[Any])]: 6
Video: 6
Floats: 6
OptStrList: 6
Union[(List[str], str)]: 6
HelloRequest: 6
'venom.message.Message': 6
Prox: 6
InstrumentName: 6
Sequence[Vind]: 6
ConnectionInfo: 6
Union[(ObjectId, str)]: 6
LdapObjectClass: 6
Transport: 6
'AuthToken': 6
ModelView: 6
_User: 6
mparser.BaseNode: 6
SimplePoint2D: 6
NewSentinel2Event: 6
NewLandsat8Event: 6
WebElement: 6
TagNode: 6
Controller: 6
GameOptions: 6
SubtypingParams: 6
L4Contract: 6
Dict[(Sort, Sort)]: 6
Optional[Dict[(str, Data)]]: 6
Union[(Quantity, ndarray)]: 6
Callable[([D], E)]: 6
Optional[Comparer]: 6
Optional[Scheduler]: 6
Monster: 6
DictReader: 6
EmailHunterClient: 6
'pyramid.request.Request': 6
'Callable[[str], None]': 6
VerseRange: 6
MainPlugin: 6
LocalData: 6
Gst.Caps: 6
List[Variable]: 6
Union[(None, int, float, np.ndarray)]: 6
BoxActionSpace: 6
VisualizationParameters: 6
Tuple[(MemoryGranularity, int)]: 6
typing.List[typing.Dict[(str, typing.Any)]]: 6
Union[(click.Command, Callable)]: 6
BadgeID: 6
DbOrder: 6
DbArticle: 6
DbSeatGroup: 6
ItemID: 6
Ticket: 6
AtomicFile: 6
chkit.Container: 6
TimeMonotonic: 6
DataType: 6
IFlightController: 6
orm.Session: 6
ClassroomSource: 6
CallbackGroup: 6
'Response': 6
Union[(Mapping, Iterable)]: 6
Union[(Dict, Document)]: 6
Optional[DeviceID]: 6
SimSettings: 6
Callable[([Dict], None)]: 6
MultiMCInstance: 6
DeviceNDArray: 6
BalanceHash: 6
APIServer: 6
BlockNumber: 6
AccountManager: 6
constants.M: 6
Case: 6
DashManifest: 6
InternalChunkLength: 6
ptr8: 6
SimulatorItem: 6
tibrvftMonitor: 6
BoundObject: 6
AbstractCurrency: 6
Post.Id: 6
NewSnapshotIdentifier: 6
typing.Optional[typing.List['KademliaPeer']]: 6
ASTNode: 6
Alternatives: 6
BaseUniverse: 6
Union[(np.ndarray, float)]: 6
RsaKey: 6
'K8SManager': 6
WCS: 6
typing.Type['KineticModel']: 6
KvetchDbShard: 6
IRCUser.User: 6
'DesertBot': 6
xgb.DMatrix: 6
(int or float): 6
'TestArg1': 6
NuclearBogoliubovDrudge: 6
PostingList: 6
BanModel: 6
HahaNoUR: 6
E.Exp: 6
sqlite3.Cursor: 5
typing.Iterable: 5
Callable[([int], Tuple[(float, int)])]: 5
BaseBcpClient: 5
SwitchConfig: 5
threading.Event: 5
dt.tzinfo: 5
logging.Handler: 5
'SwitcherV2Device': 5
PipelineSpec: 5
List[Tuple[(str, ...)]]: 5
AbstractDownloadService: 5
DiffItem: 5
Optional[logging.Logger]: 5
Callable[([int], None)]: 5
IdentityController: 5
'Integer': 5
ComponentReference: 5
string: 5
t.List[str]: 5
metadata_store_pb2.ConnectionConfig: 5
types.ComponentSpec: 5
Optional[example_gen_pb2.Input]: 5
deephol_pb2.ProverOptions: 5
deephol_pb2.TacticApplication: 5
deephol_pb2.ProofNode: 5
Dict[(Text, float)]: 5
Optional[schema_pb2.Schema]: 5
Optional[Dict[(Text, Text)]]: 5
agnostic_predict.ModelAgnosticConfig: 5
_AggState: 5
List[conf.Param_dm]: 5
conf.Param_wfs: 5
Mod: 5
yaml.Node: 5
Iterable[Union[(str, int)]]: 5
List[MutationSource]: 5
MutationSource: 5
AnyCallable: 5
MessageBuilder: 5
fpm.isoftype(float): 5
HgRepository: 5
pexpect.spawn: 5
Optional[Callable[([str], None)]]: 5
'SnapshotVerifier': 5
Optional[Attribute]: 5
filesystem.FsUtil: 5
List[list]: 5
TempdirFactory: 5
ssh_client.Tunnelled: 5
List[Segment]: 5
LocalProxy: 5
plt.Axes: 5
map: 5
Timeout: 5
(str or int): 5
Optional[Sequence[int]]: 5
numpy.dtype: 5
U: 5
Optional[Mapping[(str, str)]]: 5
GenericVector: 5
GenericMatrix: 5
first.Foo: 5
'asyncio.Future[None]': 5
SimpleNamespace: 5
Iterable[Path]: 5
HTTPClient: 5
Curl: 5
snt.AbstractModule: 5
Sequence[Sequence]: 5
System: 5
GitHubClient: 5
Rating: 5
'fonction': 5
InputQAnalyzer: 5
ir.TemplateSpecialization: 5
List[ir.Stmt]: 5
ir.FunctionDefn: 5
Type[model.Model]: 5
tink_pb2.EncryptedKeyset: 5
XarrayObject: 5
pyref: 5
Sequence[Dict]: 5
Geometry.IntSize: 5
Grid: 5
'number of elements': 5
'type of basis function (std/spline)': 5
Tuple[(Type, ...)]: 5
Processor: 5
deck.Deck: 5
ControlUnit: 5
WordVocabulary: 5
TimerPayload: 5
project.Project: 5
AppConfig: 5
Mapping[(str, int)]: 5
'FieldTransformation': 5
Sprite: 5
CocosNode: 5
Union[(str, BinaryIO)]: 5
Optional[NodePredicates]: 5
Dict[(str, pd.DataFrame)]: 5
List[Gene]: 5
WikiLogger: 5
List[Target]: 5
flask.Flask: 5
(list, tuple): 5
time: 5
Shape: 5
TensorLike: 5
Space: 5
QRect: 5
Union['DOM.Rect']: 5
Optional['DOM.BackendNodeId']: 5
Union[('bool', dict)]: 5
Optional['RareStringData']: 5
Union['ServiceName']: 5
Union['CacheId']: 5
Union['AuthenticatorId']: 5
Union['Size']: 5
Union['RegistrationID']: 5
Frame: 5
Dict[(ops.Qid, int)]: 5
Tuple[(ops.Qid, ...)]: 5
cirq.Operation: 5
Dict[(raw_types.Qid, int)]: 5
Iterable[raw_types.Qid]: 5
Gate: 5
'Pauli': 5
'cirq.Gate': 5
FileSystem: 5
ServiceInstance: 5
OrderStatus: 5
io.TextIOWrapper: 5
'Consumer': 5
hug.directives.user: 5
SqlalchemySession: 5
'list': 5
'DateTime': 5
asyncio.BaseTransport: 5
DbContext: 5
SpigotData: 5
Type[Resource]: 5
mitmproxy.master.Master: 5
Env: 5
protobuf.MessageType: 5
LocalAlignment: 5
Range: 5
Optional[ComponentBuilder]: 5
Optional[Metadata]: 5
requests.models.Response: 5
Union[(str, Sequence[str])]: 5
VarNamesLike.TYPE: 5
DictLike.TYPE: 5
args.Compiler: 5
IsAlive: 5
Inventory: 5
Permission: 5
Union[(str, bytes, None)]: 5
QEvent: 5
ElementReference: 5
ClipboardData: 5
Callable[([], UIContent)]: 5
'WindowRenderInfo': 5
PiCamera: 5
typing.Optional[typing.Callable]: 5
ClientConfigDescriptor: 5
message.tasks.ReportComputedTask: 5
EnvId: 5
c.Config: 5
deque: 5
'Alert': 5
ScryCard: 5
MainWindowBase: 5
RtlSignalBase: 5
SensitivityCtx: 5
Assignment: 5
QRLNode: 5
Bar: 5
Union[(Mesh, CollectionOfMeshes)]: 5
Axis: 5
Union[(str, QUrl)]: 5
Subject: 5
Sequence[Position]: 5
Dict[(str, List[Dict[(str, Any)]])]: 5
PlayState: 5
VideoMetadata: 5
'ServiceForm': 5
TextImage: 5
Tile: 5
ttypes.CallbackQuery: 5
RewardFunction: 5
Stateful: 5
Gender: 5
'LogLevel': 5
'Vektor': 5
AbstractModel: 5
QMenu: 5
ApplicationContext: 5
Dict[(str, Iterable[Instance])]: 5
List[JsonDict]: 5
QuaRelType: 5
Dict[(str, numpy.ndarray)]: 5
Attention: 5
Predictor: 5
BiMpmMatching: 5
Callback: 5
Iterable['Node']: 5
Opt[Callable[([T1], TensorType)]]: 5
TParser.ModuleSymbolContext: 5
TParser.InterfaceSymbolContext: 5
TParser.StructSymbolContext: 5
TParser.EnumSymbolContext: 5
TParser.EnumTypeSymbolContext: 5
TParser.OperationSymbolContext: 5
TParser.SignalSymbolContext: 5
TParser.OperationParameterSymbolContext: 5
TParser.PropertySymbolContext: 5
TParser.StructFieldSymbolContext: 5
TParser.EnumMemberSymbolContext: 5
TParser.ImportSymbolContext: 5
ScraperInput: 5
WsgiStartResponseType: 5
ContainingType: 5
Union[(bool, int)]: 5
PushType: 5
Optional[Callable[([Any], Any)]]: 5
InstructionSet: 5
Literal: 5
Union[(int, Expression)]: 5
Union[(int, 'BitVec')]: 5
tk.Menu: 5
NabBot: 5
Broadcast: 5
Gdk.EventButton: 5
PropertyManager: 5
FieldsParam: 5
Union[(list, str)]: 5
Union[(int, tf.Tensor)]: 5
EvalType: 5
Optional[FillAttribs]: 5
Optional[StrokeAttribs]: 5
Callable[([float, float], Tuple[(float, float)])]: 5
TransposedUTM: 5
Union[(User, Group)]: 5
click.core.Context: 5
List[ModelPart]: 5
Polynomial: 5
LongTensor: 5
Optional[Collection[Callable]]: 5
DataLoader: 5
Union[(int, Callable)]: 5
DataBunch: 5
Optional[List[Dict]]: 5
SETUP_CONFIG: 5
'venom.rpc.Venom': 5
Type[Protocol]: 5
Empty: 5
DB: 5
UserGroup: 5
LogRecord: 5
Transitive: 5
Content: 5
Pkg: 5
socket: 5
bitarray: 5
Type[SigningKeyType]: 5
BlockUID: 5
Interpreter: 5
MacroSteps: 5
ActionContext: 5
TDMap[K]: 5
Callable[([Term], bool)]: 5
SituationId: 5
AbstractBaseUser: 5
QStandardItem: 5
Optional[typing.OnNext]: 5
Optional[typing.OnError]: 5
Optional[typing.OnCompleted]: 5
typing.Observer: 5
CakeRole: 5
'Store': 5
'UsageLattice': 5
'StringSetLattice': 5
'CharacterLattice': 5
rd.MeshFormat: 5
JudgeContext: 5
TacticNotationsParser.RepeatContext: 5
TacticNotationsParser.CurliesContext: 5
TacticNotationsParser.AtomicContext: 5
TacticNotationsParser.HoleContext: 5
TacticNotationsParser.WhitespaceContext: 5
BaseEvent: 5
AnyJoint: 5
Problem: 5
AzureTextStorage: 5
AzureAuth: 5
CobraRxn: 5
'List[Diagnostic]': 5
DatasourceController: 5
String: 5
ArticleGroup: 5
Snap: 5
TargetDescription: 5
Union[(Version, str)]: 5
TIME_FORMAT: 5
Union[(datetime.datetime, datetime.date)]: 5
RewardSpace: 5
'requests_mock._RequestObjectProxy': 5
typing.Sequence[int]: 5
typing.Union[(str, bytes)]: 5
Stock: 5
AbstractPortfolio: 5
BaseTemplate: 5
List[List[Ball]]: 5
'Config': 5
OpenSslVersionEnum: 5
Set[Type[Plugin]]: 5
List[ServerStringParsingError]: 5
ServerConnectivityError: 5
CompletedServerScan: 5
cryptography.x509.Certificate: 5
'path to SAM/BAM file': 5
base_sql_query_execution.BaseSQLQueryExecution: 5
DeadlineAwareRouter: 5
TicketBundleID: 5
DbCategory: 5
MatchID: 5
SnippetID: 5
Snippet: 5
PermissionID: 5
SubjectID: 5
TicketEvent: 5
grids.LedCanvas: 5
grids.KeyState: 5
VirtualBaseController: 5
SchedulerStatus: 5
ClassroomsUseCase: 5
BaseEventHandler: 5
'LaunchContext': 5
QoSProfile: 5
model.Item: 5
ItemType: 5
Pod: 5
enums.EncodingType: 5
LocalDevice: 5
IncomingMessage: 5
TypeStr: 5
'IRCluster': 5
IRResource: 5
IRHTTPMappingGroup: 5
CrashReporterVC: 5
CurseFile: 5
List[Game]: 5
AnalysedGame: 5
Priv: 5
'DebianVersion': 5
Conflict: 5
AstRoot: 5
RoutingMode: 5
Optional[Address]: 5
AddressHex: 5
Locksroot: 5
List[App]: 5
DecodedEvent: 5
NotificationPriority: 5
Relation: 5
Machine: 5
BaseAgent: 5
Vector3: 5
CommandGraphCall: 5
Optional[CacheValue]: 5
urllib.request.OpenerDirector: 5
List[E]: 5
List[chr]: 5
SurveyJob: 5
mwxml.Page: 5
mwxml.Dump: 5
array.array: 5
TibrvMsg: 5
tibrvftAction: 5
engine.base.Engine: 5
py._path.local.LocalPath: 5
[Object]: 5
Entity.Id: 5
SourceType.Key: 5
List(Locale): 5
Collaborator.Id: 5
Collaborator: 5
BlogPost.Id: 5
BlogCollaboratorGroup.Id: 5
pykube.objects.PersistentVolume: 5
Claim: 5
List[Account]: 5
ElmPackage: 5
RawSourceLine: 5
Reward: 5
WeightedState: 5
Conjunction: 5
PublicEndpoint: 5
'BaseSpecification': 5
'workers.app.task': 5
'OperationRun': 5
'Experiment': 5
Union[(Visibility, BlockVisibility)]: 5
Gtk.Application: 5
ctypes.c_uint: 5
smartdb.SmartDatabaseClient: 5
numbers.Number: 5
ndr.IngestMessage: 5
List[Setting]: 5
Logging.Log: 5
LinkedSourceAuthentication: 5
dd.DataFrame: 5
Offset: 5
SubscribeRequest: 5
CancelRequest: 5
ReducedBCSDrudge: 5
ProgramDescription: 5
moderngl.Program: 5
Union[(ZipCode, str)]: 5
PostDetails: 5
Guild: 4
'md_client.Client': 4
FrozenObj: 4
BallDevice: 4
HoldRuleSettings: 4
DriverConfig: 4
HoldSettings: 4
TokenType: 4
model.Comment: 4
Window: 4
SearchQuery: 4
T.Callable: 4
T.List[str]: 4
AssRenderer: 4
PluginBase: 4
T.Sequence[str]: 4
LinkScanResult: 4
Dict[(int, Tag)]: 4
QtCore.QObject: 4
QtGui.QWheelEvent: 4
DataEventCallback: 4
Optional[Client]: 4
yaml.nodes.MappingNode: 4
concurrent.futures.Future: 4
Union[(Coroutine, Generator)]: 4
IpBan: 4
DeviceRegistry: 4
FilePathOrBuffer: 4
Callable[(..., _T)]: 4
'Union[futures.Future[_T], Future[_T]]': 4
Optional[Union[(float, datetime.timedelta)]]: 4
'GcsUri': 4
BaseOp: 4
seproxer_enums.ResultLevel: 4
selenium.webdriver.remote.webdriver: 4
Builder: 4
Optional[Type]: 4
Optional[Type[base_executor.BaseExecutor]]: 4
Optional[Context]: 4
presto_config_pb2.PrestoConnConfig: 4
List[Artifact]: 4
pa.Array: 4
anomalies_pb2.Anomalies: 4
Optional[PipelineOptions]: 4
Optional[List[types.FeatureName]]: 4
ACCTYPE: 4
tf.estimator.Estimator: 4
List[types.Extracts]: 4
List[conf.Param_wfs]: 4
Union[(str, datetime)]: 4
Protein: 4
'Wrapper.Wrapper': 4
Iterable[Point]: 4
CaptureFixture: 4
Optional[Entity]: 4
ProcessID: 4
typing.Mapping[(str, str)]: 4
typing.Callable[(..., typing.Any)]: 4
SubscriptioAdmin: 4
Subscription: 4
Vowel: 4
FetchRosterResponse: 4
SensorConfig: 4
furl: 4
List[Interval]: 4
GPSType: 4
ruamel.yaml.nodes.Node: 4
JSON_TYPE: 4
FinTsClient: 4
ComfoConnectBridge: 4
HomeAssistantView: 4
SmartBulb: 4
SmartPlug: 4
List[SmartDevice]: 4
Optional[Template]: 4
Optional[dt_util.dt.time]: 4
_SlotsType: 4
IPAddress: 4
(set, tuple, list, frozenset): 4
'sy.workers.AbstractWorker': 4
{str, str}: 4
DeclarativeMeta: 4
TimeSeries: 4
Function.Type(): 4
(list_of(DirichletBC), ProductOutputDirichletBC, dict_of(str, list_of(DirichletBC)), dict_of(str, ProductOutputDirichletBC), None): 4
Product: 4
FunctionSpace: 4
BaseProtocol: 4
Submission: 4
'Package': 4
ConnectionKey: 4
StrOrURL: 4
wrappers.MessageType: 4
GitHubContext: 4
Suite: 4
TestCase: 4
List[RateLimiter]: 4
Capture: 4
'ClientResponse': 4
'Dict': 4
complex: 4
Union[(str, Iterable[int])]: 4
'SimpleConfig': 4
VersionedSeed: 4
Union[(str, Exception)]: 4
Currency: 4
Union[(float, 'XY')]: 4
'XY': 4
Track: 4
Type[Note]: 4
Note: 4
'HttpMessage': 4
MsmsSpectrum: 4
Module: 4
FuncType: 4
FeatureProvider: 4
ir.VariadicTypeExpansion: 4
ir.MatchExpr: 4
List[Union[(ir.StaticAssert, ir.ConstantDef, ir.Typedef)]]: 4
List[Dict[(str, int)]]: 4
UnificationStrategy[TermT]: 4
List[Type]: 4
Mapping[(str, float)]: 4
Optional[Type[Any]]: 4
network_components.Edge: 4
io.TextIOBase: 4
aead.Aead: 4
tink_pb2.Keyset.Key: 4
FTP: 4
Album: 4
FLOATS_TYPE: 4
Union[(float, np.ndarray)]: 4
DefaultDialect: 4
Union[(Session, Engine, Connection)]: 4
Union[(SQLCompiler, Engine, Dialect)]: 4
Optional[NlpDefinition]: 4
PullRequest: 4
List[Competition]: 4
'c.CPU': 4
RNNMorphPredictor: 4
ResolutionSet: 4
SessionPayload: 4
Gtk.Window: 4
Dict[(str, List[Any])]: 4
discord.Reaction: 4
Tuple[(int, str)]: 4
RemoteZulipServer: 4
List[Dict[(str, Union[(int, str, List[int])])]]: 4
Optional[Validator]: 4
Callable[([Dict[(str, Any)]], None)]: 4
Mapping[(Any, Any)]: 4
Optional[ParamsT]: 4
'ClientDescriptor': 4
ZerverFieldsT: 4
Dict[(int, Set[int])]: 4
AddedUsersT: 4
Optional[TaxBenefitSystem]: 4
'Table': 4
'Schema': 4
DvEntity: 4
IndependentEntity: 4
pygame.Surface: 4
RNNArchitecture: 4
Mapping[(str, Iterable[str])]: 4
MaybeNodeList: 4
List[BaseEntity]: 4
Lemma: 4
'EFBMsg': 4
ModuleID: 4
'EFBChannel': 4
Router: 4
AbstractTaskType: 4
AbstractTask: 4
MyFlatPages: 4
[str, int]: 4
ArrayLike: 4
Mapping[(str, states.StateDefinition)]: 4
Weeabot: 4
WorkspaceManager: 4
QA: 4
QSize: 4
QFont: 4
Union['SnapshotId']: 4
Union['StorageId']: 4
Union[('StorageId', dict)]: 4
Alignment: 4
Sequence[Tuple[(int, int)]]: 4
Optional[Union[(TeeCapture, IO[str])]]: 4
'Check': 4
Set['Check']: 4
study.ParamResolver: 4
Sequence[LogicalIndex]: 4
devices.Device: 4
Union[(float, sympy.Symbol)]: 4
_STATE: 4
Union[(Awaitable, asyncio.Future, Coroutine)]: 4
Tuple[(raw_types.Qid, ...)]: 4
Union[(raw_types.Gate, 'LinearCombinationOfGates')]: 4
Union[(complex, float, int)]: 4
'ApplyChannelArgs': 4
'cirq.Circuit': 4
'Iterable[cirq.Moment]': 4
BlackBox: 4
Sequence[V1Pod]: 4
UrlSpec: 4
ServiceInfo: 4
SynapseToolsConfig: 4
MarketOrder: 4
binary80: 4
ConnectionType: 4
RsvBits: 4
Interpretation: 4
'StringList': 4
TopicPartition: 4
threading.Lock: 4
Callable[([BrightsideMessage], Request)]: 4
mitmproxy.tcp.TCPFlow: 4
mitmproxy.websocket.WebSocketFlow: 4
typing.Set[str]: 4
Choice: 4
Binding: 4
log.LogEntry: 4
FrameBuffer: 4
Ed25519PublicPoint: 4
TTFont: 4
IR: 4
Dict[(int, Any)]: 4
OrientedRead: 4
Optional['Metadata']: 4
List[Event]: 4
Union[(argparse.ArgumentParser, argparse._ActionsContainer)]: 4
Optional['EndpointConfig']: 4
Callable[([UserMessage], Awaitable[None])]: 4
AttrCategory: 4
Translator: 4
TypeName: 4
KeyValueStore.Compression: 4
mediawords.db.DatabaseHandler: 4
Union[(dict, list)]: 4
Type['AbstractJob']: 4
SearchKey: 4
LoginProtocol: 4
MessageBody: 4
args.Platform: 4
Done: 4
LatLng: 4
GuildOrGuildID: 4
PeriodicTask: 4
BaseUser: 4
'Document': 4
Membership: 4
Locale: 4
Union[(None, int, str)]: 4
Callable[([str, str], None)]: 4
SourceContext: 4
MethodDefinition: 4
Callable[([_Sender], None)]: 4
AnyContainer: 4
'Window': 4
Filter: 4
StyleAndTextTuples: 4
simpy.Environment: 4
Iterable[JsonPropertyMapping]: 4
ApiCallParams: 4
Dict[(NodeId, Path)]: 4
Optional[Union[(int, float)]]: 4
Optional[ClientOptions]: 4
ZoeBaseScheduler: 4
Scale: 4
lxml.etree: 4
List[Scope]: 4
TypeMap: 4
PauliTerm: 4
typing.Sequence[pdoc.doc.Module]: 4
'MagicCollection': 4
ScryfallDataIndex: 4
BaseConverter: 4
NodeNG: 4
QWebFrame: 4
Sequence[bytes]: 4
List[Tuple[(float, float)]]: 4
List[VPoint]: 4
Sequence[VPoint]: 4
'Hls': 4
ResourceContext: 4
List[Union[(Handshaked, StreamNode)]]: 4
TraitObject: 4
Substitution: 4
JobOrID: 4
KT: 4
EventType: 4
base.Core: 4
Union[(dns.message.Message, bytes)]: 4
x509.CertificateSigningRequest: 4
List[Seqdiff]: 4
Parameter: 4
DiffractionProblem: 4
Plane: 4
'TelegramClient': 4
'PrinterOutputDevice': 4
'ExtruderOutputModel': 4
DefinitionContainerInterface: 4
Optional['PropertyEvaluationContext']: 4
Optional[Callable[([bool, str], None)]]: 4
CloudClusterResponse: 4
'ContainerInterface': 4
Union[('Version', str)]: 4
ast.AST: 4
Union[(Pose, Position)]: 4
DictProxy: 4
Maybe: 4
Either: 4
Chunks: 4
ParserRuleContext: 4
ColorStr: 4
discord.Role: 4
(dict or list): 4
Iterable[List]: 4
EmbeddedSequence: 4
Optional[Postprocessor]: 4
SupportedDecoder: 4
List[Vocabulary]: 4
AttentionLoopStateTA: 4
QSettings: 4
'str 0xNNNNNNNN': 4
Optional[FileType]: 4
Optional[MimeType]: 4
Optional[TLDType]: 4
Optional[Tuple[(int, int)]]: 4
PluginDocument: 4
ApplicationLike: 4
List[TextInstance]: 4
Callable[([Layer, str, str], Layer)]: 4
SequenceField: 4
Dict[(str, List[TableColumn])]: 4
List[List[ProductionRule]]: 4
Optional[Tuple[(torch.Tensor, torch.Tensor)]]: 4
Union[(int, List[int])]: 4
Embedding: 4
Seq2VecEncoder: 4
Set[Object]: 4
Union[(int, List)]: 4
Collection[EighthRoom]: 4
'WdomElement': 4
List[FreeStyleProject]: 4
FreeStyleProject: 4
List[StringParameterDefinition]: 4
DiskSpaceMonitorDescriptorDiskSpace: 4
ExtensionClassImpl: 4
FreeStyleBuild: 4
acts_scraper.ActItem: 4
'py.path.local': 4
'db_manager.db_plugins.DBConnector': 4
MapCSSParser.StylesheetContext: 4
MapCSSParser.Rule_Context: 4
MapCSSParser.SelectorContext: 4
MapCSSParser.Link_selectorContext: 4
MapCSSParser.Simple_selectorContext: 4
MapCSSParser.PredicateContext: 4
MapCSSParser.Predicate_simpleContext: 4
MapCSSParser.DeclarationContext: 4
MapCSSParser.Single_valueContext: 4
MapCSSParser.Declaration_value_functionContext: 4
MapCSSParser.BooleanExpressionContext: 4
MapCSSParser.ValueExpressionContext: 4
MapCSSParser.RegexExpressionContext: 4
MapCSSParser.FunctionExpressionContext: 4
MapCSSParser.PrimaryExpressionContext: 4
TClass: 4
TInstantiation: 4
VirtualFileSystem: 4
Atom: 4
Union[(str, Sequence)]: 4
TextT: 4
Gtk.Assistant: 4
cairo.Context: 4
Gtk.Grid: 4
Histogram1D: 4
'PathLike': 4
List[EvalType]: 4
NGramDicts: 4
Executor: 4
datetime.time: 4
InMemoryAsRepository: 4
STUD: 4
local_stores.SqliteStore: 4
Calculation: 4
dict(): 4
LinestringEdge: 4
typing.List[sample_observers_lib.SampleObserver]: 4
'corpuses.Corpus': 4
model_pb2.TrainingOptions: 4
ast.Str: 4
Param('GPU to run on', str): 4
Collection[float]: 4
OptRange: 4
Tensors: 4
Collection[nn.Module]: 4
models.BaseTask: 4
models.CallList: 4
'game.Game': 4
'venom.Message': 4
MetaDict: 4
Type['venom.protocol.Protocol']: 4
ServiceID: 4
Snapshot: 4
TradeSpecifier: 4
Corpus: 4
Edit: 4
Union[(SourceCode, Tokens)]: 4
TreeUrlDispatcher: 4
DockerClient: 4
'sketch.Sketch': 4
Vulnerabilities: 4
Cohort: 4
Faker: 4
SpatialImage: 4
Iterable[SpatialImage]: 4
mparser.ForeachClauseNode: 4
mparser.IfClauseNode: 4
mparser.IfNode: 4
SlackClient: 4
ExportPath: 4
'Rectangle': 4
'u.Ultros': 4
'base_connector.BaseConnector': 4
PageObjectContainer: 4
Set[T]: 4
tsrc.git.Status: 4
ReposGetter: 4
FileIO: 4
[str, str]: 4
MetaEvent: 4
_S: 4
L4ContractConstructorInterface: 4
TupleLinkedList: 4
Optional[EventType]: 4
Dict[(Str, Str)]: 4
List[Structure]: 4
FileManager: 4
Optional[ndarray]: 4
Union[(ndarray, Quantity)]: 4
Txn: 4
SnowflakeID: 4
IceCream: 4
operator: 4
TraceNode: 4
Dict[(str, Event)]: 4
typing.Scheduler: 4
VirtualTimeScheduler: 4
Callable[([E], F)]: 4
Optional[TState]: 4
AbsoluteOrRelativeTime: 4
Optional[typing.RelativeTime]: 4
Tdict: 4
_FuncT: 4
'ProductState': 4
'Stack': 4
InputMixin: 4
'APRONState': 4
'LivenessLattice': 4
rd.TextureSave: 4
rd.MeshDataStage: 4
POINTER(c_uint8): 4
c_uint32: 4
TacticNotationsParser.AlternativeContext: 4
TacticNotationsParser.AltsepContext: 4
TacticNotationsParser.PipeContext: 4
TacticNotationsParser.EscapedContext: 4
PaladinSpell: 4
'Character': 4
Zone: 4
FileSystemProvider: 4
Workflow: 4
Type[BaseEvent]: 4
List[Table]: 4
ClimateDevice: 4
typing.Union[(str, int)]: 4
fedora_messaging.api.Message: 4
LanguageId: 4
bs4.Tag: 4
AzureObjectStorage: 4
PyzMessage: 4
'Optional[Any]': 4
'Optional[Dict]': 4
'Optional[Callable[[Session], None]]': 4
'Callable[[Session], None]': 4
'Optional[int]': 4
'ClientConfig': 4
LoggingMode: 4
Entries: 4
Optional[Meta]: 4
Directive: 4
SourceSpec: 4
Rules: 4
FrozenSet[str]: 4
RestClient: 4
Optional[PathType]: 4
TrainingController: 4
NetworkView: 4
FormObject: 4
Sketch: 4
Cfg: 4
Lock: 4
GenericDAO: 4
MongoMetricsDAO: 4
VideoSegment: 4
'VersionInfo': 4
'Saver': 4
RewardType: 4
MiddlewareScheme: 4
EmbedderScheme: 4
gluon.HybridBlock: 4
InputEmbedderParameters: 4
pymongo.collection.Collection: 4
scoring.ScoringProject: 4
geo_pb2.FrenchCity: 4
typing.Optional[pymongo.database.Database]: 4
Setting: 4
BasePort: 4
Union[(str, BaseTemplate)]: 4
Union[('Units', List['Point2'], Set['Point2'])]: 4
Union[(UnitTypeId, Set[UnitTypeId], List[UnitTypeId], Dict[(UnitTypeId, Any)])]: 4
Optional[List[Register]]: 4
Optional[Iterable]: 4
TimeRange: 4
OrderNumber: 4
Sequence[Ticket]: 4
OrderEmailData: 4
ImageType: 4
DbPosting: 4
Sequence[DbSeat]: 4
TourneyCategory: 4
DbItem: 4
Sequence[DateTimeRange]: 4
RepositoryManager: 4
Optional[Callable[([str], str)]]: 4
XmlElement: 4
chkit.Service: 4
'UIComponent': 4
DatasetDoc: 4
MainWindow: 4
AirborneProjectController: 4
Optional[QWidget]: 4
DataSetController: 4
IDataSetController: 4
RelatedLoadType: 4
SignedTransaction: 4
UserSource: 4
EventsUseCase: 4
PWE_ASP_Meta_DataParser.Attr_defContext: 4
PWE_ASP_Meta_DataParser.Temporal_decContext: 4
PWE_ASP_Meta_DataParser.Graphviz_stylingContext: 4
PWE_ASP_Meta_DataParser.Graphviz_graph_decContext: 4
PWE_ASP_Meta_DataParser.Graphviz_node_decContext: 4
PWE_ASP_Meta_DataParser.Graphviz_edge_decContext: 4
DLV_OutParser.PwContext: 4
DLV_OutParser.Opt_modelContext: 4
DLV_OutParser.True_partContext: 4
DLV_OutParser.Undefined_partContext: 4
DLV_OutParser.AtomContext: 4
Hack: 4
(float, float): 4
DatabaseConnection: 4
models.Repository: 4
Chunk: 4
'Chunk': 4
ontol.Ontology: 4
StoreTransaction: 4
PrivateKey: 4
SecretKey: 4
OpenBurnPropellant: 4
'ColorScheme': 4
aiormq.Channel: 4
typing.Optional[apitypes.Tab]: 4
sftp_client: 4
Wallet: 4
'IRTLSContext': 4
'IRResource': 4
Parameter.REQUIRED: 4
Type[R]: 4
'IRBaseMapping': 4
'MainView': 4
Gtk.MessageType: 4
OutputHandler: 4
List[mx.io.DataDesc]: 4
FluentState: 4
CGRect: 4
ChatMember: 4
CurseProject: 4
SyntaxError: 4
torch.optim: 4
RetsHttpClient: 4
EngineQueue: 4
EngineQueueID: 4
List[GameID]: 4
Username: 4
Union[(bool, Sequence[bool])]: 4
Sequence[Sequence[float]]: 4
VersionContainer[Any]: 4
IDType: 4
I: 4
ExternalMount: 4
Optional[Translator]: 4
Error: 4
SecretRegistry: 4
AdditionalHash: 4
BlockTimeout: 4
List[APIServer]: 4
music21.stream.Stream: 4
Hit: 4
NecroUser: 4
RaceInfo: 4
ServerNetworkClient: 4
RenderingManager: 4
ProjectStep: 4
InteractiveCommandClient: 4
PubkeyRing: 4
ECSS: 4
SpectrogramType: 4
SmoothManifest: 4
Encoding: 4
Period: 4
HlsManifest: 4
WatermarkFilter: 4
Iterable[mwxml.Page]: 4
ProjectManager: 4
QGraphicsSceneDragDropEvent: 4
QDragEnterEvent: 4
tibrvDispatcher: 4
Tags: 4
typing.Sequence[typing.Union[('Section', 'Link')]]: 4
lekvar.Type: 4
EOI: 4
BlogSeo.Id: 4
Authenticated.Id: 4
MetaData.Id: 4
BlogMedia: 4
QBlogPostUnpublished: 4
Type[kube.Resource]: 4
'TreeRoutingTable': 4
ElmProject: 4
ParsingStateStack: 4
ChunkStore: 4
(list or range): 4
'Cluster': 4
'ActivityLog': 4
Optional[List[Tuple[(str, str)]]]: 4
SkyCoord: 4
PointingTable: 4
get_user_model(): 4
Gio.File: 4
Gtk.TextView: 4
Gio.MenuModel: 4
ctypes.POINTER(ctypes.c_uint): 4
ctypes.c_int: 4
xlclass.XLportHandle: 4
Optional[can.typechecking.CanFilters]: 4
LocalizedValue: 4
typing.Dict[(str, xr.Dataset)]: 4
typing.Union[(mz.DataPack, mz.DataGenerator)]: 4
ParameterType: 4
TaskProxy: 4
KvetchData: 4
Tuple[(Union[(int, slice)], Union[(int, slice)])]: 4
account.Account: 4
chrono.date.Date: 4
RGB: 4
'IRCServer.Server': 4
EventManager.Events: 4
typing.Callable[([], None)]: 4
CALLBACK_TYPE: 4
OPT_STR: 4
Union[(List[str], None)]: 4
IRCResponse: 4
zmessage.Message: 4
typing.Optional[SessionRequest]: 4
is_chan: 4
BarManager: 4
BaseGateway: 4
'Interval': 4
HandlerType: 4
FileLike: 4
Dict[(str, Union[(dict, list, str)])]: 4
RunProgramBlock: 4
SolverInterface: 4
Dict[(str, Signal)]: 4
List[DiscoveredNode]: 4
ToonData: 4
Union[(ZipCode, int, str)]: 4
PalmMessage: 4
ReportModel: 4
ColorType: 4
HasTraits: 4
BaseCommand: 4
yaml.Dumper: 4
Remote: 4
FlowRoot: 4
ssl.SSLContext: 3
HTTPRequestContext: 3
typing.List[tuple]: 3
Kyoukai: 3
'Role': 3
MonitoredSwitchChange: 3
Optional[HoldSettings]: 3
'Message': 3
Callable[([str], Any)]: 3
Course: 3
threading.Semaphore: 3
BatchProducer: 3
model.Post: 3
criteria.BaseCriterion: 3
Type[Exception]: 3
QtGui.QPaintEvent: 3
List[_ThirdPartyTag]: 3
PluginFunctionCategory: 3
InterfaceRegistry: 3
Optional[IO]: 3
jinja2.TemplateError: 3
Optional['Context']: 3
Optional[Tuple[str]]: 3
Callable[([core.HomeAssistant, str], Awaitable[None])]: 3
Optional[dt.tzinfo]: 3
Union[(dt.date, dt.datetime, None)]: 3
Union[(list, NodeListClass)]: 3
Union[(str, NodeStrClass)]: 3
DICT_T: 3
Optional[logging.LogRecord]: 3
Awaitable[_T]: 3
Union[(T, Sequence[T])]: 3
DeviceEntry: 3
aiohttp.ClientResponse: 3
CloudPreferences: 3
web.Response: 3
UnitSystem: 3
Callable[([], Dict)]: 3
Union[(datetime.date, datetime.datetime, None)]: 3
EntityRegistry: 3
Iterable[State]: 3
Union[(State, Iterable[State])]: 3
typing.HomeAssistantType: 3
NotificationService: 3
Union[(str, IO)]: 3
'Future[_T]': 3
httputil.HTTPServerRequest: 3
socket.AddressFamily: 3
Union[(int, _Selectable)]: 3
'GcpProject': 3
Union[(V1SecretKeySelector, Dict[(str, Any)])]: 3
List[ParameterMeta]: 3
kfp.PipelineParam: 3
Dict[(str, KFModel)]: 3
Union[(datetime, date)]: 3
AnnotationForm: 3
List[Unit]: 3
t.Iterable[str]: 3
t.Optional[t.List[Result]]: 3
docker.client.DockerClient: 3
pydev_docker.options.ContainerOptions: 3
pipeline.Pipeline: 3
tfx_pipeline.Pipeline: 3
example_gen_pb2.Input: 3
beam.PTransform: 3
tfma.EvalResult: 3
Dict[(Text, Channel)]: 3
List[proof_assistant_pb2.ProverTask]: 3
NodeID: 3
types.FeatureName: 3
statistics_pb2.DatasetFeatureStatisticsList: 3
PartitionedStatsFn: 3
Optional[List[types.AddMetricsCallbackType]]: 3
Optional[SingleSliceSpec]: 3
Optional[Callable[([Dict[(Text, Union[(Text, float)])]], None)]]: 3
List[Tuple[(slicer.SliceKeyType, Dict[(Text, Any)])]]: 3
slicer.SingleSliceSpec: 3
Callable[([], export.EvalInputReceiverType)]: 3
Optional[Callable[([], tf.estimator.export.ServingInputReceiver)]]: 3
List[beam.CombineFn]: 3
types.MetricVariablesType: 3
query_types.FPL: 3
List[Tuple[(int, float)]]: 3
query_types.QueryFPL: 3
List[_State]: 3
types.DictOfFetchedTensorValues: 3
Optional[List[bytes]]: 3
Telescope: 3
conf.Param_dm: 3
carmaWrap_context: 3
SQLSession: 3
Type['File']: 3
Type['Game']: 3
Dumper: 3
Loader: 3
ActiveDriverResult: 3
ValidatorListDict: 3
Union[str]: 3
'BaseConfig': 3
Type['BaseConfig']: 3
classmethod: 3
MessageSentEvent: 3
'column.Column': 3
_SeriesValidation: 3
ConfidentialityImpact: 3
IntegrityImpact: 3
AvailabilityImpact: 3
Authentication: 3
RemediationLevel: 3
ReportConfidence: 3
typing.Iterable[int]: 3
Iterable[Tuple[(str, int)]]: 3
ZipFile: 3
MonkeyPatch: 3
EdenClient: 3
edenclient.EdenFS: 3
_BinaryIO: 3
ProblemBase: 3
WatchmanCheckInfo: 3
SubscriptionForm: 3
LoginResponse: 3
RegisterResponse: 3
ConnectionFailedResponse: 3
SignUpError: 3
Set[Node]: 3
onprem.OnpremCluster: 3
ssh_client.SshClient: 3
Reader[Input]: 3
md.Trajectory: 3
oechem.OEMol: 3
List[ListNode]: 3
'Callable[[int], None]': 3
List[Point]: 3
PictureStorage: 3
Optional[U]: 3
Sequence[State]: 3
Optional[Intent]: 3
typed_dict(str, int, DEFAULT_TIMEOUT): 3
LINK_CONTEXT: 3
scoped_session: 3
RestHelper: 3
t.Any: 3
t.Optional[t.Dict[(str, str)]]: 3
torch.jit.ScriptModule: 3
range: 3
t.Optional[pathlib.Path]: 3
ConfigHelper: 3
CollectionOfChanges: 3
numpy.datetime64: 3
ParametrizedProblem: 3
tuple_of(Number): 3
list_of(Number): 3
Indexed: 3
ListTensor: 3
Division: 3
tuple_of(IndexBase): 3
Challenge: 3
AbstractTool: 3
RawRequestMessage: 3
AbstractStreamWriter: 3
'asyncio.Task[None]': 3
_T_OnChunkSent: 3
Union[(str, pathlib.Path)]: 3
Callable[([str, str, Path], str)]: 3
testplan.TestCase: 3
Union[(Queue, int, str)]: 3
arrow.Arrow: 3
'CassiopeiaPipelineObject': 3
'Map': 3
NFA: 3
Iterator[Tuple[(str, str)]]: 3
Users: 3
GridDict: 3
'Union[URL, str]': 3
Iterator[Dict[(str, str)]]: 3
RawHeaderListType: 3
'HttpResource': 3
HttpMessage: 3
typing.MutableSequence: 3
List[XTFHeaderType]: 3
List[List[List[Path]]]: 3
Optional[asyncio.BaseEventLoop]: 3
Union[(ir.StaticAssert, ir.ConstantDef, ir.Typedef)]: 3
ir.StaticAssert: 3
ir.Typedef: 3
List[ir.TemplateBodyElement]: 3
ir.TemplateBodyElement: 3
ir.NotExpr: 3
ir.TemplateInstantiation: 3
ir.PointerTypeExpr: 3
ir.ReferenceTypeExpr: 3
ir.RvalueReferenceTypeExpr: 3
ir.ConstTypeExpr: 3
ir.ArrayTypeExpr: 3
ir.FunctionTypeExpr: 3
ir.FunctionCall: 3
ir.Assignment: 3
ir.UnpackingAssignment: 3
ir.ReturnStmt: 3
ir.IfStmt: 3
ir.RaiseStmt: 3
ir0.TemplateDefn: 3
ir0.Header: 3
List[Set[str]]: 3
_Expr: 3
List[ir0.Expr]: 3
List['Type']: 3
common.RuntimeConfig: 3
text_measurer.TextMeasurer: 3
Iterable[condition.Condition]: 3
field.Field: 3
Iterable[Iterable[Any]]: 3
Optional[auth_credentials.Credentials]: 3
Optional[spanner.Pool]: 3
api.SpannerConnection: 3
classifier.MatrixProductState: 3
tensornetwork.Node: 3
tensornetwork.Edge: 3
nsrect: 3
nspoint: 3
Selectable: 3
'UndoableCommand': 3
typing.List[typing.Dict]: 3
DataItem: 3
List[Vec2]: 3
np.datetime64: 3
'reynolds number': 3
'number of elements along edge': 3
Iterator[Any]: 3
TYPE_WSGI_APP: 3
TYPE_WSGI_ENVIRON: 3
TYPE_WSGI_START_RESPONSE: 3
SqlASession: 3
'Engine': 3
JsonObjectType: 3
Union[(Connection, Engine)]: 3
match.Match: 3
Optional[Tuple[(str, str)]]: 3
List[Tuple[(int, str)]]: 3
ResultSet: 3
DeckType: 3
List[Archetype]: 3
Sequence[Person]: 3
ps.Person: 3
StressPredictor: 3
GrammemeVectorizer: 3
DataHandle: 3
typing.Grammar: 3
List[Tree]: 3
Iterable[Mapping[(str, Any)]]: 3
ViewFuncT: 3
Callable[([Any], None)]: 3
Callable[(..., ReturnT)]: 3
FuncT: 3
Callable[([], int)]: 3
LinkAttributes: 3
TaxBenefitSystem: 3
Union[(Column, str)]: 3
'IndependentEntity': 3
(int, int): 3
Quote: 3
MarketAdapter: 3
Option: 3
LearnerBase: 3
Sequence[Partition]: 3
EdgeTuple: 3
Iterable['Pipeline']: 3
Optional[EdgePredicates]: 3
Optional[Mapping[(str, Pattern)]]: 3
Optional[Mapping[(str, Set[str])]]: 3
Optional[Manager]: 3
Iterable[Tuple[(int, str)]]: 3
Optional[LocationDict]: 3
EdgeIterator: 3
Union[(datetime, str)]: 3
pybel.Manager: 3
Mapping[(str, List[str])]: 3
Iterable[BELGraph]: 3
Collection[BaseEntity]: 3
Page: 3
RePage: 3
Volume: 3
LemmaChapter: 3
Node.Base10Single: 3
Node.NodeClass: 3
'EFBStatus': 3
'EFBChat': 3
EFBStatus: 3
EFBMsg: 3
Target: 3
List[List[bytes]]: 3
AbstractAnswer: 3
Type[U]: 3
UserState: 3
Fund: 3
sym.Variable: 3
states.StateDefinition: 3
List[Dimension]: 3
tf.data.Dataset: 3
typing.Type[T]: 3
Grade: 3
AllNoteHandleResults: 3
ChangelogItem: 3
ConfigSpace.ConfigurationSpace: 3
Union['Runtime.ScriptId']: 3
Union[('str', dict, None)]: 3
Optional['LayerId']: 3
Union['LayerId']: 3
Union['Page.FrameId']: 3
Union[('Page.FrameId', dict)]: 3
Union['Runtime.RemoteObjectId']: 3
Optional['RareBooleanData']: 3
Optional['[Rectangle]']: 3
Union['[Header]']: 3
Union['DatabaseId']: 3
Union[('float', dict, None)]: 3
Union['SecurityState']: 3
Union['Runtime.RemoteObject']: 3
Strand: 3
List[Strand]: 3
Axes: 3
LogicalGates: 3
Union[(str, sympy.Symbol)]: 3
Type[np.number]: 3
Union[(int, np.ndarray)]: 3
Union[('cirq.Circuit', 'cirq.Schedule')]: 3
Sequence[ops.Operation]: 3
circuits.CircuitDag: 3
Iterable[ops.Operation]: 3
Layers: 3
Iterable[ops.Qid]: 3
BoxDrawCharacterSet: 3
linalg.KakDecomposition: 3
Iterable[GridQubit]: 3
v2.program_pb2.Operation: 3
List[GridQubit]: 3
sweeps.Sweep: 3
ScheduledOperation: 3
List[ops.Operation]: 3
_circuit.Circuit: 3
'pauli_string.PauliString': 3
OP_TREE: 3
Optional[CircuitDiagramInfoArgs]: 3
Union[(cirq.TrialResult, cirq.SimulationTrialResult, numpy.ndarray)]: 3
QuadraticHamiltonian: 3
Optional[Property]: 3
Dict[(str, object)]: 3
List[Property]: 3
VMF: 3
Optional[BranchDictV2]: 3
MesosTaskParameters: 3
EVENT: 3
SqlalchemyContext: 3
number: 3
boolean: 3
PluginStore: 3
Optional[List[Extension]]: 3
'List': 3
Type['Payload']: 3
Loop: 3
IntVar: 3
Callable[([Connection, BrightsideConsumerConfiguration, logging.Logger], BrightsideConsumer)]: 3
Callable[([str], CommandProcessor)]: 3
MySqlModel: 3
QJSValue: 3
QtWidgets.QComboBox: 3
Port: 3
mitmproxy.proxy.protocol.Layer: 3
typing.Sequence[mitmproxy.flow.Flow]: 3
typing.Type[master.Master]: 3
typing.Callable[([options.Options], argparse.ArgumentParser)]: 3
typing.Callable[([typing.Any], dict)]: 3
'GridEditor': 3
typing.Iterable[flow.Flow]: 3
mitmproxy.types.CutSpec: 3
TSerializable: 3
typing.Mapping[(TTextType, TTextType)]: 3
TTextType: 3
Union[(Model, SurfacePoints)]: 3
Union[(Model, Orientations)]: 3
Union[(Model, Series)]: 3
Union[(Model, Surfaces)]: 3
Union[(Model, Faults)]: 3
CashdeskSession: 3
Ed25519PrivateKey: 3
HidDevice: 3
'usb1.USBDevice': 3
ScopeMap: 3
ScopingSemanticStructure: 3
AssemblyGraph: 3
Optional[EndpointConfig]: 3
List[Message]: 3
'Doc': 3
'Metadata': 3
Optional[tf.Session]: 3
Tuple[(int, Optional[int])]: 3
Sentence: 3
Question: 3
BrainServiceConfiguration: 3
ElectrumWindow: 3
ComponentTypeName: 3
parsing.BasicParser: 3
MatchValue: 3
PyExtractorArguments: 3
Compression: 3
Union[(bytes, str, None)]: 3
Sequence[Command]: 3
TimeRangeLike.TYPE: 3
gpd.GeoDataFrame: 3
PointLike.TYPE: 3
ThreadPoolExecutor: 3
Awaitable[RetT]: 3
SelectedMailbox: 3
MessageT: 3
SessionFlags: 3
MailboxSet: 3
FilterSet: 3
Type[_UDT]: 3
Iterable[bytes]: 3
ExtensionOptions: 3
_Headers: 3
List[Command]: 3
MatchType: 3
StreamWriter: 3
Condition: 3
BaseCache: 3
Age: 3
SDF.math.Quaternion: 3
PopulationConfig: 3
BModel: 3
Optional[Iterable[int]]: 3
gym.Env: 3
Optional[Session]: 3
Union[(Document, Folder)]: 3
FileStorage: 3
Tuple[(str, str, str)]: 3
StringField: 3
WikiPage: 3
WhooshIndexService: 3
Tuple[()]: 3
BufferedReader: 3
Optional[Permission]: 3
BridgeObjects: 3
Url: 3
List[Symbol]: 3
ThingDefinition: 3
LexicalAccess: 3
LexicalCast: 3
'MethodDefinition': 3
'CompilationBuffer': 3
SearchDirection: 3
'Container': 3
AnyDimension: 3
_CompiledGrammar: 3
Iterable[_T]: 3
'Filter': 3
Iterable[Filter]: 3
UrlOrStr: 3
Union[(dict, None)]: 3
Callable[([tf.Tensor, tf.Tensor], tf.Tensor)]: 3
Union[(tf.Tensor, Dict[(str, tf.Tensor)])]: 3
SmartContractsInterface: 3
typing.Optional[datetime.timedelta]: 3
'TestConfigBase': 3
ConcentFileRequest: 3
cryptography.ECCx: 3
MethodType: 3
TaskDefinition: 3
Prerequisites: 3
DockerImage: 3
BasicModel: 3
MemSize: 3
Optional[List[List[float]]]: 3
'Point': 3
abstract_loop: 3
Iterable[Seq]: 3
Seq: 3
ni_abc.ServerHost: 3
SharedSessionUser: 3
Union[(float, str)]: 3
PauliSum: 3
RandomState: 3
Union[(PauliTerm, PauliSum)]: 3
pdoc.doc.Module: 3
Dict[(bytes, bytes)]: 3
ComponentConfig: 3
List[ScryCard]: 3
Iterable[Dict[(str, Any)]]: 3
Type['SerializationDialect']: 3
astroid.Module: 3
'signal.Signals': 3
Collection['IClosable']: 3
FileDescriptor: 3
Dict[(int, Tuple[(int, int)])]: 3
webelem.JsValueType: 3
'char[]': 3
Sequence[Node]: 3
AlgorithmType: 3
Sequence[Sequence[Tuple[(float, float)]]]: 3
List[VLink]: 3
Callable[([], Sequence[Tuple[(int, int)]])]: 3
QDir: 3
Union[(int, bool)]: 3
PointTableWidget: 3
OpDefinition: 3
List[HdlStatement]: 3
SignalItem: 3
IfContainer: 3
SwitchContainer: 3
'IfContainer': 3
TransTmpl: 3
List['OutNodeInfo']: 3
List[OutNodeInfo]: 3
'pandas.DataFrame': 3
substitution.Substitution: 3
Optional[set]: 3
ChainManager: 3
WebSocketCommonProtocol: 3
ConnectVariableHeader: 3
PluginManager: 3
Goal: 3
mapping.Point: 3
Mission: 3
commands.Command: 3
List[Feature]: 3
Sequence[LinearPotentialFlowResult]: 3
GenericGallery: 3
ir.SubRoutine: 3
'GlobalStack': 3
Dict[(int, object)]: 3
CuraContainerStack: 3
LocalClusterOutputDevice: 3
CloudPrintJobResponse: 3
Union[(str, IO[str])]: 3
inspect.Signature: 3
'QtApplication': 3
MeshData: 3
SettingDefinition: 3
'SettingInstance': 3
Callable[([Any], float)]: 3
(str or Wikicode): 3
Area: 3
Optional[List[Player]]: 3
STAChangeCommand: 3
OrderField: 3
Callable[([Callable], Any)]: 3
'IO': 3
Callable[([Any], IO)]: 3
Callable[([T1], AsyncObservable[T2])]: 3
AsyncObservable[T2]: 3
AsyncObserver: 3
ParseTreeListener: 3
List[models.Episode]: 3
'ResponsibilityPerson': 3
IApplication: 3
BattleTurn: 3
BattleUnit: 3
WorldUnit: 3
Organization: 3
CharacterMessage: 3
u.deg: 3
List[Objective]: 3
ObjectiveWeight: 3
RecurrentEncoder: 3
List[Tuple[(str, str, Callable)]]: 3
SeriesConfig: 3
SequenceRegressor: 3
MP: 3
SpatialStateful: 3
QResizeEvent: 3
Union[(tuple, list)]: 3
TextIOWrapper: 3
Complex: 3
'Punkt': 3
'Strecke': 3
Developer: 3
AbstractDataset: 3
cx.Batch: 3
Optional[AbstractDataset]: 3
TimeProfile: 3
MasternodeConfig: 3
HwSessionInfo: 3
Pos: 3
t.text: 3
Extractor: 3
Receipt: 3
List[Address]: 3
List[Tuple[int]]: 3
MatchTuple: 3
List[DataArray]: 3
Dict[(str, List[List[int]])]: 3
List[StateType]: 3
List[Set]: 3
PackedSequence: 3
Union[(str, BertModel)]: 3
BeamSearch: 3
List[TensorDict]: 3
InputSampler: 3
List[Callback]: 3
List[List[NlvrLanguage]]: 3
Union[(str, List)]: 3
Opt[float]: 3
ArrayType: 3
Opt[Callable[([T2], TensorType)]]: 3
Tuple[type]: 3
TParser.DocumentSymbolContext: 3
TParser.HeaderSymbolContext: 3
TParser.DefinitionSymbolContext: 3
TParser.InterfaceMemberSymbolContext: 3
TParser.OperationModifierSymbolContext: 3
TParser.PropertyModifierSymbolContext: 3
TParser.TagSymbolContext: 3
TParser.TagAttributeSymbolContext: 3
TParser.TypeSymbolContext: 3
TParser.ComplexTypeSymbolContext: 3
TParser.PrimitiveTypeSymbolContext: 3
TParser.ListTypeSymbolContext: 3
TParser.MapTypeSymbolContext: 3
TParser.ModelTypeSymbolContext: 3
TParser.IntSymbolContext: 3
FixtureRequest: 3
PathSpec: 3
SystemPlatform: 3
Breadcrumb: 3
QgsMapLayer: 3
MapCSSParser.Class_selectorContext: 3
MapCSSParser.Pseudo_class_selectorContext: 3
MapCSSParser.Zoom_selectorContext: 3
MapCSSParser.QuotedContext: 3
MapCSSParser.OsmtagContext: 3
Iterable[AnkiDeck]: 3
'!mul2': 3
TTemplate: 3
TEnumeration: 3
Callable[([Sample], None)]: 3
Instrument: 3
Listener: 3
PushInterpreter: 3
SearchConfiguration: 3
Pool: 3
pyshark.packet.packet.Packet: 3
Trigram: 3
BaseMedia: 3
Type[BaseState]: 3
BaseCalldata: 3
DynLoader: 3
'__builtins__.bool': 3
t.Optional[int]: 3
Type[C]: 3
database.SiteDb: 3
SiteDb: 3
List[QuestionText]: 3
DeviceIdentifier: 3
Geometry: 3
Gtk.ComboBox: 3
Gtk.GLArea: 3
AbstractHistogram1D: 3
Union[(Callable, str)]: 3
Episode: 3
List[Callable[([tf.Tensor], tf.Tensor)]]: 3
traffic.ProductId: 3
model.IpAddress: 3
HTTPStatus: 3
LocatorStations: 3
BigchainDB: 3
geojson.feature.FeatureCollection: 3
MemoryConfigStore: 3
Methods: 3
corpus_pb2.Corpus: 3
encoded.EncodedContentFiles: 3
preprocessed.PreprocessedContentFile: 3
atomizers.AsciiCharacterAtomizer: 3
dockerutil.BazelPy3Image: 3
typing.Dict[(typing.Union[(str, pathlib.Path)], str)]: 3
typing.Iterator[typing.Any]: 3
discord.Client: 3
VoteList: 3
address: 3
num: 3
Comments: 3
Param('Learning rate', float): 3
Param('Number of epochs', int): 3
Param('Batch size', int): 3
Optional[nn.Module]: 3
Optional[NormType]: 3
PathLikeOrBinaryStream: 3
Optional[Collection[int]]: 3
Tokens: 3
Optional[Tensor]: 3
pytest.fixture: 3
feedparser.FeedParserDict: 3
Artist: 3
Variant: 3
Optional[Value]: 3
Union[(Type[_VT], str)]: 3
_KT: 3
Union[(str, type)]: 3
FieldMask: 3
Instruments: 3
Alias: 3
SourceFileInRepository: 3
SourceSummary: 3
'Queue': 3
Failure: 3
Union[(str, Dict[(str, Any)])]: 3
TicketDict: 3
SwaggerRouter: 3
Celery: 3
Dict[(str, tldap.fields.Field)]: 3
'Q': 3
ImmutableDictEntity: 3
IRI: 3
(str, object): 3
Callable[([Dict], bool)]: 3
Union[(None, Dict)]: 3
SequenceMatcher: 3
Embed: 3
VoiceChannel: 3
aptbranch.Config: 3
LiveClass: 3
Webinar: 3
Iterable[np.ndarray]: 3
_APIClient: 3
'Version': 3
typing.Union[(str, typing.List[str])]: 3
mparser.ArrayNode: 3
mparser.DictNode: 3
mparser.MethodNode: 3
mparser.FunctionNode: 3
MongoClient: 3
GithubClient: 3
TriggearConfig: 3
EveAllianceInfo: 3
EveCorporationInfo: 3
'SimpleExecutor': 3
CodedArticle: 3
forms.Form: 3
'base_network.BaseNetwork': 3
'base_server.BaseServer': 3
Union[(str, Event)]: 3
Dict[(str, Set[str])]: 3
SDLInput: 3
SessionDetails: 3
PurePath: 3
Union[(str, datetime, Number)]: 3
events.JobExecutionEvent: 3
RepoConfig: 3
RepositoryInfo: 3
'ManifestConfig': 3
Cable: 3
typing.List[Filter]: 3
AddressFamily: 3
nbxmpp.Iq: 3
'widgetmanager.WidgetManager': 3
'function': 3
(bool, bool): 3
QDomDocument: 3
GeneratedProtocolMessageType: 3
Awaitable: 3
LoggingTaskWrapper: 3
PhonemeList: 3
StrOrInt: 3
TDMap: 3
StateVarDec: 3
IdentifierData: 3
Bundle: 3
QModelIndex(): 3
'ScheduledAction': 3
Union[(Observable, Future)]: 3
typing.Union[(bool, str)]: 3
CakePath: 3
typing.IO: 3
Set[TSet]: 3
Union[(Tuple[(int, int, int, int, int, int, int, int, int)], struct_time)]: 3
'HopOpaqueField': 3
rd.ResourceId: 3
ValidatorMixin: 3
ProblemProvider: 3
ProgrammingLanguage: 3
TacticNotationsParser.AltblockContext: 3
Locktime: 3
Files: 3
BaseLoader: 3
engine.Connection: 3
URI: 3
typing.Union[(int, str)]: 3
onlinejudge.type.CredentialsProvider: 3
BaseInputLoader: 3
Callable[([str], AzureTextStorage)]: 3
AzureObjectsStorage: 3
Iterable[Union[(dict, str)]]: 3
CobraMet: 3
'sublime.View': 3
'Tuple[int, int]': 3
_SubParsersAction: 3
PredictionInput: 3
AbstractSet[str]: 3
Network.Change: 3
ActivationsController: 3
ActivationEngine: 3
ActivationEngine.Change: 3
Toolbox: 3
DatasourceView: 3
canvas.Canvas: 3
PropertyWidget: 3
Prop: 3
Sequence[L1AProcessingData]: 3
Sequence[SurfaceData]: 3
CompanionInfo: 3
CompanionManager: 3
FaceRecognitionRectangle: 3
session.Storage: 3
corpora.Dictionary: 3
number_array: 3
_Optional[int]: 3
'Context': 3
'PlainTextualNotification': 3
Saver: 3
ExplorationParameters: 3
EnvironmentParameters: 3
ScheduleParameters: 3
PresetValidationParameters: 3
TaskParameters: 3
LevelSelection: 3
tf.ConfigProto: 3
mx.Context: 3
List[Transition]: 3
typing.Optional[typing.TextIO]: 3
fhs.JobSeeker: 3
typing.Union[(str, typing.TextIO)]: 3
_Response: 3
use_case_pb2.UseCase: 3
typing.Optional[typing.Dict[(str, typing.Any)]]: 3
typing.List[_T]: 3
typing.Iterable[user_pb2.User]: 3
(pd.DataFrame or pd.Series): 3
(bool or None): 3
ScopedValue: 3
multiprocessing.Barrier: 3
Optional[c.Project]: 3
Application[P]: 3
RevListRoots: 3
Union[(int, float, 'Point2')]: 3
Callable[([int], bool)]: 3
'Units': 3
equelParser.EquelContext: 3
equelParser.VerbContext: 3
equelParser.GenericContext: 3
equelParser.ShortcutContext: 3
equelParser.SearchExprContext: 3
equelParser.QueryStringContext: 3
equelParser.FirstSearchExprContext: 3
equelParser.QueryStringExprContext: 3
equelParser.FilterExprContext: 3
equelParser.AggregationExprContext: 3
equelParser.PostprocExprContext: 3
equelParser.OutputExprContext: 3
equelParser.ShortcutExprContext: 3
equelParser.KVParamContext: 3
equelParser.UnnamedValueContext: 3
equelParser.UnnamedListContext: 3
equelParser.SingleParamContext: 3
equelParser.NameContext: 3
equelParser.SimpleUQValueContext: 3
equelParser.SimpleSQValueContext: 3
equelParser.SimpleDQValueContext: 3
equelParser.NestedSearchContext: 3
equelParser.ValueListContext: 3
Dict[(Vertex, int)]: 3
JoinableQueue: 3
cryptography.x509.Name: 3
base_sqlite_plugin_path_helper.BaseSQLitePluginPathHelper: 3
base_database_information.BaseDatabaseInformation: 3
sql_query_column_model.SQLColumnModel: 3
[sql_query_column_model_timestamp.SQLColumnModelTimestamp]: 3
Dict[(str, DataFrame)]: 3
Optional[TimeRange]: 3
Optional[Exchange]: 3
DbSetting: 3
Set[PartyID]: 3
Set[ShopID]: 3
Set[ArticleNumber]: 3
OrderEventData: 3
Set[ImageType]: 3
Topic: 3
OrgaTeamID: 3
SeatID: 3
DbTicketBundle: 3
Sequence[DbTicket]: 3
DbUser: 3
UserEventData: 3
SnippetType: 3
SnippetVersionID: 3
ConsentSubjectID: 3
TicketEventData: 3
SubscriptionState: 3
Dtype: 3
PackageMaker: 3
FlightController: 3
QLabel: 3
LineUpdate: 3
Optional[OID]: 3
'Clocked': 3
sa.Table: 3
Classroom: 3
PWE_ASP_Meta_DataParser.Graphviz_style_optionContext: 3
DLV_OutParser.Pws_outContext: 3
DLV_OutParser.Optimization_outContext: 3
DLV_OutParser.Wf_mode_outContext: 3
DLV_OutParser.Atom_setContext: 3
DLV_OutParser.Atom_textContext: 3
DLV_OutParser.DlvOutputContext: 3
ClingoParser.Fact_textContext: 3
Union[(str, io.TextIOBase)]: 3
'Parser': 3
List[Substitution]: 3
MsgType: 3
Nomination: 3
JudgeInfo: 3
Optional[FolderWidgetItem]: 3
Callable[(..., RT)]: 3
Updater: 3
models.Revision: 3
FailMode: 3
ICNode: 3
OrganizationID: 3
PublicKey: 3
CoreConfig: 3
LocalManifest: 3
LocalFileManifest: 3
WorkspaceEntry: 3
Tuple[WorkspaceEntry]: 3
QDataStream: 3
SSHClient: 3
'Resource': 3
IRCluster: 3
ServiceType: 3
AnalysisResult: 3
mx.context.Context: 3
mx.initializer.Initializer: 3
inference.Translator: 3
Optional[tuple]: 3
HandlerContext: 3
PurgeableResource: 3
'test::Item[]': 3
networkx.Graph: 3
SinglesData: 3
Optional[Option]: 3
GraphQL: 3
Enumeration: 3
List[Entity]: 3
u2.Session: 3
cusparseHandle_t: 3
scipy.sparse.csr_matrix: 3
ThrottlingOptions: 3
ResponseLike: 3
AuthID: 3
List[AnalysedGame]: 3
Prediction: 3
VersionContainer[DebianVersion]: 3
SubnetQueue: 3
Iterable[Element]: 3
models.Model: 3
RawConfigParser: 3
FunctionSignatureNode: 3
StateChange: 3
BalanceProofSignedState: 3
InitiatorAddress: 3
TargetAddress: 3
PaymentAmount: 3
Secret: 3
BlockExpiration: 3
List[RouteState]: 3
FeeAmount: 3
'BlockChainService': 3
Signer: 3
List[TokenAddress]: 3
Iterator[Port]: 3
ABI: 3
typing.TokenAddress: 3
MarketHistory: 3
List[AbstractTrade]: 3
List[control.TransferFunction]: 3
MatchInfo: 3
(int or None): 3
Optional[Number]: 3
Iterable[Task]: 3
Iterable[Job]: 3
QtNetwork.QTcpSocket: 3
PlayerConfiguration: 3
Exercise: 3
SetupManager: 3
GameInterface: 3
projects.Project: 3
'environ.Response': 3
typing.Union[(str, None)]: 3
List[SelectorType]: 3
CommandInterface: 3
command_graph.CommandGraphNode: 3
EntityId: 3
MultilingualText: 3
PandasObj: 3
wpull.pipeline.item.URLRecord: 3
SpectrogramFrequencyScale: 3
Slave: 3
Dict[(str, Optional[Torrent])]: 3
List[StatRecord]: 3
List[OriginalFile]: 3
Auction: 3
IQArray: 3
FieldType.Function: 3
QUndoStack: 3
ProtocolAnalyzerContainer: 3
QPointF: 3
QTransform: 3
TibrvQueue: 3
TibrvEvent: 3
TibrvFtMember: 3
TibrvTx: 3
Vimba: 3
[BoundObject]: 3
keras.models.Model: 3
Type[AbstractSettings]: 3
StandardScaler: 3
LanguageEntity.Id: 3
TestFixture: 3
QSource: 3
QPostUnpublished: 3
QPostPublished: 3
QPost: 3
BlogType.Id: 3
QBlogPost: 3
QMetaData: 3
ArithUint256: 3
typing.Optional[typing.Callable[(['AbstractBlob'], asyncio.Task)]]: 3
'KademliaProtocol': 3
typing.Optional[typing.List[typing.Tuple[(str, int)]]]: 3
SymbolNode: 3
FullFormParser.ProgContext: 3
FullFormParser.NumberContext: 3
FullFormParser.StringLiteralContext: 3
FullFormParser.SymbolLiteralContext: 3
FullFormParser.HeadExpressionContext: 3
FullFormParser.ExpressionListedContext: 3
FullFormParser.ContextNameContext: 3
FullFormParser.SimpleContextContext: 3
FullFormParser.CompoundContextContext: 3
FullFormParser.NumberBaseNContext: 3
FullFormParser.NumberBaseTenContext: 3
FullFormParser.NumberLiteralPrecisionContext: 3
FullFormParser.NumberLiteralExponentContext: 3
_Task: 3
DogbotContext: 3
elm_project.ProjectConfig: 3
ProjectConfig: 3
ChunkLine: 3
MDPSpec: 3
DataMeta: 3
Union[(List, str)]: 3
RefModel: 3
'RedisEphemeralTokens': 3
Optional[ConfigType]: 3
permissions.BasePermission: 3
List[Visibility]: 3
Mapping[(Hashable, Any)]: 3
IPRoute: 3
Optional[Gtk.Widget]: 3
typing.List[typing.List[object]]: 3
typing.Union[(typing.Dict[(str, typing.List[str])], np.ndarray)]: 3
typing.Union[(typing.Dict[(str, np.ndarray)], np.ndarray)]: 3
typing.Union[(np.ndarray, xr.DataArray)]: 3
typing.Dict[(str, typing.Union[(xr.DataArray, xr.Dataset)])]: 3
typing.Union[(str, Path)]: 3
'matchzoo.auto.Tuner': 3
'mz.DataPack': 3
GdbController: 3
Timedelta: 3
Callable[(..., pd.DataFrame)]: 3
SubFuncContext: 3
ndr.NdrConfigurationFiles: 3
List[IndexDefinition]: 3
PentContextfulObject: 3
GraphQLSchema: 3
PentContext: 3
GrappleTypeDef: 3
ModuleHandler: 3
hints.Command: 3
hints.Bytes: 3
RRset: 3
PathCollector: 3
ReplayBuffer: 3
typing.Union[(Source, DiskSource)]: 3
typing.Union[(str, typing.IO)]: 3
ArgumentsType: 3
'psi4.core.Molecule': 3
'psi4.core.Wavefunction': 3
PhantomJS: 3
CodeforcesPackage: 3
IntSequenceFormat: 3
ContextDict: 3
MqttSettings: 3
_array: 3
'TableIterator': 3
Dict[(str, bayesianpy.model.Distribution)]: 3
ContractData: 3
PositionData: 3
CTORATstpRspInfoField: 3
cmd2.plugin.PostparsingData: 3
'TestArg2': 3
TestArg1: 3
TA: 3
dbAuthor: 3
VectorValues: 3
BogoliubovDrudge: 3
ResourceDescription: 3
Kanmusu: 3
RestResource: 3
VerifyingClient: 3
LEDType: 3
CheckSource: 3
Verdict: 3
Callable[([object], bool)]: 3
entity.Line: 3
entity.PolyLine: 3
Stm: 3
List[Stm.Stm]: 3
Stm.FunDecl: 3
Stm.Block: 3
Exp.Ident: 3
BunkUser: 3
IHeater: 3
'GameState': 3
typing.Callable[([], typing.Any)]: 2
'BaseOperator': 2
'md_column.Column': 2
'ColumnChange': 2
Callable[([], Tuple[(str, str)])]: 2
Jokusoramame: 2
'dt_channel.Channel': 2
'Member': 2
'WidgetGuild': 2
typing.Union[(int, Permissions)]: 2
IPCOpcode: 2
EventContext: 2
openHAB: 2
FrozenDiff: 2
Tuple[(int, int, int, int)]: 2
'Mode': 2
Switch: 2
QueuedEvent: 2
Callable[([int], Tuple[(float, int, bool)])]: 2
'FastHardwarePlatform': 2
'BallDevice': 2
IncomingBall: 2
WebSocket: 2
List[Plugin]: 2
PluginAPI: 2
PSP: 2
ApplicationSettings: 2
Weather: 2
Union[(Literal, URIRef)]: 2
DBConnection: 2
ActiveMonitorManager: 2
AppInstance: 2
BagMessage: 2
Input[Bag]: 2
Dict[(int, Dict[(str, Any)])]: 2
ScheduledTask: 2
aiohttp.ClientWebSocketResponse: 2
web.WebSocketResponse: 2
Optional[model.UserToken]: 2
List[model.Tag]: 2
LruCacheItem: 2
BaseCriterion: 2
Callable[([model.Base], rest.Response)]: 2
Callable[([str], Number)]: 2
db.Tag: 2
List[db.Tag]: 2
List[db.Card]: 2
T.List[AssEvent]: 2
T.List[T.Any]: 2
Safety: 2
TagSource: 2
concurrent.futures.Executor: 2
Optional[Api]: 2
T.List[Monitor]: 2
ResourcesUpdater: 2
QtGui.QResizeEvent: 2
Optional[Resolver]: 2
ResolveResult: 2
Optional[URLProperties]: 2
Optional[URLData]: 2
WorkItemT: 2
ItemQueue: 2
Sequence[ItemTask]: 2
ItemSource: 2
Optional[LinkType]: 2
HTTPProxySession: 2
WpullPlugin: 2
Callable[(..., Request)]: 2
Optional[CookieJarWrapper]: 2
PokemonStats: 2
CALLABLE_T: 2
Dict[(str, Iterable[str])]: 2
PackageWrapper: 2
Optional[Union[(str, List)]]: 2
Union[(Iterable, Any)]: 2
Union[(None, str, bytes)]: 2
Iterator[Tuple[(socket.AddressFamily, Tuple)]]: 2
Deferred: 2
APIFactory: 2
Gdk.Event: 2
'GcsUri[text/csv]': 2
'GcpRegion': 2
Callable[([Mapping[(str, Any)]], Any)]: 2
Sequence[Parameter]: 2
V1Volume: 2
TypeMeta: 2
(str or List[str]): 2
List[dsl.PipelineParam]: 2
SeldonPayload: 2
'Union[str, List[str]]': 2
Flock: 2
Spirograph: 2
10: 2
t.Optional[seproxer_enums.ResultLevel]: 2
seproxer.proxy.Runner: 2
PageValidatorResults: 2
docker.models.containers.Container: 2
Script: 2
sphinx.application.Sphinx: 2
Optional[example_gen_pb2.CustomConfig]: 2
Mapping[(Text, Sequence[Any])]: 2
Optional[Type[Artifact]]: 2
Dict[(Text, List[Artifact])]: 2
predictions.Predictions: 2
deephol_pb2.TacticsInfo: 2
predictions.ProofState: 2
predictions.EmbProofState: 2
List[THM_EMB_TYPE]: 2
BATCH_THM_EMB_TYPE: 2
Dict[(Text, int)]: 2
options_pb2.ConvertorOptions: 2
Dict[(Text, tf.Tensor)]: 2
types.Example: 2
types.ExampleBatch: 2
statistics_pb2.DatasetFeatureStatistics: 2
Optional[statistics_pb2.DatasetFeatureStatisticsList]: 2
absltest.TestCase: 2
List[Tuple[(float, float, float)]]: 2
Union[(types.FeatureName, types.FeaturePath)]: 2
Optional[List[stats_generator.StatsGenerator]]: 2
Optional[types.FeatureName]: 2
Optional[List[types.SliceFunction]]: 2
Set[types.FeaturePath]: 2
Iterable[ACCTYPE]: 2
_PartialNLStats: 2
_PartialTimeStats: 2
_PartialImageStats: 2
Dict[(types.FeaturePath, Dict[(Text, np.ndarray)])]: 2
_PartitionedStatisticsAnalyzerAccumulator: 2
CrossFeatureStatsGeneratorAccumulator: 2
List[top_k_uniques_stats_generator.FeatureValueCount]: 2
Dict[(types.FeaturePath, List[top_k_uniques_stats_generator.FeatureValueCount])]: 2
Dict[(types.FeaturePath, _ValueCounts)]: 2
Optional[Callable[(..., Any)]]: 2
Optional[Union[(Text, Dict[(Text, Text)])]]: 2
types.ModelLoader: 2
Tuple[(slicer.SliceKeyType, Dict[(Text, Any)])]: 2
model_eval_lib.EvalResult: 2
model_eval_lib.EvalResults: 2
Dict[(Text, Dict[(Text, Text)])]: 2
Dict[(Text, types.ValueWithTDistribution)]: 2
Iterable[Union[(float, int)]]: 2
tf.compat.v1.SparseTensorValue: 2
load.EvalSavedModel: 2
model_agnostic_predict.ModelAgnosticConfig: 2
Tuple[(slicer.SliceKeyType, types.MetricVariablesType)]: 2
'_AggState': 2
Optional[List[slicer.SingleSliceSpec]]: 2
List[slicer.SingleSliceSpec]: 2
types.FeaturesPredictionsLabels: 2
Callable[([types.FeaturesPredictionsLabels], types.DictOfFetchedTensorValues)]: 2
Atmos: 2
Release: 2
'Mod': 2
Sequence[Mod]: 2
'lazydict': 2
Type[Enum]: 2
NodeType: 2
BaseQuery: 2
Dict[(str, Protein)]: 2
Optional[Deserializer]: 2
Optional[SecondsTimedelta]: 2
Tuple[(Any, ...)]: 2
Union[('SetIntStr', 'DictIntStrAny')]: 2
'Number': 2
'StrBytes': 2
StrIntFloat: 2
Type['DataclassType']: 2
StrPath: 2
Colours: 2
'Player.Player': 2
Events: 2
'_SeriesValidation': 2
ConfidentialityRequirement: 2
IntegrityRequirement: 2
AvailabilityRequirement: 2
PrivilegeRequired: 2
ModifiedPrivilegesRequired: 2
ModifiedScope: 2
ExploitCodeMaturity: 2
Iterable[Iterable]: 2
(tuple or list): 2
(dict or str): 2
ISD_AS: 2
ProtoSign: 2
CtrlPayload: 2
NodeTransition: 2
Dict[(SessionObject, int)]: 2
Union[(str, Path, None)]: 2
type(None): 2
'exit 1 if there are no results': 2
HTTPServerRequest: 2
vSimpleProg: 2
Union[(Callable, Coroutine)]: 2
Type['FindExeClass']: 2
Optional[configparser.ConfigParser]: 2
Type['MdvHeader']: 2
Type['InodeMetadataV0']: 2
_ExpectedFile: 2
verify_mod.SnapshotVerifier: 2
_TConfigValue: 2
Type[_TConfigValue]: 2
Union[(ConfigValue, _UnsupportedValue)]: 2
Union[(Path, str, None)]: 2
Dict[(Color, bytes)]: 2
ui.Output: 2
FixableProblem: 2
process_finder.ProcessFinder: 2
Union[(None, bytes, str)]: 2
Union[(str, Tuple[(str, str)], None)]: 2
_types.PATH: 2
PATH: 2
forms.Field: 2
Optional[Model]: 2
PeerInfoResponse: 2
UsernameUniquenessResponse: 2
LoginError: 2
IncomingChatMessage: 2
IncomingGroupChatMessage: 2
IncomingStatusResponse: 2
IncomingGroupStatus: 2
IdentityContext: 2
ValidationError: 2
ssh_client.AsyncSshClient: 2
Parser[(Input, PositionAware[Output])]: 2
Sequence[Input]: 2
A: 2
Callable[([str, Dict], Any)]: 2
OrderId: 2
typing.Union[(MultiDict, MultiDictProxy)]: 2
asyncio.AbstractEventLoop(): 2
futures.Executor(): 2
ButtonGenerator: 2
Button: 2
Union[(Iterable[str], KeysView[str])]: 2
Union[(List, Dict, None)]: 2
Coroutine[(Any, Any, Any)]: 2
SafeConstructor: 2
EntityState: 2
BankCredentials: 2
EnturProxy: 2
Callable[([HomeAssistantType], Dict)]: 2
StationPriceData: 2
LinkyAccount: 2
ArmingState: 2
ZoneChangedData: 2
AsyncHeatingGroup: 2
NiluData: 2
Heos: 2
'astral.Location': 2
Callable[([ConfigType, bool], Callable[(..., bool)])]: 2
Union[(None, str, Container[str])]: 2
'IntentHandler': 2
Optional[Iterable[State]]: 2
'Intent': 2
Callable[([T], str)]: 2
PolicyType: 2
List[PolicyType]: 2
List[CategoryType]: 2
SubCatLookupType: 2
LookupFunc: 2
MultiFactorAuthModule: 2
NotifyAuthModule: 2
TotpAuthModule: 2
TrustedNetworksAuthProvider: 2
AuthStore: 2
AuthProvider: 2
known_checkstyle_or_path: 2
DocumentationComment: 2
path_or_url: 2
counting_condition_dict: 2
path_list: 2
'no function': 2
(str, Setting): 2
(tuple, list, None): 2
SourcePosition: 2
(SourcePosition, None): 2
AbsolutePosition: 2
(AbsolutePosition, None): 2
TextPosition: 2
(TextPosition, None): 2
List[IriTemplateMapping]: 2
DecisionType: 2
'Module': 2
Callable[([List, Dict, PandasDataFrame], None)]: 2
SklearnRandomForestClassifier: 2
SklearnDecisionTreeClassifier: 2
SklearnKNeighborsClassifier: 2
StatsmodelsMixedLM: 2
Callable[([List, NumpyNDArray, PandasSeries], None)]: 2
SklearnMLPClassifier: 2
SklearnLogisticRegression: 2
SklearnMultinomialNB: 2
SklearnGradientBoostingClassifier: 2
SklearnLogisticRegressionCV: 2
PerfTest: 2
List[Thread]: 2
pump.Batch: 2
t.Optional[t.Type[BaseParser]]: 2
RedisParser: 2
sy.FederatedDataLoader: 2
Tuple[(str, str, dict)]: 2
BaseWorker: 2
List[Union[(torch.Tensor, AbstractTensor)]]: 2
'Device': 2
Torefl: 2
Iterable[Entry]: 2
t.Optional[CodeForm]: 2
t.Sequence[str]: 2
t.Union[(ast.AST, typed_ast.ast3.AST)]: 2
BoundedGenerator: 2
X: 2
tuple_of(str): 2
tuple_of(tuple_of(str)): 2
(list_of(object), tuple_of(object)): 2
dict_of(object, object): 2
(AffineExpansionStorage, NonAffineExpansionStorage): 2
(Folders.Folder, str): 2
(int, str, None): 2
(list_of(DirichletBC), ProductOutputDirichletBC, dict_of(str, list_of(DirichletBC)), dict_of(str, ProductOutputDirichletBC)): 2
ReducedMesh: 2
(ReducedMesh, ReducedVertices): 2
ParametrizedExpressionFactory: 2
list_of(Function.Type()): 2
(Argument, BaseExpression, Constant, ConstantValue, Function, GeometricQuantity, IndexBase, MultiIndex, Operator): 2
Sum: 2
(Number, ScalarValue): 2
(Function, Operator): 2
'RotationInfo': 2
ColorTuple: 2
IPv4Address: 2
Sequence[RawImageFile]: 2
ExternalChallenge: 2
platform.Application.MouseEvent: 2
platform.Application.MouseMoveEvent: 2
EntryType: 2
List[_T]: 2
'Tuple[Foo, List[Enum], Any]': 2
'Foo.Bar': 2
'Foo': 2
'first.Foo': 2
'first.Foo.Foo': 2
second.Foo: 2
sub.Foo: 2
first.sub.Foo: 2
'first.sub.Foo': 2
Iterable[Union[(str, Path)]]: 2
Callable[([np.ndarray], np.ndarray)]: 2
(str or dict): 2
CacheType: 2
Dep: 2
ConfigFile: 2
(dict or None): 2
'asyncio.Future[bool]': 2
_RequestHandler: 2
RequestInfo: 2
Tuple[(ClientResponse, ...)]: 2
OSError: 2
_Func: 2
Optional[LooseHeaders]: 2
Type[SimpleNamespace]: 2
'ClientSession': 2
TraceConfig: 2
Sequence[wrappers.Field]: 2
typing.Tuple[str]: 2
api.API: 2
CurrentGameInfoData: 2
'CurrentMatch': 2
'Patch': 2
Callable[([Any], T)]: 2
Iterator[Node]: 2
List[SymbolNode]: 2
Iterator[nodes.Node]: 2
VariablePartsType: 2
snt.Module: 2
dm_env.specs.Array: 2
Sequence[snt.AbstractModule]: 2
gg.ggplot: 2
logging_utils.PathCollection: 2
'ImmutableList[T]': 2
Callable[([Optional[T]], bool)]: 2
Sync: 2
'Exception': 2
NextcloudReleases: 2
StringAttributeImporter: 2
DefaultAttributeImporter: 2
L10NImporter: 2
'mod_gpxpy.gpx.GPX': 2
'Track': 2
Dict[(str, Track)]: 2
s2.LatLng: 2
s2.LatLngRect: 2
List[List[s2.LatLng]]: 2
List[List[XY]]: 2
Iterator[SpectrumSpectrumMatch]: 2
'classe': 2
QueryParams: 2
List[models.Communicatiegegevens]: 2
List[models.Activiteit]: 2
MutableMapping[(Path, float)]: 2
MutableMapping[(str, float)]: 2
Dict[(Source, Task)]: 2
t.Type['Dependency']: 2
inspect.Parameter: 2
'Injector': 2
falcon.Request: 2
falcon.Response: 2
Union[(ir.TemplateDefn, ir.StaticAssert, ir.ConstantDef, ir.Typedef)]: 2
ir.ConstantDef: 2
List[ir.Expr]: 2
ir.ClassMemberAccess: 2
ir.UnaryMinusExpr: 2
ir.VarReferencePattern: 2
ir.MatchCase: 2
ir.BoolLiteral: 2
ir.TemplateInstantiationExpr: 2
ir.TemplateMemberAccessExpr: 2
ir.ListExpr: 2
ir.EqualityComparison: 2
ir.AttributeAccessExpr: 2
ir.IntLiteral: 2
ir.IntListSumExpr: 2
ir.BoolListAllExpr: 2
ir.BoolListAnyExpr: 2
ir.IntComparisonExpr: 2
ir.IntBinaryOpExpr: 2
ir.ListConcatExpr: 2
ir.ListComprehensionExpr: 2
ir.Stmt: 2
ir.Assert: 2
Dict[(Tuple[(str, str)], bool)]: 2
ir0.ClassMemberAccess: 2
Callable[([List], str)]: 2
List[ir.TemplateDefn]: 2
Transformation: 2
Dict[(str, List[UnificationStrategy.Expr])]: 2
UnificationStrategyForCanonicalization[TermT]: 2
Dict[(str, _Expr)]: 2
ir.ListComprehension: 2
ir.SetComprehension: 2
ir.TryExcept: 2
RuntimeConfig: 2
Union[(Type[Any], str)]: 2
Type[FieldType]: 2
spanner.KeySet: 2
Callable[(..., CallableReturn)]: 2
SpannerConnection: 2
Optional[Callable[([], update.SchemaUpdate)]]: 2
Iterable[migration.Migration]: 2
List[Tuple[(int, int, int)]]: 2
network_components.Node: 2
common_pb2.EllipticCurveType: 2
List[xarray.Dataset]: 2
List[Union[(tf.Tensor, tf.Operation, lt.LabeledTensor)]]: 2
_View: 2
csv.Dialect: 2
AbstractThumbnailSource: 2
typing.List[pathlib.Path]: 2
'ParticleFile': 2
'time step': 2
'random seed': 2
'end time': 2
'polynomial degree for velocity': 2
"far field traction (relative to Young's modulus)": 2
'poisson ratio < 0.5': 2
List[VolumeMount]: 2
OperationState: 2
ProvisionDetails: 2
DeprovisionDetails: 2
Workbook: 2
Union[(List[float], np.ndarray)]: 2
List[TextIO]: 2
RunFuncType: 2
'Figure': 2
PrettyTable: 2
ModelAdmin: 2
Select: 2
QueryDict: 2
PatientLookup: 2
ClassType: 2
DB_SAFE_CONFIG_FWD_REF: 2
Dict[(Union[(bytes, str)], Any)]: 2
SupportsInt: 2
List[User]: 2
Optional[Union[(str, bool)]]: 2
Optional[StringConverterFunction]: 2
StringConverterFunction: 2
ContextStack: 2
Markdown: 2
Catalog: 2
List[deck.Deck]: 2
MatchListType: 2
Iterable[Person]: 2
List[Person]: 2
List[archs.Archetype]: 2
Sequence[Card]: 2
astroid.nodes.ImportFrom: 2
Dict[(str, Dict[(str, List[str])])]: 2
Index: 2
TimeDirection: 2
List[Tuple[(str, float)]]: 2
Printing: 2
CPU: 2
ROM: 2
GatewayModel: 2
Stress.Type: 2
List[Stress]: 2
StressVocabulary: 2
DataArray: 2
CacheDefinitionFiles: 2
Sessions: 2
Sized: 2
'ExtractedMetadata': 2
Extension: 2
typing.CallStack: 2
Iterable[pluginhandler.PluginHandler]: 2
_config.Config: 2
Set[Any]: 2
discord.Channel: 2
List[digitalocean.Record]: 2
stripe.Customer: 2
Dict[(str, Tuple[('ZulipStorage', str)])]: 2
'QuerySet[UserProfile]': 2
CustomProfileField: 2
Union[(int, str, List[int])]: 2
Iterable[Stream]: 2
Iterable[Validator]: 2
Optional[Sequence[UserProfile]]: 2
Union[(Sequence[int], Sequence[str])]: 2
Attachment: 2
Type['AbstractEnum']: 2
JsonableError: 2
Union[(Mapping[(str, Any)], str)]: 2
BlockingChannel: 2
Dict[(int, Stream)]: 2
ScheduledEmail: 2
Callable[([str, Optional[ParamsT]], CursorObj)]: 2
Optional[Dict[(str, Dict[(str, List[str])])]]: 2
Iterable[Tuple[(Any, Any)]]: 2
AddedChannelsT: 2
Optional[Callable[([str, int], None)]]: 2
Optional[Dict[(str, bool)]]: 2
NarrowT: 2
CountStat: 2
controller.hal_data: 2
controller.TestController: 2
AttackContext: 2
Optional[Group]: 2
ImageFont: 2
Union[('SourceTable', 'SourceQuery', 'File')]: 2
'Pipe': 2
QtGui.QCloseEvent: 2
pathlib: 2
Optional[UrlDescriptor]: 2
ExportFormat: 2
Iterable[EdgeTuple]: 2
Mapping[(BaseEntity, Set[BaseEntity])]: 2
Set[BaseEntity]: 2
Union[(BaseEntity, List[BaseEntity], List[Dict])]: 2
Optional[List[BaseEntity]]: 2
Optional[Mapping[(str, Mapping[(str, str)])]]: 2
MetadataParser: 2
Union[(str, Entity)]: 2
Union[(None, str, Node)]: 2
Optional[Iterable[Union[(str, int)]]]: 2
Iterable[Tuple[(X, Y)]]: 2
Mapping[(X, Set)]: 2
Optional[NodePredicate]: 2
DiGraph: 2
CentralDogma: 2
Mapping[(str, pd.DataFrame)]: 2
Mapping[(str, BELGraph)]: 2
Optional[Iterable[BaseEntity]]: 2
Optional[EdgeIterator]: 2
Tuple[type(CanonicalBot)]: 2
Dict[(int, Tuple[type(CanonicalBot)])]: 2
Union[(Tuple[(str, str)], str)]: 2
Authors: 2
List[Vector]: 2
List[type]: 2
Node.StringLiteral: 2
'TypeTime': 2
InfiniteList: 2
ChatID: 2
MaybeShutdownSocket: 2
ExitCode: 2
Optional[Iterator]: 2
LambdaType: 2
Iterator[Tag]: 2
client.Flow: 2
Tuple[(float, float, int)]: 2
StateGridTensors: 2
models.TimeStepModel: 2
KeyedTensors: 2
Mapping[(str, tf.Tensor)]: 2
Sequence[Sequence[states.StateDefinition]]: 2
Sequence[grids.Grid]: 2
VelocityComponent: 2
data.DataSet: 2
Dict[(Text, Sequence[bool])]: 2
discord.ext.commands.Bot: 2
Primitive: 2
ReviewInfo: 2
BoardManager: 2
typing.Optional[typing.Tuple[(int, int)]]: 2
Dude: 2
webRequest: 2
TRIGGER_ACTION: 2
quite.Painter: 2
Optional['Target.BrowserContextID']: 2
Union['WindowID']: 2
Optional['Target.TargetID']: 2
Union['Runtime.CallFrame']: 2
Union[('Debugger.Location', dict)]: 2
Union['HeapSnapshotObjectId']: 2
Union[('[]', dict)]: 2
Union['DOM.BackendNodeId']: 2
Union['[StringIndex]']: 2
Optional['[StringIndex]']: 2
Union['[Rectangle]']: 2
Optional['Runtime.RemoteObject']: 2
Union['DOM.NodeId']: 2
Union['DOMBreakpointType']: 2
Union['ContextId']: 2
Union[('BaseAudioContext', dict)]: 2
Union['StreamHandle']: 2
Optional['[AXProperty]']: 2
Union[('RequestId', dict)]: 2
Union[('Network.Request', dict)]: 2
Union[('Network.ResourceType', dict)]: 2
Optional['dict']: 2
Union['KeyPath']: 2
Optional['Key']: 2
[dict]: 2
List[Tuple[(int, dict)]]: 2
Dict[(str, Callable)]: 2
GithubRepository: 2
Callable[([PreparedEnv], None)]: 2
Optional[IO[str]]: 2
Set[check.Check]: 2
Iterable[check.Check]: 2
Sweepable: 2
'Sweep': 2
ParamResolverOrSimilarType: 2
Union[(float, complex, Iterable[float], np.ndarray)]: 2
study.Sweepable: 2
ops.QubitOrder: 2
'cirq.ParamResolverOrSimilarType': 2
'cirq.Sweepable': 2
study.TrialResult: 2
Iterable[Hashable]: 2
UndirectedHypergraph: 2
Optional[UndirectedHypergraph]: 2
schedules.ScheduledOperation: 2
ExecutionStrategy: 2
Dict[(ops.Qid, LogicalIndex)]: 2
ops.XPowGate: 2
ops.YPowGate: 2
ops.ZPowGate: 2
ops.CZPowGate: 2
Union[(str, bytes, int)]: 2
Callable[([ops.Operation, ops.Operation], bool)]: 2
Callable[([Sequence[ops.Operation]], ops.OP_TREE)]: 2
Iterable[Tuple[(TVector, Scalar)]]: 2
Optional[Union[(sympy.Basic, float)]]: 2
Duration: 2
ValueMap: 2
Mapping[(QubitCoordinate, str)]: 2
Optional[v2.program_pb2.Operation]: 2
SerializingArg: 2
arg_func_langs.ArgValue: 2
Iterable[ops.GateOperation]: 2
Optional[devices.Device]: 2
v2.program_pb2.Circuit: 2
v2.program_pb2.Schedule: 2
Callable[([List[LineSequence], float, float, float, bool], None)]: 2
EDGE: 2
Callable[([T], float)]: 2
Callable[([T], T)]: 2
Callable[([], float)]: 2
List[MeasureInfo]: 2
cirq.Gate: 2
Iterable[devices.GridQubit]: 2
Optional[ops.Gate]: 2
'cirq.ParamResolver': 2
'cirq.CircuitDiagramInfoArgs': 2
ps.PauliString: 2
Dict[(raw_types.Qid, raw_types.Qid)]: 2
'PauliStringPhasor': 2
Iterable[raw_types.Operation]: 2
pauli_gates.Pauli: 2
Type[TV]: 2
TSelf_PauliStringGateOperation: 2
Union[('Gate', 'linear_combinations.LinearCombinationOfGates')]: 2
ApplyChannelArgs: 2
Union[(Tuple[Any], Sequence[Any])]: 2
'cirq.OP_TREE': 2
QasmArgs: 2
'cirq.Schedule': 2
cirq.OP_TREE: 2
Sequence[cirq.OP_TREE]: 2
Optional[Sequence[cirq.Qid]]: 2
Iterable[OptimizationResult]: 2
List[complex]: 2
Iterable[Iterable[Union[(str, Tuple[(int, int, float, float)])]]]: 2
'SurfaceProp': 2
PackList: 2
utils.InstanceConfigDict: 2
KubernetesDeploymentConfig: 2
KubeSmartstackReplicationChecker: 2
Sequence[CustomResourceDefinition]: 2
KubeKind: 2
DrainTask: 2
CheckServiceReplication: 2
MarathonClients: 2
MesosSchedulerDriver: 2
ConstraintState: 2
Set[InstanceTuple]: 2
Callable[([bool], Any)]: 2
Iterable[psutil.Process]: 2
arrow.arrow.Arrow: 2
IECore: 2
http.HTTPStatus: 2
'KinesisRecord': 2
Checkpointer: 2
KinesisShard: 2
JID: 2
aioxmpp.Message: 2
Optional[Union[(bool, str)]]: 2
WSConnection: 2
G1: 2
[G1]: 2
'Bid': 2
'Money': 2
ty.Union[(str, property)]: 2
ty.Optional[dict]: 2
ty.Optional[float]: 2
JSONEncoder: 2
'asyncio.Task[Any]': 2
MinutiaeFileFormat: 2
sessionmaker: 2
HelloWorldCommand: 2
LongRunningCommand: 2
BrightsideMessageHeader: 2
Dict[(int, RankingModel)]: 2
'TbawUrlDefinition': 2
QQmlEngine: 2
QJSEngine: 2
FileVersionResult: 2
types.Path: 2
mitmproxy.connections.ServerConnection: 2
tcp.TCPFlow: 2
typing.List[typing.Tuple[(str, typing.Union[(None, str, urwid.Widget)])]]: 2
typing.Callable[(..., None)]: 2
typing.Sequence[http.HTTPFlow]: 2
controller.Channel: 2
Union[(Dict[(str, AnyStr)], Iterable[Tuple[(bytes, bytes)]])]: 2
List[TSetCookie]: 2
moptions.Options: 2
config.ProxyConfig: 2
typing.Type[typing.Tuple]: 2
mitmproxy.types.Cmd: 2
Unsupported: 2
BinaryTree: 2
Times: 2
Union[(list, np.ndarray)]: 2
ecore.EReference: 2
ecore.EAttribute: 2
SolutionCheckTypes: 2
MenuItem: 2
FirmwareFormat: 2
Ed25519Signature: 2
'BridgeTransport': 2
Predications: 2
Iterable[mrs.MRS]: 2
Union[(InstrumentData, None)]: 2
Pin: 2
List[TradingCard]: 2
Mapping[(str, Read)]: 2
SegmentMapping: 2
Optional['Component']: 2
Union[(Text, Dict[(Text, Any)])]: 2
Optional[Fingerprint]: 2
'Agent': 2
NaturalLanguageInterpreter: 2
Set[Text]: 2
Optional[List[Dict[(Text, Text)]]]: 2
'Language': 2
'mitie.total_word_feature_extractor': 2
List['Event']: 2
OutputChannel: 2
NaturalLanguageGenerator: 2
MessengerClient: 2
AsyncServer: 2
Optional['OutputChannel']: 2
List['InputChannel']: 2
Dict[(Text, List[Dict[(Text, Any)]])]: 2
Union[('NaturalLanguageGenerator', EndpointConfig, None)]: 2
List['DialogueStateTracker']: 2
Optional[tf.keras.models.Sequential]: 2
Optional[tf.Graph]: 2
Optional[MaxHistoryTrackerFeaturizer]: 2
Optional['sklearn.base.BaseEstimator']: 2
Optional[(Dict[(Text, List)] or List[Dict])]: 2
Optional[(Text or List or Dict or Callable)]: 2
LabelEncoder: 2
List[Publication]: 2
BotConfiguration: 2
PatternNode: 2
'Stream': 2
Severity: 2
LocationInfo: 2
[Signature]: 2
parsing.ParserTree: 2
parsing.Capture: 2
parsing.Rep0N: 2
[MatchExpr]: 2
parsing.Functor: 2
grammar.Grammar: 2
List[KeyValueStore]: 2
Optional[Union[(str, List[str])]]: 2
Union[(str, datetime.datetime)]: 2
AbstractModelStore: 2
requests.PreparedRequest: 2
Pattern[str]: 2
List[Role]: 2
Optional[KeyType]: 2
OpKwArgs: 2
_Delay: 2
FrozenSet[Flag]: 2
ResponseCode: 2
Type[MessageT]: 2
Collection[bytes]: 2
AbstractSet[Flag]: 2
_Partial: 2
_TreeNode: 2
Type[_WT]: 2
Type[_MFT]: 2
Type[_ST]: 2
Type[Maildir]: 2
Redis: 2
Optional[MaybeBytes]: 2
ResponseT: 2
'FetchResponse': 2
Sequence[SieveTest]: 2
AbstractServer: 2
typing.Mapping: 2
fields.Float(required=True): 2
typing.Union[(typing.Mapping[(str, str)], None)]: 2
Platform: 2
List[inspect.Parameter]: 2
Sequence[HTTPMethod]: 2
NoteType: 2
FooId: 2
SDF.Link: 2
Host: 2
AbstractVarsQuerySet: 2
LEDStrip: 2
BaseRLModel: 2
Union[(gym.Env, VecEnv)]: 2
Type[BaseRLModel]: 2
ObjectifiedElement: 2
CommunityPresenter: 2
Sequence[Dict[(str, str)]]: 2
Changes: 2
UOWTransaction: 2
Union[(None, str, LazyString)]: 2
NavItem: 2
DateTimePattern: 2
Union[(None, Role, Collection[Role])]: 2
Optional[Dict[(str, Collection[Role])]]: 2
Optional[LazyString]: 2
Union[(type, str)]: 2
Macro: 2
QWebEngineUrlRequestInfo: 2
osc_bundle.OscBundle: 2
Union[(str, bytes, bool, int, float, tuple, list)]: 2
SymbolMap: 2
SourceLine: 2
RootNode: 2
LexicalElse: 2
LexicalHandle: 2
Conditional: 2
LexicalReturnStatement: 2
ASSIGNMENT_TARGET: 2
'BracketVector': 2
LexicalComparison: 2
'ParenthesesVector': 2
'ThingDefinition': 2
LocalReference: 2
SourceReference: 2
Union[(Results, Tuple[Results])]: 2
Union[(list, tuple)]: 2
Union[(str, np.ndarray)]: 2
Optional[Union[(str, float)]]: 2
Optional[ArrayLike]: 2
Optional['BufferControl']: 2
SelectionType: 2
AutoSuggest: 2
ProgressBar: 2
Formatter: 2
ColorDepth: 2
FocusableElement: 2
Tuple[(Filter, Filter)]: 2
Callable[(['InputHookContext'], None)]: 2
Vt100Input: 2
Optional[AnyFormattedText]: 2
Completer: 2
Sequence[Completer]: 2
Union[(List[str], Callable[([], List[str])])]: 2
Optional[Callable[([], None)]]: 2
Optional['Input']: 2
Optional['Output']: 2
Union[(str, Callable[([], str)])]: 2
Sequence[StyleTransformation]: 2
List[BaseStyle]: 2
os.DirEntry: 2
Tuple[(float, float, float, float, float)]: 2
TransitModel: 2
PreparedRequest: 2
pd: 2
Optional[Union[(SerializableType, List[SerializableType])]]: 2
RunConfiguration: 2
UserStorageHandler: 2
Union[(ApiObject, None)]: 2
GymEnv: 2
Callable[([Any], Dict[(str, tf.Tensor)])]: 2
Policy: 2
_pytest.config.argparsing.Parser: 2
_pytest.config.Config: 2
List[pytest.Item]: 2
typing.Optional[list]: 2
semantic_version.Version: 2
message.base.Disconnect.REASON: 2
TCPNetwork: 2
List[SocketAddress]: 2
Kwargs: 2
keysauth.KeysAuth: 2
typing.Hashable: 2
typing.Optional[FileTransferToken.FileInfo.Category]: 2
ResourceId: 2
peewee.Database: 2
cert.CertificateManager: 2
'TransactionSystem': 2
Offer: 2
List[model.TaskPayment]: 2
AclRule: 2
ComputeTaskDef: 2
Type[TaskApiPayloadBuilder]: 2
Iterable[DockerBind]: 2
Optional[Union[(Tuple, List[str])]]: 2
CurrentStats: 2
FinishedTasksStats: 2
AggregateTaskStats: 2
ProviderStats: 2
Union[(str, HardwarePreset)]: 2
SubtaskOp: 2
taskserver.WaitingTaskResult: 2
DummyTaskDefinition: 2
Type[CoreVerifier]: 2
Resolution: 2
FloatingPointBox: 2
List[Player]: 2
pyCardDeck.Deck: 2
'message': 2
MovieItem: 2
StatsManager: 2
zoe_lib.state.Execution: 2
DockerHostConfig: 2
Iterable[compatibility_store.CompatibilityResult]: 2
List[package.Package]: 2
SubtaskWorker: 2
kubernetes.client.Configuration: 2
tool_requirements.Requirement: 2
chr: 2
'ClusteringFeature': 2
Inv_Alphabet: 2
Tuple[(ndarray, ndarray)]: 2
etree.ElementTree: 2
Pagination: 2
ApiError: 2
Iterable[UnresolvedType]: 2
UnresolvedType: 2
asyncio.Protocol: 2
defaultdict: 2
FriendDAO: 2
ParticipantDAO: 2
List[PauliTerm]: 2
List[PauliSum]: 2
AbstractDevice: 2
HtmlWrapper: 2
'QUrl': 2
ManagesNames: 2
List[ISerializer]: 2
Union[(SSLContext, bool)]: 2
AbstractCallManager: 2
LocalPath: 2
List[ScrySet]: 2
Dict[(UUID, ScryCard)]: 2
'annotation': 2
Callable[([TypeVar('T')], 'Monad')]: 2
Iterable[Failable]: 2
Union[(str, NodeNG)]: 2
TypeInferer: 2
Type[_Event]: 2
Type['IProtoMessage']: 2
QWebElement: 2
'webkittab.WebKitTab': 2
typing.Optional[QRect]: 2
STH: 2
merkle_tree.MerkleTree: 2
'struct phr_header[]': 2
eventType: 2
Proj: 2
Tuple[VPoint]: 2
Union[(str, Pos)]: 2
QValueAxis: 2
Callable[([], Dict[(str, Any)])]: 2
ConfigureWidget: 2
Sequence[_Coord]: 2
QTableWidget: 2
LinkTableWidget: 2
Dict[(str, Sequence[_Coord])]: 2
QLineEdit: 2
OpRealizationMeta: 2
Hls: 2
GenericSerializer: 2
Union[(Interface, Unit)]: 2
Dict[(RtlSignalBase, HdlStatement)]: 2
Dict[(RtlSignalBase, Union[(Value, RtlSignalBase)])]: 2
'TransTmpl': 2
Callable[([TransTmpl], Tuple[(bool, bool)])]: 2
List['HdlStatement']: 2
OneOfTransaction: 2
UniqList: 2
Axi3_addr: 2
AxiStream: 2
Optional[TransTmpl]: 2
Optional[List[FrameTmpl]]: 2
HStructField: 2
model.MoveDirectionEnum: 2
CrumbArgsSequences: 2
'hansel.Crumb': 2
'x': 2
's': 2
'd': 2
Iterable[ReplacementRule]: 2
Callable[(..., bool)]: 2
VariableReplacement: 2
'expressions.Expression': 2
VT: 2
TransactionPool: 2
P2PProtocol: 2
qrl_pb2.NodeChainState: 2
db.Key: 2
WriterAdapter: 2
Gtk.Adjustment: 2
Optional['BinaryTree']: 2
unitgroup.Group: 2
pydnstest.augwrap.AugeasNode: 2
Optional[Element]: 2
dns.message.Message: 2
Optional[Union[(str, PurePath)]]: 2
werkzeug.datastructures.FileStorage: 2
Union[(Flask, Blueprint)]: 2
app: 2
DateFormatter: 2
Sequence[FloatingBody]: 2
QtQml.QJSValue: 2
'PandaViewer.gallery.GenericGallery': 2
MetadataManager: 2
types.PasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow: 2
declarations.CDeclaration: 2
ir.Alloc: 2
Optional['Camera']: 2
QtApplication: 2
Optional['CuraApplication']: 2
'OAuth2Settings': 2
Optional['Preferences']: 2
'AuthorizationHelpers': 2
Callable[(['AuthenticationResponse'], Any)]: 2
Dict[(Any, List)]: 2
List['SceneNode']: 2
'PrintJobOutputModel': 2
'PrinterOutputController': 2
Peripheral: 2
ShapeArray: 2
'ContainerNode': 2
ContainerRegistry: 2
'VariantType': 2
'NetworkedPrinterOutputDevice': 2
'io.BytesIO': 2
'MachineAction': 2
Optional['SceneNode']: 2
ObjectsModel: 2
Optional[SceneNode]: 2
Dict[(str, ClusterMaterial)]: 2
ExportFileJob: 2
Union[(Callable[([ClusterApiClientModel], Any)], Callable[([List[ClusterApiClientModel]], Any)])]: 2
Type[ClusterApiClientModel]: 2
GlobalStack: 2
PrinterOutputController: 2
List[Union[(Dict[(str, Any)], ClusterPrintCoreConfiguration)]]: 2
Union[(Dict[(str, Any)], ClusterBuildPlate)]: 2
Callable[([int], Any)]: 2
Union[(Callable[([CloudApiClientModel], Any)], Callable[([List[CloudApiClientModel]], Any)])]: 2
Type[CloudApiClientModel]: 2
CuraSceneNode: 2
QTimer: 2
MimeType: 2
'Logger': 2
Optional[Vector]: 2
FileReader: 2
RenderPass: 2
'ShaderProgram': 2
'MeshData': 2
ContainerProvider: 2
arg(container=list): 2
behavior.Behavior: 2
Union[(int, Callable[([], int)])]: 2
Callable[([str, Iterable[str]], None)]: 2
robocup.Point: 2
robocup.Robot: 2
Wikicode: 2
'Pose': 2
Dict[(int, Pose)]: 2
RefereeState: 2
List[Obstacle]: 2
Ball: 2
[Pose, Position]: 2
Optional[Position]: 2
Optional[Pose]: 2
Optional[List[Area]]: 2
Tactic: 2
AICommand: 2
Line2D: 2
OrderItem: 2
InfoField: 2
OnEnterCallback: 2
GithubExtension: 2
'Maybe': 2
Callable[([Any], Maybe)]: 2
Callable[([str], IO)]: 2
'Either': 2
Callable[([A], Either)]: 2
Callable[([Any], Monad)]: 2
Union[(Callable[([T], bool)], Awaitable[bool])]: 2
'WithLatestFrom': 2
Union[(Callable[([T, int], bool)], Awaitable)]: 2
Callable[([T1], T2)]: 2
AsyncObservable[T1]: 2
Awaitable[T]: 2
'AsyncObservable[T]': 2
AsyncIterable: 2
Login: 2
RecognitionException: 2
ParseTreeVisitor: 2
RuleNode: 2
models.Followed: 2
'AbstractServiceFormItem': 2
SSLContext: 2
yass.Reader: 2
yass.Writer: 2
DrawingContext: 2
Size: 2
(list or dict): 2
[str, bool, int]: 2
'_Q': 2
Coordinates: 2
Building: 2
u.pix: 2
VuforiaDatabase: 2
MongoAdapter: 2
Callable[([object], None)]: 2
(int or str): 2
MemoryArray: 2
Iterable[Tuple[(str, Callable)]]: 2
ShapeSpec: 2
tf.DType: 2
Iterable[BaseRunner]: 2
List[ObjectiveWeight]: 2
List[Gradients]: 2
Gradients: 2
RNNSpec: 2
List[RNNSpecTuple]: 2
TransformerLayer: 2
List[Union[(ConvSpec, ResNetSpec, MaxPoolSpec)]]: 2
ConvSpec: 2
ResNetSpec: 2
MaxPoolSpec: 2
CNNEncoder: 2
Union[(RecurrentEncoder, SentenceEncoder)]: 2
Dict[(str, List)]: 2
Classifier: 2
BaseAttention: 2
SequenceLabeler: 2
List[ExecutionResult]: 2
projector: 2
MultiHeadLoopStateTA: 2
Callable[([Iterable[List[str]]], Iterable[List[str]])]: 2
List[Callable]: 2
QShowEvent: 2
s_lmdbslab.Slab: 2
Optional[Random]: 2
Optional[CardType]: 2
Optional[Layer]: 2
PortRange: 2
Optional[TitleType]: 2
Optional[SocialNetwork]: 2
Optional[CountryCode]: 2
Optional[UnitName]: 2
Optional[PrefixSign]: 2
Optional[ISBNFormat]: 2
Optional[EANFormat]: 2
Algorithm: 2
Type[BaseProvider]: 2
Punkt: 2
'Gruppe': 2
TrainingTraceKeys: 2
DashdInterface: 2
Callable[([None], None)]: 2
List[TableModelColumn]: 2
List[UtxoType]: 2
QDialog: 2
QSplitter: 2
hug.types.multiple: 2
StakkrActions: 2
IndexedDataset: 2
List[IndexedInstance]: 2
'Dataset': 2
List[tensorflow.Tensor]: 2
Extraction: 2
List[Extraction]: 2
List[ProductionRule]: 2
Union[(List[str], List[int])]: 2
List[Dict[(str, torch.Tensor)]]: 2
Ontonotes: 2
TableColumn: 2
Optional[List[List[Tuple[(int, int)]]]]: 2
Dict[(str, List[TokenType])]: 2
List[spacy.tokens.Token]: 2
Grammar: 2
NltkPorterStemmer: 2
Callable[([StateType], torch.Tensor)]: 2
List[RnnStatelet]: 2
List[GrammarStatelet]: 2
RnnStatelet: 2
CoverageState: 2
ChecklistStatelet: 2
GrammarBasedState: 2
Callable[([torch.Tensor], torch.Tensor)]: 2
Type[torch.nn.modules.RNNBase]: 2
torch.nn.Linear: 2
List[Model]: 2
Optional[Seq2SeqEncoder]: 2
List[NlvrLanguage]: 2
Iterable[NamedParameter]: 2
TinyPyParser.AndTestContext: 2
EighthScheduledActivity: 2
IOutput: 2
Union[(int, ndarray)]: 2
Iterable[T1]: 2
Opt[Callable[([T2], Numeric)]]: 2
'AttributeTable': 2
Union[(bytes, BufferStreamReader)]: 2
Generator[(Any, None, Any)]: 2
_AttrValueType: 2
Union[(int, str, None)]: 2
'CSSStyleRule': 2
AbstractNode: 2
Type[Tag]: 2
Union[(str, Iterable)]: 2
WebMessageData: 2
'List[AbstractResult]': 2
CheckData: 2
Iterable[Flavor]: 2
Optional[Story]: 2
StringParameterValue: 2
List[PipelineRunartifacts]: 2
GithubRepositorieslinks: 2
List[GithubRepository]: 2
PipelineBranchesitempullRequestlinks: 2
PipelinelatestRun: 2
GithubRespositoryContainerlinks: 2
GithubRepositories: 2
List[PipelineActivityartifacts]: 2
GithubContent: 2
PipelineBranchesitemlatestRun: 2
PipelineBranchesitempullRequest: 2
EmptyChangeLogSet: 2
PipelineStepImpllinks: 2
InputStepImpl: 2
GithubOrganizationlinks: 2
BranchImplpermissions: 2
BranchImpllinks: 2
PipelineRunImpl: 2
SwapSpaceMonitorMemoryUsage2: 2
ResponseTimeMonitorData: 2
ClockDifference: 2
List[PipelineRunNodeedges]: 2
FavoriteImpllinks: 2
PipelineImpl: 2
ExtensionClassContainerImpl1links: 2
ExtensionClassContainerImpl1map: 2
List[CauseUserIdCause]: 2
InputStepImpllinks: 2
List[HudsonMasterComputer]: 2
PipelineImpllinks: 2
List[QueueBlockedItem]: 2
List[HudsonassignedLabels]: 2
AllView: 2
UnlabeledLoadStatistics: 2
List[AllView]: 2
List[PipelinelatestRunartifacts]: 2
List[HudsonMasterComputerexecutors]: 2
Label1: 2
HudsonMasterComputermonitorData: 2
PipelineRunImpllinks: 2
GithubRepositorylinks: 2
GithubRepositorypermissions: 2
GithubScmlinks: 2
ExtensionClassImpllinks: 2
lint.PyLinter: 2
my_module.MySubClass: 2
'QgsServerInterface': 2
MapCSSParser.EntryContext: 2
MapCSSParser.Simple_selector_operatorContext: 2
MapCSSParser.Layer_id_selectorContext: 2
MapCSSParser.CssidentContext: 2
MapCSSParser.Attribute_selectorContext: 2
MapCSSParser.Type_selectorContext: 2
MapCSSParser.Declaration_blockContext: 2
MapCSSParser.DeclarationsContext: 2
MapCSSParser.Declaration_propertyContext: 2
MapCSSParser.Declaration_valueContext: 2
MapCSSParser.Int_Context: 2
MapCSSParser.NumContext: 2
MapCSSParser.BooleanOperatorContext: 2
MapCSSParser.NumericOperatorContext: 2
MapCSSParser.ValueOperatorContext: 2
MapCSSParser.RegexOperatorContext: 2
AnkiDeck: 2
Callable[([str], dict)]: 2
Trie: 2
Talk: 2
QtGui.QFocusEvent: 2
Union[(str, io.StringIO, io.FileIO)]: 2
nodes.Component: 2
AnyMapping: 2
Optional[Config]: 2
'!': 2
[NamespaceGenerator]: 2
NamespaceGenerator: 2
Iterable[Sample]: 2
StoryConfig: 2
Sequence[Tuple[(str, bool)]]: 2
Union[(Living, Item)]: 2
'Direction': 2
Union[(list, dict)]: 2
Sequence[Instruction]: 2
VerbosityConfig: 2
Initializer: 2
Stopper: 2
Simulator: 2
'Trigram': 2
List['BaseLayer']: 2
List[List[BaseLayer]]: 2
IntentDict: 2
tzinfo: 2
BaseMessage: 2
Responder: 2
BaseTrigger: 2
Optional[WebviewRatio]: 2
'MachineState': 2
SymExecWrapper: 2
StateAnnotation: 2
Optional[Annotations]: 2
Union[(Bool, List[Bool])]: 2
Expression[z3.ExprRef]: 2
t.Optional[bool]: 2
(str is not None): 2
Time: 2
Union[(discord.Guild, List[discord.Guild])]: 2
Union[(Image.Image, bytes)]: 2
Union[(discord.User, discord.Member)]: 2
loot_prices.GasPrices: 2
SiteConfig: 2
Bumps: 2
cairocffi.Context: 2
Gdk.EventMotion: 2
'GLImage': 2
Iterable[Union[(dict, partials.Partial)]]: 2
UpdateEdgeListener: 2
auto.Control: 2
auto.TreeItemControl: 2
Union[(HistogramBase, HistogramCollection)]: 2
Histogram2D: 2
Union[(str, list)]: 2
'Iterable[str]': 2
Set[Feedable]: 2
Sequence[GraphExecutor]: 2
GenericModelPart: 2
Word2Vec: 2
List[Sequence[EvalType]]: 2
List[TemporalStateful]: 2
List[tf.Summary]: 2
ibapi.ticktype.TickType: 2
PosixPath: 2
model.ProductId: 2
List[model.ProductDisruption]: 2
model.AsRepository: 2
Optional[CASCManager]: 2
func.ServiceBusMessage: 2
Union[(str, Methods)]: 2
HybridGeometry: 2
AccessRestrictionAffected: 2
provmodel.ProvDocument: 2
(str or BufferedReader or provmodel.ProvDocument): 2
GPX: 2
Tuple[(T, T)]: 2
geojson.geometry.LineString: 2
GPXTrack: 2
Callable[([dict], int)]: 2
RoadGraph: 2
Union[(Tuple[(float, float)], List[Tuple[(float, float)]])]: 2
[(int,)]: 2
Iterable[Component]: 2
m.Bit: 2
clgen_pb2.Instance: 2
jsonutil.JSON: 2
typing.Dict[(str, int)]: 2
preprocessed.PreprocessedContentFiles: 2
clgen.Instance: 2
PreprocessorFunction: 2
'LockFile': 2
typing.Callable[([pathlib.Path], str)]: 2
typing.Callable[([str], None)]: 2
typing.Optional[datetime.datetime]: 2
'Deduced from configure': 2
'Arguments of the configure script': 2
'Make binary': 2
'Makefile filename, used if not None': 2
'Additional arguments for the make command': 2
'Additional environment variables': 2
discord.Embed: 2
Callable[([float], float)]: 2
sqlparse.sql.Token: 2
Optional[LogbookLevel]: 2
Optional[Mapping[(str, LogbookLevel)]]: 2
Param('Size (px: 128,192,224)', int): 2
Param('Alpha', float): 2
Param('Momentum', float): 2
Param('epsilon', float): 2
Param('Debias statistics', bool): 2
ListSizes: 2
Optional[Dataset]: 2
MetricsList: 2
Optional[SplitFuncOrIdxList]: 2
Optional[Tuple[(float, float)]]: 2
LossFunction: 2
HookFunc: 2
Rank0Tensor: 2
ListRules: 2
Parseble: 2
Union[(bytes, bytearray)]: 2
List[List]: 2
models.WorkerType: 2
Rinzler: 2
ResourceObject: 2
sdk_auth.KerberosEnvironment: 2
WebsocketConsumer: 2
CardIncludeList: 2
Type[_M]: 2
_M: 2
_P: 2
_VT: 2
Type[_KT]: 2
Union[(FieldDescriptor, type, str)]: 2
Type[S]: 2
Type[Service]: 2
Type['Service']: 2
MethodDescriptor: 2
Type['venom.rpc.Service']: 2
Type[M]: 2
M: 2
_Value: 2
Snake: 2
MyInt: 2
IntegerValue: 2
ModelSecondOrder: 2
InstallWizard: 2
Runtime: 2
SimulatorControlType: 2
FromTime: 2
ToTime: 2
TransactionID: 2
UserSpecifier: 2
Count: 2
DualLSTMModel: 2
Optional[Vind]: 2
Union[(os.PathLike, str)]: 2
Lexeme: 2
Sequence[SummaryWithHash]: 2
Mistake: 2
RepositoryID: 2
zipfile.ZipFile: 2
List[StrPath]: 2
EmailMultiAlternatives: 2
List[Optional[bytes]]: 2
Callable[([bytes], Any)]: 2
Optional[List[Dict[(str, Any)]]]: 2
'SocketConnection': 2
typing.Type[_AccrocchioType]: 2
'Account': 2
tldap.backend.base.LdapBase: 2
Optional[tldap.Q]: 2
UpdateCallable: 2
BaseAccount: 2
coap.Server: 2
CoapPath: 2
(int or float or str or bytes): 2
wei_value: 2
'SketchRuntime': 2
CompiledShape: 2
ShapeLabel: 2
InputStream: 2
SessionManager: 2
Medium: 2
Union[(Member, User)]: 2
WorkCluster: 2
List[Work]: 2
List[Rating]: 2
typing.Optional[typing.Dict[(str, typing.Union[(str, typing.List[str])])]]: 2
'OptionDictType': 2
mparser.BooleanNode: 2
mparser.IdNode: 2
mparser.NumberNode: 2
mparser.StringNode: 2
mparser.ContinueNode: 2
mparser.BreakNode: 2
mparser.OrNode: 2
mparser.AndNode: 2
mparser.ComparisonNode: 2
mparser.ArithmeticNode: 2
mparser.NotNode: 2
mparser.CodeBlockNode: 2
mparser.IndexNode: 2
mparser.AssignmentNode: 2
mparser.PlusAssignmentNode: 2
mparser.UMinusNode: 2
mparser.TernaryNode: 2
mparser.ArgumentNode: 2
providers.Character: 2
providers.Alliance: 2
providers.Corporation: 2
DatabaseJanitorType: 2
Mapping[(CodingSchemaField, Any)]: 2
ArticleSet: 2
Rectangle: 2
List[CapitanSymbol]: 2
unittest.TestCase: 2
Recipe: 2
Union[(types.FunctionType, types.CoroutineType)]: 2
Union[(str, re._pattern_type)]: 2
Union[(str, slice)]: 2
Callable[(..., Optional[_CoroutineABC])]: 2
Callable[([Event], bool)]: 2
ArticleDB: 2
Type[ClassifierMixin]: 2
coo_matrix: 2
newspaper.Article: 2
Teacher: 2
List['Schedule']: 2
List[Column]: 2
Sequence[Record]: 2
Union[(str, Tuple[(str, ...)])]: 2
DgtTranslate: 2
Emailer: 2
DgtMenu: 2
UciShell: 2
CustomizableSerializer: 2
Dict[(str, Optional[Dict[(str, Any)]])]: 2
'MsgpackSerializer': 2
'JSONSerializer': 2
'CBORSerializer': 2
cbor2.CBOREncoder: 2
cbor2.CBORDecoder: 2
CallContext: 2
T_Options: 2
Union[(RegisterOptions, Dict[(str, Any)])]: 2
Union[(SubscribeOptions, Dict[(str, Any)])]: 2
Callable[([T_Event], bool)]: 2
AbstractEndpoint: 2
json_types: 2
Copy: 2
tsrc.Remote: 2
SkData: 2
RPCMethod: 2
CLRApi: 2
PlyHeader: 2
UTM_Coord: 2
Dict[(int, Udo)]: 2
Optional[ScryptParams]: 2
Type[BlockUIDType]: 2
Union[(Identity, str)]: 2
Type[RevocationType]: 2
Type[IdentityType]: 2
Type[CertificationType]: 2
Type[MembershipType]: 2
Type[CRCPubkeyType]: 2
typing.Union[(float, int)]: 2
SocketKind: 2
Sequence[ExtensionParameter]: 2
Sequence[Extension]: 2
Gconnect.NetworkProtocolPacket: 2
List[MacroStep]: 2
StateMixin: 2
ContactsT: 2
entity.Entity: 2
'tilemap.Tilemap': 2
filetype.ImageFile: 2
SDL_Texture: 2
_entity.Entity: 2
List[List[Tuple[(float, Tree)]]]: 2
Optional[List[List['Token']]]: 2
'GornTree': 2
Confirmation: 2
List[Confirmation]: 2
JobSchedule: 2
acton.database.Database: 2
Iterable[BinaryIO]: 2
Optional[Union[(list, str)]]: 2
'Rule': 2
Row: 2
List[field.Field]: 2
Union[(PhonemeList, str)]: 2
EventRule: 2
SExprOrStr: 2
Dict[(T1, Set[T2])]: 2
List[Union[('SExpr', str)]]: 2
Sequence[SExprOrStr]: 2
Union[(Iterable[Any], Iterator[Any])]: 2
Iterable[Tuple[(K, V)]]: 2
Union[(str, Sequence[Any])]: 2
LazyRecTuple: 2
Optional[Callable[([str, int], bool)]]: 2
Callable[([V], None)]: 2
Iterable[SMTExpr]: 2
L4Sort: 2
Optional[Solver]: 2
Optional[Term]: 2
SubsortGraph: 2
List[SExprOrStr]: 2
StatementList: 2
'SimpleTimeDeltaLit': 2
Portal: 2
Credentials: 2
UInt64: 2
GroupElementYear: 2
sickle.models.Record: 2
InfoTab: 2
Union[(float, int, str)]: 2
Mapping[(str, Mapping)]: 2
Tuple[(Callable, Callable)]: 2
PIL.Image.Image: 2
Union[(MimeType, str)]: 2
Union[(str, 'MimeType')]: 2
MoMMI: 2
MIdentifier: 2
Union[(str, callback_type)]: 2
MChannel: 2
DimmerCorrectionConfig: 2
OutgoingData: 2
textx.exceptions.TextXSyntaxError: 2
PlotlyNode: 2
List[Member]: 2
Optional[typing.StartableFactory]: 2
'ScheduledItem': 2
typing.ScheduledSingleOrPeriodicAction: 2
Callable[([F], G)]: 2
T_in: 2
Observer[T_out]: 2
Optional[SubComparer]: 2
Optional[MapperIndexed]: 2
Accumulator: 2
Callable[([], Observable)]: 2
PredicateIndexed: 2
Optional[Observable]: 2
Optional[Union[(Observable, Future)]]: 2
typing.Disposable: 2
Iterable[Observable]: 2
Union[(int, float, _FileSizeType)]: 2
Optional[Printer]: 2
abjad.OrderedDict: 2
typing.Tuple[(str, ...)]: 2
Udict: 2
IntOrFloat: 2
NumOrStrNoComplex: 2
Union[(Tuple[(int, int, int, int, int, int, int, int, int)], Tuple[(int, int, int, int, int, int, int, int, int, str)], Tuple[(int, int, int, int, int, int, int, int, int, str, int)])]: 2
Union[(str, Callable[([Match], str)])]: 2
'ProgramPoint': 2
'Edge': 2
'LyraType': 2
Dict[(LyraType, Type[Lattice])]: 2
'State': 2
Optional['State']: 2
TemplateManagerBase: 2
DSLContractSubclass: 2
rd.ReplayOutput: 2
rd.TextureDisplay: 2
rd.ShaderVariable: 2
rd.VarType: 2
rd.CaptureFile: 2
rd.ResourceFormat: 2
List[MeshAttribute]: 2
SandboxMixin: 2
ProblemMetadata: 2
Type[PKey]: 2
typing.AbstractSet[str]: 2
DummyNodeDriver: 2
MutableTransaction: 2
RpcNode: 2
DeckSpawnProto: 2
'BeneficialBuff': 2
'DoT': 2
Paladin: 2
'Zone': 2
[(str, int)]: 2
TwitchVideo: 2
TwitchAPI: 2
Storage: 2
'Subscriber': 2
VRep: 2
List[JSON]: 2
Search: 2
configuration.Configuration: 2
nn.FeedForwardNetwork: 2
RangeOption(section='main', sort_tag='a', documentation_string='This is a number', default_value=3): 2
StringOption(section='main', sort_tag='c', documentation_string='This is a string', default_value='with a default value'): 2
DateOption(section='main', sort_tag='d', documentation_string='This is a date', default_value="(lambda () (cons 'absolute (cons (current-time) 0)))"): 2
RangeOption(section='main', sort_tag='b', documentation_string='This is a number', default_value=3): 2
StorageProvenanceRecord: 2
ExtractionProvenanceRecord: 2
Union[(str, URI)]: 2
List[URI]: 2
Strategy: 2
ETK: 2
conu.DockerContainer: 2
conu.DockerBackend: 2
're.Match': 2
'base.BodhiMessage': 2
typing.Mapping[(str, typing.Any)]: 2
BlockNode: 2
List[pathlib.Path]: 2
SpeechModel: 2
EvalStatistics: 2
Dict[(bytes, IndexEntry)]: 2
IndexEntry: 2
ArchiveView: 2
Prometheus: 2
objectify.ObjectifiedElement: 2
nn.RNN: 2
ImageManifest: 2
ExReaction: 2
'Metabolite': 2
'Optional[List[Dict]]': 2
'Optional[List]': 2
'Optional[Tuple[int, int]]': 2
'List[Dict]': 2
'Optional[Union[Dict,List]]': 2
Diagnostic: 2
'Optional[Callable[[str], None]]': 2
'sublime.Window': 2
'List[ParameterInformation]': 2
ScopeRenderer: 2
'Settings': 2
'Optional[sublime.Window]': 2
sublime.Region: 2
io.IOBase: 2
PrometheusMetrics: 2
AuthInfo: 2
VerseDict: 2
QAJSON: 2
MetaPlugin: 2
PendingEntry: 2
List[Posting]: 2
List[reconcile.PendingEntry]: 2
InvalidSourceReference: 2
MintEntry: 2
JournalEditor: 2
ultipro_google_statement.ParseResult: 2
Optional[datetime.tzinfo]: 2
Binder: 2
ProjectSet: 2
List[RuleGeneric]: 2
Dict[(str, Union[(str, dict)])]: 2
Class: 2
JSONType: 2
GooglePhotosMedia: 2
Mapping[(str, DatabaseMedia)]: 2
DatabaseMedia: 2
List[HostInfoGetter]: 2
Engine.Change: 2
PyQt5.QtWidgets.QWidget: 2
LucidModel: 2
'AsyncRunner': 2
BaseNetwork: 2
AutoencoderController: 2
MaximizationController: 2
Toolbox.Change: 2
Datasource.Change: 2
Date: 2
Email: 2
Float: 2
GroupReservation: 2
CheckEnum: 2
Gitter: 2
MatrixHandle: 2
IRCHandle: 2
XMPPHandle: 2
WechatHandle: 2
FileNameSettings: 2
MediaType: 2
TestDataLoader: 2
L1AVariables: 2
'AuxiliaryFileReader': 2
FigureWriter: 2
Part: 2
Dict[(Interval, IntervalDuration)]: 2
tarfile.TarFile: 2
List[socket]: 2
TestRunInfo: 2
InstalledAppInfo: 2
InstalledTestInfo: 2
Optional[LoggingMetadata]: 2
HIDButtonType: 2
ConnectionDestination: 2
DaemonProvider: 2
CompanionProvider: 2
DaemonContextProvider: 2
urllib.request.Request: 2
Union[(List[str], List[float])]: 2
HttpsServerManage: 2
DefaultDict[(str, str)]: 2
Opt[List[Any]]: 2
Union[(EventList, List[TIME_FORMAT])]: 2
LIST_3D: 2
AnyGraph: 2
Callable[([_T], Union[(bool, Awaitable[bool])])]: 2
Union[(AsyncIterable[_T], Iterable[_T])]: 2
discord.Permissions: 2
Sequence[datetime.datetime]: 2
webdriver.PhantomJS: 2
SingleCheckpoint: 2
RunPhase: 2
AttentionActionSpace: 2
List[AgentParameters]: 2
Union[(EnvironmentSteps, List[EnvironmentSteps])]: 2
SingleEpisodeBuffer: 2
Union[(None, int)]: 2
Union[(List, MiddlewareScheme)]: 2
layers.Conv2d: 2
layers.BatchnormActivationDropout: 2
layers.Dense: 2
tf.train.ClusterSpec: 2
Union[(Generator[(NDArray, NDArray, NDArray)], List[NDArray], Tuple[NDArray])]: 2
List[NDArray]: 2
Union[(tuple, list, Any)]: 2
Loss: 2
Union[(HuberLoss, L2Loss)]: 2
MemoryBackendParameters: 2
HindsightGoalSelectionMethod: 2
GoalsSpace: 2
pandas.Series: 2
_RequirementKind: 2
typing.Tuple[(float, float)]: 2
_Recipient: 2
'_MailjetParseJson': 2
action_pb2.ActionTemplate: 2
typing.Dict[(str, float)]: 2
typing.Dict[(str, typing.List[str])]: 2
advisor_pb2.AdviceModule: 2
project_pb2.Advice: 2
typing.Optional[typing.List[typing.Callable[([typing.Dict[(str, typing.Any)]], None)]]]: 2
GeoLocalizationProtocol: 2
elasticsearch.Elasticsearch: 2
typing.Optional[typing.Dict[(str, str)]]: 2
date_type: 2
TradeAction: 2
(datetime or str): 2
DataHandler: 2
MarketEvent: 2
(pd.DatetimeIndex or DateRange): 2
Optional[Sequence[User]]: 2
Optional[Project]: 2
ExistingProjectParameter: 2
StreamDevice: 2
Union[(bytes, int)]: 2
Union[(Iterable, bytes, bytearray, None)]: 2
Optional[Conductor]: 2
Union[(str, object)]: 2
Optional[click.Context]: 2
'MachineOutputRenderer': 2
Optional[Tuple[int]]: 2
'SuperSegmentationObject': 2
Set[Point2]: 2
Point2: 2
Union[(Set[int], List[int], Dict[(int, Any)])]: 2
'SensorGroup': 2
Union[(int, Duration, Timer)]: 2
Optional[PayloadMeta]: 2
DefaultDict[(str, List[str])]: 2
Optional[Dict[(str, Dict)]]: 2
SystemRDLParser.RootContext: 2
SystemRDLParser.Property_definitionContext: 2
SystemRDLParser.Property_bodyContext: 2
SystemRDLParser.Property_typeContext: 2
SystemRDLParser.Property_defaultContext: 2
SystemRDLParser.Property_usageContext: 2
SystemRDLParser.Property_componentContext: 2
SystemRDLParser.Property_boolean_typeContext: 2
SystemRDLParser.Property_string_typeContext: 2
SystemRDLParser.Property_number_typeContext: 2
SystemRDLParser.Property_ref_typeContext: 2
SystemRDLParser.Component_defContext: 2
SystemRDLParser.Explicit_component_instContext: 2
SystemRDLParser.Anonymous_component_inst_elemsContext: 2
SystemRDLParser.Component_inst_elemContext: 2
SystemRDLParser.ArrayContext: 2
SystemRDLParser.Instance_refContext: 2
SystemRDLParser.Instance_ref_elemContext: 2
SystemRDLParser.Property_assignContext: 2
SystemRDLParser.Default_property_assignContext: 2
SystemRDLParser.Explicit_property_assignContext: 2
SystemRDLParser.Post_property_assignContext: 2
SystemRDLParser.Property_assign_rhsContext: 2
SystemRDLParser.ConcatContext: 2
SystemRDLParser.Concat_elemContext: 2
SystemRDLParser.S_propertyContext: 2
SystemRDLParser.Property_rvalue_constantContext: 2
SystemRDLParser.Property_modifierContext: 2
SystemRDLParser.S_idContext: 2
SystemRDLParser.NumContext: 2
SystemRDLParser.StringContext: 2
SystemRDLParser.Enum_defContext: 2
SystemRDLParser.Enum_bodyContext: 2
SystemRDLParser.Enum_entryContext: 2
SystemRDLParser.Enum_property_assignContext: 2
[Number]: 2
MetarData: 2
TafData: 2
Union[(None, _Node)]: 2
List[Tuple[(str, str, int)]]: 2
OpenSslFileTypeEnum: 2
Callable[([bytes, bytes], bytes)]: 2
'input is fastq; disable autodetection': 2
'show progress bar (sent to stderr)': 2
'path to fasta input': 2
Sequence[Path]: 2
EventHandler: 2
events.Event: 2
wave.Wave_read: 2
base_data_model.BaseDataModel: 2
[sql_query_column_model]: 2
base_file_handler.BaseFileHandler: 2
init_data_model.InitDataModel: 2
ray.ObjectID: 2
NumberSequence: 2
Orderer: 2
Cart: 2
ArticleID: 2
OrgaTeam: 2
Set[Enum]: 2
SeatGroup: 2
MatchCommentID: 2
Optional[UserID]: 2
VersionID: 2
Brand: 2
Set[TicketID]: 2
TicketCode: 2
List[PartyID]: 2
Party: 2
DateOrDateTime: 2
FilenameOrStream: 2
UserEvent: 2
Dict[(VersionID, Version)]: 2
QueryManager: 2
Optional[RepositoryNameList]: 2
Tuple[(Union[(str, None)], ...)]: 2
Optional[WalkTreeFilter]: 2
Iterable[Union[(str, Dict[(str, str)])]]: 2
Optional[datetime.date]: 2
chkit.ConfigMap: 2
List[Tuple[(str, int, int)]]: 2
LedLevel: 2
'Dimensions': 2
grids.MonomeGrid: 2
Dict[(UIActionEnum, actions.Action)]: 2
Tuple[(datetime, datetime)]: 2
EoFields: 2
StateAction: 2
WorkspaceTab: 2
'VirtualBaseController': 2
DatabaseConfig: 2
Clocked: 2
sa.MetaData: 2
declarative.DeclarativeMeta: 2
T_PROPS: 2
Iterable[SignedTransaction]: 2
SettingsSource: 2
SpiderFactory: 2
IsAdminHandlerFilter: 2
UsersUseCase: 2
HandlerFilter: 2
List[HandlerFilter]: 2
BuildingsUseCase: 2
Interfaces.InterfaceHolder: 2
PWE_ASP_Meta_DataParser.AspFileContext: 2
PWE_ASP_Meta_DataParser.CommentContext: 2
PWE_ASP_Meta_DataParser.Meta_data_commentContext: 2
PWE_ASP_Meta_DataParser.Graphviz_graph_style_optionContext: 2
PWE_ASP_Meta_DataParser.Graphviz_node_style_optionContext: 2
PWE_ASP_Meta_DataParser.Graphviz_edge_style_optionContext: 2
DLV_OutParser.Atom_contentContext: 2
ClingoParser.ClingoOutputContext: 2
ClingoParser.PwContext: 2
ClingoParser.FactContext: 2
ClingoParser.Fact_contentContext: 2
ClingoParser.SummaryContext: 2
ClingoParser.ModelsContext: 2
ClingoParser.OptimumContext: 2
ClingoParser.OptimizationContext: 2
ClingoParser.CallsContext: 2
ClingoParser.TimeContext: 2
ClingoParser.CpuTimeContext: 2
LaunchDescription: 2
LaunchDescriptionEntity: 2
'Executor': 2
SrvType: 2
SrvTypeRequest: 2
_usb.core.Device: 2
JudgingExpo: 2
ScanRecord: 2
I1: 2
FolderList: 2
model.Script: 2
QDragMoveEvent: 2
model.Folder: 2
cm.GlobalHotkey: 2
DAG: 2
DagModel: 2
Optional[Union[(dict, str)]]: 2
IOWrappable: 2
Sequence[BinaryIO]: 2
Translations: 2
catalog.Catalog: 2
ElementTree.ElementTree: 2
BodyState: 2
Tenant: 2
KeyPair: 2
ChangeRequest: 2
QtCore.QModelIndex: 2
'People': 2
Sequence['People']: 2
Sequence['Comment']: 2
Optional[Dict[(str, float)]]: 2
Optional[SimAlgorithm]: 2
SubjectId: 2
Set[ClassId]: 2
Gaf: 2
RepairState: 2
BaseRealmComponent: 2
BaseBlockStoreComponent: 2
BaseUserComponent: 2
LocalStorage: 2
UserManifest: 2
LocalUserManifest: 2
Buffer: 2
OpenBurnGrain: 2
CloseCallbackType: 2
ReturnCallbackType: 2
ExchangeType: 2
ReturnedMessage: 2
typing.IO[bytes]: 2
InterceptorType: 2
typing.Optional[urlmatch.UrlPattern]: 2
urlmatch.UrlPattern: 2
Iterable[TypeStr]: 2
Decodable: 2
SecretInfo: 2
R: 2
Optional[IRServiceResolver]: 2
ViewMode: 2
_Logger: 2
dns.Query: 2
PalletBuilder: 2
UncertainDemand: 2
PartitionInfo: 2
'ApartCore': 2
TransformerConfig: 2
encoder.EmbeddingConfig: 2
model.ModelConfig: 2
ScoringModel: 2
List[vocab.Vocab]: 2
vocab.Vocab: 2
ImageLoadedCnnEncoderConfig: 2
List[TranslatorInput]: 2
List[Value]: 2
Union[(Future, Coroutine)]: 2
Dict[(str, DefineEntity)]: 2
'Instance': 2
List[Exception]: 2
'NamedType': 2
Dict[(object, ResultVariable)]: 2
'Reference': 2
typing.List[typing.Tuple[(LocatableString, ExpressionStatement)]]: 2
Dict[(str, common.ArgOption)]: 2
'RESTServer': 2
'any': 2
Sequence[base_metric.MetricImplementation]: 2
QueryBuilder: 2
Iterable[Join]: 2
XPath: 2
MultiMC: 2
JoseBot: 2
Callable[([Schema], Mapping[(str, Any)])]: 2
Union[(dt.date, str)]: 2
Optional[Point]: 2
cozmo.lights.Color: 2
cusparseMatDescr_t: 2
Optional[np.array]: 2
List[BaseStation]: 2
Operators: 2
BucketList: 2
Union[(str, Mapping[(str, str)])]: 2
Optional[RawConfigParser]: 2
Lines: 2
'project.Project': 2
DiffractionGenerator: 2
VDFGenerator: 2
dropbox.Dropbox: 2
IrwinQueue: 2
List[PlayerID]: 2
AnalysedPosition: 2
EngineEval: 2
Analysis: 2
AnalysedMove: 2
List[Priv]: 2
TokenID: 2
AnalysedGamePrediction: 2
List[GameAnalysedGame]: 2
List[GameTensor]: 2
AnalysedGameActivation: 2
List[AnalysedGameTensor]: 2
BasicGameActivation: 2
Sequence[Mapping[(str, Any)]]: 2
Optional[MutableMapping[(Any, Any)]]: 2
PEP440Adapter: 2
Union[(Iterable[str], str)]: 2
Union[('DebianVersion', Any, None)]: 2
'list of party.Party': 2
ViberUserProfile: 2
tarfile.TarInfo: 2
UserInventory: 2
QtGui.QKeyEvent: 2
ToolsLauncher: 2
ConflictedFileAnalyser: 2
List[I]: 2
List[CommonSubSeq[S]]: 2
list([int]): 2
defaultdict(set): 2
list([Element]): 2
FunctionBodyNode: 2
TargetType: 2
Union[(BalanceProofSignedState, BalanceProofUnsignedState)]: 2
UserDeposit: 2
TokenNetworkRegistry: 2
List[StateChange]: 2
List[Secret]: 2
TokenNetwork: 2
WithdrawAmount: 2
StateChangeID: 2
SendMessageEvent: 2
BlockchainServices: 2
List[ParsedURL]: 2
RaidenEvent: 2
Type[Event]: 2
BlockchainEvent: 2
Endpoint: 2
Union[(str, PathLike)]: 2
HTTPConnection: 2
typing.AddressHex: 2
StepOutput: 2
ResultLogger: 2
AdditionEnv: 2
Serial: 2
FaceRecognition: 2
(int, str, str, str, int, int, str): 2
MRS: 2
FromFmt: 2
ToFmt: 2
List[Ext]: 2
Dict[(LongOpt, Optional[Text])]: 2
CodeStyle: 2
Iterable[Ext]: 2
Ext: 2
(datetime.datetime or None): 2
Gtk.ListBox: 2
Gtk.ListBoxRow: 2
Gtk.Entry: 2
JobDB: 2
ElianCharacter: 2
Optional[ColorArg]: 2
FieldInfoPacket: 2
ConfigHeader: 2
LoadoutPreset: 2
AgentPreset: 2
Physics: 2
random.Random: 2
STEP_RENAME: 2
typing.Union[(Project, None)]: 2
typing.Union[(ProjectStep, str)]: 2
typing.List[float]: 2
typing.Union[(dict, int)]: 2
scaffolds.ResultsTest: 2
FlaskResponse: 2
Union[(Locale, str)]: 2
urllib.parse.ParseResult: 2
TorchSeqRecognizer: 2
TrainScheduler: 2
HTTPMethod: 2
Union[(Payload, str)]: 2
Media: 2
SValues: 2
Sequence[Point]: 2
Sequence[ECSS]: 2
websockets.WebSocketServerProtocol: 2
Optional[PositionalLabel]: 2
List[LabeledExample]: 2
CachedLabeledSpectrogram: 2
Iterable[E]: 2
Dgt: 2
mathutils.Matrix: 2
ProgressiveTSInformation: 2
MP4Muxing: 2
AbstractMP4Representation: 2
DASHNamespace: 2
AbstractAdaptationSet: 2
AudioAdaptationSet: 2
VideoAdaptationSet: 2
SubtitleAdaptationSet: 2
CustomXMLElement: 2
VttMedia: 2
TextFilter: 2
DenoiseHqdn3dFilter: 2
ScaleFilter: 2
AudioMixFilter: 2
RotateFilter: 2
CropFilter: 2
DeinterlaceFilter: 2
UnsharpFilter: 2
InterlaceFilter: 2
HTTPSInput: 2
S3RoleBasedInput: 2
SFTPInput: 2
ZixiInput: 2
HTTPInput: 2
AsperaInput: 2
S3Input: 2
AzureInput: 2
GenericS3Input: 2
LocalInput: 2
FTPInput: 2
GCSInput: 2
VP9CodecConfiguration: 2
VorbisCodecConfiguration: 2
AACCodecConfiguration: 2
MP2CodecConfiguration: 2
EAC3CodecConfiguration: 2
AC3CodecConfiguration: 2
MJPEGCodecConfiguration: 2
MP3CodecConfiguration: 2
OpusCodecConfiguration: 2
HeAACv2CodecConfiguration: 2
HeAACv1CodecConfiguration: 2
KubernetesInfrastructure: 2
AzureOutput: 2
GenericS3Output: 2
S3RoleBasedOutput: 2
GCSOutput: 2
SFTPOutput: 2
FTPOutput: 2
AkamaiNetStorageOutput: 2
LocalOutput: 2
S3Output: 2
ProgressiveMOVMuxing: 2
WebMMuxing: 2
H264PictureTimingTrimmingInputStream: 2
TSMuxing: 2
ConcatenationInputStream: 2
ConcatenationInputStreamConfiguration: 2
Keyframe: 2
ProgressiveWebMMuxing: 2
TimeCodeTrackTrimmingInputStream: 2
Thumbnail: 2
TimeBasedTrimmingInputStream: 2
FrameIdID3Tag: 2
PlainTextID3Tag: 2
RawID3Tag: 2
BurnInSrtSubtitle: 2
MarlinDRM: 2
ClearKeyDRM: 2
PlayReadyDRM: 2
PrimeTimeDRM: 2
WidevineDRM: 2
email.message.Message: 2
Callable[([], List['app.master.slave.Slave'])]: 2
pySMART.Device: 2
EraseType: 2
Smart: 2
Dict[(str, hex)]: 2
Tuple[(str, Tuple)]: 2
Union[(Torrent, Dict[(str, TorrentEntryAttrs)])]: 2
TorrentsCache: 2
Optional[Torrent]: 2
List[WithStat]: 2
datacache.TorrentsCache: 2
Optional[Dict[(str, web.MultipartFile)]]: 2
_CallbackKind: 2
'Span': 2
Callable[([extractors.misc.Section], bool)]: 2
SignalFrame: 2
FilterType: 2
Modulator: 2
SimulatorMessage: 2
SimulatorConfiguration: 2
ProtocolTreeItem: 2
RingBuffer: 2
QCheckBox: 2
TibrvTimer: 2
TibrvFtMonitor: 2
tibrvcmEvent: 2
TibrvFtMemberCallback: 2
tibrvEventCallback: 2
Optional[PDF]: 2
Aggregateby: 2
Groupby: 2
Iterable[UserProxyType]: 2
Iterable[GroupProxyType]: 2
Iterable[PropertyProxyType]: 2
DecoratedInType: 2
PaymentDetails: 2
DataSource: 2
Dormitory: 2
typing.Sequence['Field']: 2
AzureApi: 2
KubePod: 2
[lekvar.Type]: 2
[lekvar.Object]: 2
[Type]: 2
{Type: {Type}}: 2
[(ForwardObject, Object)]: 2
lekvar.Module: 2
PartnerFlag: 2
PartnerVendorNumber: 2
Configuration.Name: 2
QBlogSync: 2
Solicitation: 2
Role.Id: 2
Right.Id: 2
Person.Id: 2
BlogType: 2
LanguageEntity: 2
QBlog: 2
BlogMedia.Id: 2
BlogCollaboratorGroup: 2
QUser: 2
BlogCollaborator.Id: 2
QMetaInfo: 2
MetaType.Id: 2
ValidationRule: 2
ClientFactory: 2
Iterable[kube.Resource]: 2
AudioSourceInfo: 2
Iterator[np.ndarray]: 2
typing.List[typing.Optional[asyncio.Task]]: 2
AbstractBlob: 2
'AbstractBlob': 2
typing.Optional[Exception]: 2
typing.Optional[bool]: 2
typing.List[blob_response_types]: 2
typing.Optional[typing.Dict]: 2
'Output': 2
'SQLiteStorage': 2
typing.Optional[typing.List]: 2
BroadcastSubscription: 2
'WalletStorage': 2
'TypeBase': 2
TypeBase: 2
List[Task]: 2
elm_project.ElmProject: 2
List[ModuleName]: 2
Union[(tk.Widget, tk.Wm)]: 2
typing.Iterable[Transition]: 2
Tuple[(list, dict, dict)]: 2
Optional[logging.Formatter]: 2
SpecFile: 2
ApiextensionsV1beta1Api: 2
AgentABC: 2
ChatParser.NameContext: 2
ChatParser.ColorContext: 2
BoundaryImpl: 2
Union[(Iterable[float], float)]: 2
Dict[(str, Union[(None, np.ndarray)])]: 2
Optional[Tuple[(np.ndarray, np.ndarray)]]: 2
Composer: 2
Iterable[object]: 2
bpy.types.Texture: 2
'Repo': 2
'ExternalRepo': 2
'ExperimentGroup': 2
'NotebookJob': 2
'TensorboardJob': 2
'PodStateConfig': 2
'ClusterNode': 2
Dict[(str, Iterable)]: 2
Union[(IO, bool)]: 2
JobConfig: 2
ReceptorFrame: 2
List[Image]: 2
Union[('DataArray', 'Dataset')]: 2
netaddr.IPNetwork: 2
IPSecInfoEntry: 2
List[Comment]: 2
Callable[([List[int]], float)]: 2
Dict[(Tuple[(int, ...)], int)]: 2
FPTree: 2
RecentType: 2
ctypes.c_char_p: 2
'glotaran.models.spectral_temporal.KineticModel': 2
'ParameterGroup': 2
typing.Dict[(str, np.ndarray)]: 2
'glotaran.model.Model': 2
typing.Union[(bool, typing.Callable[([None], bool)])]: 2
typing.List[Callback]: 2
'mz.ParamTable': 2
typing.Union[(str, BaseMetric)]: 2
BaseTask: 2
typing.Type[BaseModel]: 2
typing.Optional[BasePreprocessor]: 2
typing.Optional['mz.Embedding']: 2
ConvertRequest: 2
Dict[(str, ndarray)]: 2
Dict[(str, Union[(Dict, List)])]: 2
OrderedComponentSet: 2
List[TaskProxy]: 2
Optional[Union[(Path, str)]]: 2
Dict[(MessageEntity, str)]: 2
GraphQLType: 2
List[GrappleTypeDef]: 2
IndexDefinition: 2
List[UUID]: 2
sparse.coo_matrix: 2
loompy.AttributeManager: 2
loompy.GraphManager: 2
h5py.File: 2
ttk.Entry: 2
control.Database: 2
List['pig.Pig']: 2
event.Event1: 2
payee.Payee: 2
UIKeyModifier: 2
UIEventKeyCode: 2
'WbScmAddProjectWizard': 2
Dict[(str, Default)]: 2
tornado.httputil.HTTPServerRequest: 2
Exports.Exports: 2
Timers.Timers: 2
ModuleDefinition: 2
Timer: 2
IRCServer.Server: 2
IRCLine.SentLine: 2
'IRCChannel.Channel': 2
typing.List[typing.Tuple[(str, typing.Any)]]: 2
TOP_10_CALLABLE: 2
typing.AnyStr: 2
utils.consts.IRCColor: 2
'IRCUser': 2
Gio.ListModel: 2
hints.SystemType: 2
RR: 2
jinja2.Template: 2
HELEMENT: 2
'Nougat': 2
DataCollector: 2
ConverterIo: 2
SocialToken: 2
AccountPermissionType: 2
typing.Optional[GitHubFacade]: 2
typing.Type[Source]: 2
typing.Set[ProjectPermissionType]: 2
typing.List[DirectoryListEntry]: 2
SessionStatus: 2
DirectoryListEntry: 2
XrandrConnection: 2
IkaType: 2
range_int(0, 10): 2
range_int(0): 2
Union[(V, List[V])]: 2
Iterator[T]: 2
Optional[google.auth.credentials.Credentials]: 2
CursorKind: 2
RatingContestant: 2
qiime2.Metadata: 2
qiime2.MetadataColumn: 2
IntSequenceFormatV2: 2
MappingDirectoryFormat: 2
typing.Union[(list, dict)]: 2
UsagePage.__class__: 2
DPTBase: 2
GatewayScanFilter: 2
FileSystemEvent: 2
QLink: 2
Union[(Tuple[int], List[int])]: 2
List[TrackedObject]: 2
Union[(np.ndarray, List[int])]: 2
processor.QClient: 2
List[bayesianpy.template.Template]: 2
Callable[([pd.DataFrame], pd.DataFrame)]: 2
'TableAccessor': 2
OptimizationSetting: 2
List[BarData]: 2
HistoryRequest: 2
Sequence[BarData]: 2
Sequence[TickData]: 2
Union[(dict, str, bytes)]: 2
Optional[Request]: 2
('batch', 'sequence', 'embedding'): 2
('batch', 'words'): 2
ChangeType: 2
Changelog: 2
SignalsTuple: 2
Dict[(BinOp, UnaryOp)]: 2
Iterable[Label]: 2
List[Signal]: 2
(str or Iterable[str]): 2
AHT: 2
Iterable[Transition]: 2
ExtLabel: 2
DstFormulaProp: 2
SharedAHT: 2
Dict[(Label, Set[Tuple[(bool, NBWNode)]])]: 2
Iterable[AHTTransition]: 2
TaskCreator: 2
CityInfo: 2
Dict[(str, Union[(int, str)])]: 2
Callable[([str, int], str)]: 2
Sequence[Notebook]: 2
ptr16: 2
Optional[Selector]: 2
TcpCommand: 2
EventRecord: 2
Sequence[Event]: 2
AslDb: 2
session: 2
ResultList: 2
ExtSafeConstructor: 2
SceneDescription: 2
moderngl.Buffer: 2
Union[(Decimal, float)]: 2
TrackingCode: 2
Union[(State, str)]: 2
Union[(Phone, str)]: 2
Union[(Decimal, str)]: 2
ShiftFunction: 2
SiteConfigModel: 2
List[BoardModel]: 2
TraitType: 2
Bucket: 2
APIClient: 2
Union[(List[float], Tuple[(float, float)])]: 2
[Branch, Tag]: 2
ObjetoDoJogo: 2
_DSFNode: 2
ResponseTypes: 2
entity.Point: 2
entity.Rect: 2
entity.Circle: 2
List[TAG]: 2
Stm.VarDecl: 2
Stm.If: 2
Stm.While: 2
Stm.Break: 2
Stm.Return: 2
Stm.Print: 2
Stm.Exp: 2
Exp.Assign: 2
Exp.Binary: 2
Exp.Unary: 2
Exp.Call: 2
Exp.Literal: 2
HeaterInterface: 2
PluginInfo: 2
List[RPCTeacherInCourseItem]: 2
collections.abc.Iterator: 1
Type[BaseConnector]: 1
'md_table.TableMetadata': 1
'BaseConnector': 1
'Sqlite3Connector': 1
aiomysql.DictCursor: 1
'AiomysqlConnector': 1
'AsyncpgConnector': 1
typing.Callable[([], typing.Tuple[(str, str)])]: 1
typing.Callable[([str], str)]: 1
typing.Union[(bytes, str)]: 1
'md_table.AliasedTable': 1
'Column': 1
'typing.Union[md_types.ColumnType, typing.Type[md_types.ColumnType]]': 1
'md_table.TableMeta': 1
False: 1
asyncio.AbstractServer: 1
futures.Executor: 1
BasePacket: 1
types.GeneratorType: 1
Curiosity: 1
FormDataParser: 1
'RouteGroup': 1
typing.Union[(dict, list)]: 1
'TestKyoukai': 1
SSTV: 1
typing.List[OAuth2Scope]: 1
Callable[([], Union[(Awaitable[List[Any]], Coroutine[(None, None, Any)])])]: 1
'typing.List[dt_message.Message]': 1
'SearchQuery': 1
'dt_guild.Guild': 1
'client.Client': 1
'AvatarUrl': 1
target_thint: 1
'typing.Union[dt_member.Member, dt_role.Role]': 1
typing.Union[(str, typing.List[str], typing.List[Embed])]: 1
typing.Union[(Member, User)]: 1
RichPresence: 1
Union[(str, Iterable[str], Callable[([Client, Message], str)])]: 1
Tuple[(int, float)]: 1
'Type[md_plugin.Plugin]': 1
ButtonEvents: 1
AdvancedGesture: 1
nuimo.LedMatrix: 1
AppListener: 1
nuimo.Controller: 1
NuimoMenue: 1
docutils.nodes.Node: 1
Union[(RGBColor, str, Tuple[(int, int, int)], Tuple[(int, int, int, int)], List[int])]: 1
ShowConfig: 1
'Playfield': 1
HardwareRule: 1
SettingEntry: 1
'PlatformBatchLightSystem': 1
'PlatformBatchLight': 1
FASTDirectLED: 1
'OppHardwarePlatform': 1
ActiveSequence: 1
BallActivity: 1
EjectTracker: 1
List[ServiceMenuEntry]: 1
run_command.Policy: 1
BuildSystem: 1
ProgressSaver: 1
List[Weather]: 1
Language: 1
ConcurrencyPriority: 1
IntegrationSettings: 1
CommandSettings: 1
HomeSettings: 1
WeatherForecast: 1
Union[(rdflib.graph.Graph, str)]: 1
'EventTracer': 1
EventListener: 1
Optional[Union[(bool, str, int)]]: 1
Optional[Union[(SupportsInt, str, bytes)]]: 1
FrozenSet[T]: 1
Optional[ROSWire]: 1
CoverageLevel: 1
Optional[Collection[Sanitiser]]: 1
TypeDatabase: 1
subprocess.CompletedProcess: 1
TProcessItems: 1
Sequence[Dict[(str, Any)]]: 1
pika.BasicProperties: 1
pika.BlockingConnection: 1
pika.channel.Channel: 1
VirtualHost: 1
MessageLogViewset: 1
types.FrameType: 1
Callable[([argparse.Namespace], None)]: 1
Optional[ArgParserType]: 1
Set[ManagerStatus]: 1
Union[(Mapping[(str, Any)], Sequence[str])]: 1
IPNetwork: 1
APIConfig: 1
AsyncSession: 1
ResultSportident: 1
Scaler: 1
Type[rest.errors.BaseHttpError]: 1
model.Snapshot: 1
Optional[model.TagCategory]: 1
List[Tuple[(List[str], T)]]: 1
BaseSearchConfig: 1
Callable[([SaQuery], None)]: 1
Optional[model.Post]: 1
Callable[([Base], Tuple[(Base, Callable[([Base], Any)])])]: 1
Callable[([str, Any], Any)]: 1
Callable[([Exception], None)]: 1
Union[(object, bytes)]: 1
Union[(object, List[Any])]: 1
Union[(object, List[int])]: 1
Union[(object, List[str])]: 1
Union[(object, str)]: 1
Union[(object, int)]: 1
Union[(object, bool)]: 1
List[cmd.CommandBase]: 1
cmd.CommandBase: 1
QtWidgets.QMainWindow: 1
QtWidgets.QAbstractButton: 1
T.Union[(int, float, None)]: 1
MacroType: 1
T.Dict[(Path, FontInfo)]: 1
T.Dict[(str, float)]: 1
AssStyleList: 1
T.Union[(AssEvent, T.List[AssEvent])]: 1
List[PluginBase]: 1
CachedTag: 1
Json: 1
Optional[DownloadHistory]: 1
urwid.MainLoop: 1
common.TagList: 1
common.UploadSettings: 1
urwid.Widget: 1
T.List[EdictGlossary]: 1
T.List[EdictJapanese]: 1
T.Pattern: 1
T.Iterable[str]: 1
parser.EdictEntry: 1
T.Iterable[parser.EdictEntry]: 1
enum.Flag: 1
T.Dict[(str, T.Dict[(str, str)])]: 1
DownloadStats: 1
PruneStats: 1
Force: 1
T.Callable[([], None)]: 1
T.Type[BaseException]: 1
types.TracebackType: 1
T.Callable[([Notification], None)]: 1
T.List[T.Tuple[(str, str)]]: 1
WorkspacesUpdater: 1
QtCore.QSize: 1
VolumeUpdater: 1
CurrencyUpdater: 1
BatteryUpdater: 1
NetworkUpdater: 1
NotificationsUpdater: 1
WindowTitleUpdater: 1
MpvmdUpdater: 1
Iterator[BaseURLFilter]: 1
Optional[BaseURLTable]: 1
Callable[([], Connection)]: 1
Optional[Callable[([tuple, str], Connection)]]: 1
Optional[Callable[([tuple, str], SSLConnection)]]: 1
List[AddressInfo]: 1
Optional[List[DNSInfo]]: 1
IPFamilyPreference: 1
Optional[FIFOCache]: 1
dns.resolver.Answer: 1
Iterator[AddURLInfo]: 1
Optional[URLResult]: 1
Optional[ItemQueue]: 1
Iterator[Pipeline]: 1
Factory: 1
BaseProcessor: 1
FTPProcessor: 1
ListingResponse: 1
Callable[(..., PhantomJSDriver)]: 1
ProcessingRule: 1
PhantomJSParams: 1
PipelineSeries: 1
Optional['EventDispatcher']: 1
QueuedFileSession: 1
HTTPSession: 1
FTPSession: 1
Union[(IO, asyncio.StreamWriter)]: 1
weakref.WeakKeyDictionary: 1
Reply: 1
Callable[([tuple], Connection)]: 1
Callable[([Connection], DataStream)]: 1
DataStream: 1
Optional[ConnectionPool]: 1
Callable[(..., Stream)]: 1
Union[(IO[bytes], asyncio.StreamWriter, None)]: 1
WebClient: 1
RobotsTxtPool: 1
RedirectTracker: 1
Optional[IO[bytes]]: 1
Optional[Callable[(..., RedirectTracker)]]: 1
'Bot': 1
PokemonInfo: 1
TPPBotFacade: 1
PipelineStatus: 1
ProcessorContext: 1
Optional[Type[Warning]]: 1
Optional[Union[(Dict, Callable[([Any], Any)])]]: 1
List[Tuple[(str, Any)]]: 1
DataFrameFormatter: 1
Union[(Dict, List[Dict])]: 1
DateOffset: 1
List[DiffItem]: 1
List['DiffItem']: 1
Tuple[(Optional[type], Optional[BaseException], Optional[types.TracebackType])]: 1
'futures.Future[_T]': 1
Callable[(['futures.Future[_T]'], None)]: 1
Callable[(['Future[_T]'], None)]: 1
Union[(None, float, datetime.timedelta)]: 1
'Queue[_T]': 1
'WSGIAppType': 1
Union[(str, Callable[([str], str)])]: 1
typing.Match: 1
Optional[Union[(Dict[(str, Any)], ssl.SSLContext)]]: 1
Iterable[socket.socket]: 1
IOStream: 1
Callable[([socket.AddressFamily, Tuple], Tuple[(IOStream, 'Future[IOStream]')])]: 1
'Future[IOStream]': 1
Union[(float, datetime.timedelta)]: 1
Optional[concurrent.futures.Executor]: 1
Soup.Session: 1
typing.Type[Gtk.Widget]: 1
typing.Callable[([], bool)]: 1
Gtk.Label: 1
ULIDPrimitive: 1
TimestampPrimitive: 1
RandomnessPrimitive: 1
TemplateType: 1
NotebookNode: 1
V1Toleration: 1
ComponentSpec: 1
TaskSpec: 1
Union[(V1alpha1ArtifactLocation, Dict[(str, Any)])]: 1
_container_op.BaseOp: 1
_ops_group.OpsGroup: 1
_container_op.ContainerOp: 1
Dict[(str, dsl.PipelineParam)]: 1
Union[(int, str, bool)]: 1
'TestModel1': 1
Optional[Dict[(str, 'TestModel1')]]: 1
Optional[Union[('TestModel1', List['TestModel1'])]]: 1
List[KFModel]: 1
KFModel: 1
ExplainerMethod: 1
XGBModel: 1
'Union[str,None]': 1
'Union[List[str],str,None]': 1
'Union[List[str], np.array]': 1
'Dict[str:List[str]]': 1
_HeaderDims: 1
'Union[np.ndarray, HeaderArrayObj]': 1
'Union[HeaderArrayObj, List[HeaderArrayObj]]': 1
HeaderArrayObj: 1
fbuild.db.SRC: 1
FTS3Tokenizer: 1
FTS5TokenizerHandle: 1
Optional[Callable[([Any], None)]]: 1
Union[(FTS5Tokenizer, Callable[([], FTS5Tokenizer)])]: 1
TokenizerModule: 1
Purchase: 1
Deposit: 1
timezone.datetime: 1
BackgroundProcess: 1
'QTimerEvent': 1
GraphType: 1
Sensor: 1
ProcessedData: 1
LSystem: 1
bpy.types.GreasePencil: 1
seproxer.main.Seproxer: 1
mitmproxy_extensions.master.ProxyMaster: 1
mitmproxy_extensions.options.MitmproxyExtendedOptions: 1
seproxer_enums.SeleniumBrowserTypes: 1
t.Optional[t.Sequence[t.Tuple[(str, str, str)]]]: 1
t.Optional[t.Sequence[t.Tuple[(str, str)]]]: 1
t.Optional[queue.Queue]: 1
t.Optional[t.Iterable[ResultHandler]]: 1
controller.DriverController: 1
seproxer.handlers.ResultHandlerManager: 1
t.Optional[t.Iterable[t.Tuple[(str, str)]]]: 1
seproxer.mitmproxy_extensions.options: 1
mitmproxy.proxy.server: 1
multiprocessing.Event: 1
multiprocessing.Value: 1
seproxer.seproxer_enums.SeleniumBrowserTypes: 1
t.List[states.managers.StateResult]: 1
validators.PageValidatorResults: 1
t.Optional[float]: 1
remote_webdriver.WebDriver: 1
states.managers.LoadedStateManager: 1
validators.managers.PageValidatorManager: 1
t.Optional[ControllerWait]: 1
t.Iterable[states.base.LoadedStateHandler]: 1
t.Optional[t.List[validators.PageValidatorType]]: 1
validators.PageValidatorType: 1
VolumeMode: 1
Optional[Iterable[models.Volume]]: 1
Optional[Iterable[models.Environment]]: 1
Optional[Iterable[models.Port]]: 1
container.PyDevContainer: 1
cli.parser.Command: 1
cli.parser.Verbosity: 1
BuildConfig: 1
ImageConfig: 1
ImageBuilder: 1
util.SearchConfig: 1
'[str]': 1
SearchConfig: 1
kfp_server_api.rest.ApiException: 1
Optional[metadata_store_pb2.ConnectionConfig]: 1
Optional[List[base_component.BaseComponent]]: 1
List[base_component.BaseComponent]: 1
models.DAG: 1
Optional[List[OpFunc]]: 1
Optional[KubeflowRunnerConfig]: 1
_PropertyDictWrapper: 1
PipelineProperties: 1
trainer_pb2.TrainArgs: 1
trainer_pb2.EvalArgs: 1
example_gen_pb2.Output: 1
tfdv.types.Example: 1
types.Artifact: 1
evaluator_pb2.FeatureSlicingSpec: 1
Optional[evaluator_pb2.FeatureSlicingSpec]: 1
Optional[pusher_pb2.PushDestination]: 1
List[tfma.slicer.SingleSliceSpec]: 1
prestodb.dbapi.Connection: 1
Iterable[Tuple[(Text, Text, Any)]]: 1
Dict[(Text, List[types.TfxArtifact])]: 1
metadata_store_pb2.Artifact: 1
metadata_store_pb2.ArtifactType: 1
Iterable[Artifact]: 1
Optional[Iterable[Artifact]]: 1
Union[(Channel, Iterable[types.Artifact])]: 1
List[Tuple[(float, Text)]]: 1
List[deephol_pb2.Tactic]: 1
deephol_pb2.ActionGeneratorOptions: 1
deephol_pb2.ProverOptions.ModelArchitecture: 1
Optional[embedding_store.TheoremEmbeddingStore]: 1
proof_search_tree.ProofSearchNode: 1
proof_assistant_pb2.PremiseSet: 1
List[proof_assistant_pb2.Theorem]: 1
ProofState: 1
EmbProofState: 1
STATE_ENC_TYPE: 1
loop_pb2.LoopConfig: 1
Optional[proof_assistant_pb2.TheoremDatabase]: 1
Optional[List[deephol_pb2.Tactic]]: 1
proof_assistant_pb2.ProverTask: 1
options_pb2.ConvertorOptions.ScrubParametersEnum: 1
proof_assistant_pb2.ApplyTacticRequest: 1
proof_assistant_pb2.VerifyProofRequest: 1
proof_assistant_pb2.RegisterTheoremRequest: 1
List[Callable[([Text], Text)]]: 1
Union[(Text, proof_assistant_pb2.Theorem, Iterable[Union[(Text, proof_assistant_pb2.Theorem)]])]: 1
Iterable[deephol_pb2.ProofLog]: 1
Iterable[FeatureName]: 1
path_pb2.Path: 1
FeatureName: 1
stats_options.StatsOptions: 1
Dict[(types.FeatureName, Optional[_ValueType])]: 1
Iterable[types.SliceFunction]: 1
List[List[Union[(int, float)]]]: 1
List[anomalies_pb2.AnomalyInfo.Reason]: 1
Set['anomalies_pb2.AnomalyInfo.Type']: 1
pa.DataType: 1
Dict[(types.FeaturePath, Dict[(Text, float)])]: 1
statistics_pb2.FeatureNameStatistics: 1
List[stats_generator.CombinerStatsGenerator]: 1
quantiles_util.QuantilesCombiner: 1
List[List[np.ndarray]]: 1
Union[(FEATURE_DOMAIN, bytes)]: 1
schema_pb2.Feature: 1
Iterable[schema_pb2.Feature]: 1
'_PartialNLStats': 1
NLClassifierInterface: 1
Iterable[_PartialNLStats]: 1
'_PartialTimeStats': 1
types.FeatureNameStatisticsType: 1
pa.Column: 1
Iterable[_PartialTimeStats]: 1
List[np.object]: 1
'_PartialImageStats': 1
ImageDecoderInterface: 1
Iterable[_PartialImageStats]: 1
types.SlicedTable: 1
Iterable[_PartitionedStatisticsAnalyzerAccumulator]: 1
Tuple[(Tuple[(types.SliceKey, int)], List[pa.Table])]: 1
'_PartialCrossFeatureStats': 1
Optional[List[types.FeatureCross]]: 1
Iterable[CrossFeatureStatsGeneratorAccumulator]: 1
'_WeightedCounter': 1
Iterable[Dict[(types.FeaturePath, _ValueCounts)]]: 1
Optional[tf.keras.Model]: 1
Optional[shared.Shared]: 1
Optional[List[AddMetricsCallbackType]]: 1
Optional[ModelLoader]: 1
types.ValueWithTDistribution: 1
evaluator.Evaluation: 1
metrics_for_slice_pb2.MetricsForSlice: 1
Dict[(Text, metrics_for_slice_pb2.PlotData)]: 1
Tuple[(beam.pvalue.PCollection, beam.pvalue.PCollection)]: 1
Union[(evaluator.Evaluation, validator.Validation)]: 1
Optional[slicer.SingleSliceSpec]: 1
Union[(Dict[(Text, Any)], Text)]: 1
model_eval_lib.EvalConfig: 1
tf.estimator.Exporter: 1
Dict[(Text, Sequence[Iterable[Union[(float, int)]]])]: 1
Dict[(Text, Iterable[Tuple[(int, Iterable[Union[(float, int)]])]])]: 1
types.FPLKeyType: 1
types.TensorType: 1
tf.Graph: 1
any_pb2.Any: 1
ModelAgnosticConfig: 1
List[extractor.Extractor]: 1
List[List[types.Extracts]]: 1
Iterable[_AggState]: 1
Tuple[(slicer.SliceKeyType, types.Extracts)]: 1
Type[beam.PTransform]: 1
Tuple[(slicer.SliceKeyType, List[Dict[(Text, Any)]])]: 1
Dict[(slicer.SliceKeyType, Dict[(Text, Any)])]: 1
List[Union[(int, float, np.ndarray)]]: 1
Union[(int, float, np.ndarray)]: 1
Optional[List[extractor.Extractor]]: 1
Optional[List[evaluator.Evaluator]]: 1
List[Dict[(Text, Union[(Dict[(Text, Any)], Text)])]]: 1
List[Dict[(Text, Union[(Dict[(Union[(float, Text)], Any)], Text)])]]: 1
Dict[(Text, bool)]: 1
Dict[(Text, List[Union[(Text, float, List[float])]])]: 1
Dict[(Text, Union[(Dict[(Text, Dict[(Text, Text)])], Text)])]: 1
Union[(List[Dict[(Text, Union[(Dict[(Text, Any)], Text)])]], Dict[(Text, List[Union[(Text, float, List[float])]])])]: 1
Dict[(Text, Union[(Dict[(Text, Dict[(Text, Text)])], Text, bool)])]: 1
Dict[(Text, beam.PTransform)]: 1
List[validator.Validator]: 1
Mapping[(int, File)]: 1
'InvalidStream': 1
Sequence['Mod']: 1
urwid.Button: 1
'Game': 1
Callable[([Hashable], Any)]: 1
'NodeType': 1
'query.SelectQuery': 1
_Op: 1
Iterable[models.SiteType]: 1
Mapping[(str, BoxSet)]: 1
BoxSet: 1
Mapping[(str, Pie)]: 1
SearchViewFilters: 1
List[SearchResult]: 1
Mapping[(str, Path)]: 1
Set[Site]: 1
Set[NegativeSite]: 1
Mutation: 1
Union[(SiteType, str)]: 1
Union[(str, SiteType)]: 1
Type[AbstractImporter]: 1
Type[PSPCaseData]: 1
'Protein': 1
Optional[Serializer]: 1
Type[GenericModelT]: 1
Union[(Type[Any], Tuple[(Type[Any], ...)])]: 1
Tuple[(Type[Any], ...)]: 1
Type[GenericModel]: 1
Sequence[ErrorList]: 1
'ModelOrDc': 1
StrBytes: 1
Union[(datetime.date, datetime.time)]: 1
Dict[(Any, Callable[([Type[Any]], Any)])]: 1
ExcType: 1
List[Type['BaseModel']]: 1
Union[(AnyType, Tuple[(AnyType, ...)])]: 1
Dict[(str, AnyType)]: 1
'IntStr': 1
Union[(date, StrIntFloat)]: 1
Union[(time, str)]: 1
Union[(datetime, StrIntFloat)]: 1
'DataclassType': 1
Optional[AnyType]: 1
UpdateArgs: 1
Set[BuildSteps]: 1
ExtType: 1
'Player': 1
HoverEvent: 1
List['Player.Player']: 1
List[t]: 1
t: 1
List[Match[str]]: 1
typing.Iterable['validation._BaseValidation']: 1
typing.Callable[([pd.Series], pd.Series)]: 1
typing.Callable[([typing.Any], typing.Any)]: 1
typing.Iterable[Column]: 1
discord.client: 1
AccessVector: 1
AccessComplexity: 1
Exploitability: 1
CollateralDamagePotential: 1
TargetDistribution: 1
AttackVector: 1
AttackComplexity: 1
UserInteraction: 1
ModifiedAttackVector: 1
ModifiedAttackComplexity: 1
ModifiedUserInteraction: 1
ModifiedConfidentialityImpact: 1
ModifiedIntegrityImpact: 1
ModifiedAvailabilityImpact: 1
ArgumentExtractorType: 1
ArgumentReplacerType: 1
Sequence[Centroid]: 1
Iterable[Sequence[Point]]: 1
Dict[(Centroid, Sequence[Point])]: 1
Optional[Timestamp]: 1
(list or str): 1
requests.Session(): 1
TrustStore: 1
SignedCtrlPayload: 1
DummyServer: 1
MessageDef: 1
DelegatingSubparsersAction: 1
Mapping[(str, ArgumentParser)]: 1
CommandDelegator: 1
Optional[Namespace]: 1
Union[(type, Tuple[(type, ...)])]: 1
Union[(Verbosity, int, str)]: 1
Union[(str, Path, TextIO, None)]: 1
Union[(Dict[(str, set)], Dict[(str, list)])]: 1
Optional[Tuple[(str, Sequence[str])]]: 1
Optional[spmatrix]: 1
Optional[Type[MutableVertexPartition]]: 1
Mapping[(str, Sequence[str])]: 1
Optional[Collection[str]]: 1
'only show the latest version of a key': 1
'include version-ids as the last column of output': 1
's3://bucket/prefix/key::version_id': 1
'use "all" to see everything': 1
schemas.rep: 1
[(str, {str: callable})]: 1
FileForm: 1
fpm.ne(0): 1
fpm.eFalse: 1
fpm.Isnot(None): 1
fpm.In(range(100)): 1
fpm.isoftype(bool): 1
(fpm.Is(None) | fpm.gt(0)): 1
Union[(FunctionType, str, None)]: 1
discord.RawReactionActionEvent: 1
asyncio.Task: 1
Dict[(int, Dict[(str, bool)])]: 1
typing.Optional[pathlib.Path]: 1
EdenConfigData: 1
ConfigSource: 1
SystemdUserServiceManager: 1
SystemdUnitName: 1
typing.Callable[([Counters], None)]: 1
SHA1Result: 1
EdenHgTestCase: 1
Callable[(['FindExeClass'], str)]: 1
'FindExeClass': 1
typing.Type[ServiceTestCaseBase]: 1
subprocess.CalledProcessError: 1
snapshot_mod.BaseSnapshot: 1
MdvHeader: 1
os.stat_result: 1
ExpectedFileBase: 1
Union[(ExpectedFileBase, None, _DefaultObject)]: 1
ExpectedFileSet: 1
Dict[(Path, os.stat_result)]: 1
Optional[EdenConfigInterpolator]: 1
Mapping[(ConfigSectionName, Mapping[(ConfigOptionName, Any)])]: 1
Mapping[(ConfigOptionName, ConfigValue)]: 1
Optional[Type[ConfigValue]]: 1
OverlayDir: 1
List[Type['Subcmd']]: 1
Optional[CmdTable]: 1
List[Type[Subcmd]]: 1
List[ProcessInfo]: 1
Dict[(Attribute, bytes)]: 1
TerminalSettings: 1
Tuple[(Optional[str], Optional[str])]: 1
'LogFollower': 1
ProblemSeverity: 1
mtab.MTStat: 1
List[HgChecker]: 1
Optional[FakeEdenInstance]: 1
doctor.ProblemFixer: 1
Optional[eden_ttypes.MountState]: 1
eden_ttypes.WorkingDirectoryParents: 1
fb303_status: 1
FakeCheckout: 1
EmailMessage: 1
Speaker: 1
Digraph: 1
FinTS3Segment: 1
Optional[Union[(str, Dict[(str, str)])]]: 1
Hierarkey: 1
List[Clausula]: 1
SmartContractEvent: 1
NotifyEvent: 1
BinaryReader: 1
BinaryWriter: 1
StackItem: 1
chatting.IncomingChatMessage: 1
chatting.IncomingMessageDeliveredEvent: 1
chatting.IncomingMessageReadEvent: 1
chatting.IncomingGroupChatMessage: 1
chatting.IncomingIsTypingEvent: 1
chatting.IncomingGroupIsTypingEvent: 1
chatting.IncomingFriendAttribution: 1
chatting.IncomingImageMessage: 1
chatting.IncomingGroupStatus: 1
chatting.IncomingGroupReceiptsEvent: 1
chatting.IncomingStatusResponse: 1
KikClientCallback: 1
IncomingFriendAttribution: 1
IncomingMessageReadEvent: 1
IncomingMessageDeliveredEvent: 1
IncomingGroupIsTypingEvent: 1
IncomingIsTypingEvent: 1
IncomingGroupSysmsg: 1
IncomingGroupReceiptsEvent: 1
IncomingGroupSticker: 1
GroupSearchResponse: 1
IncomingImageMessage: 1
IncomingGifMessage: 1
IncomingVideoMessage: 1
CaptchaElement: 1
Union[(UsersResponse, UsersByAliasResponse)]: 1
IncomingCardMessage: 1
MiFloraPoller: 1
ArchivedImage: 1
ArchivedImageDocker: 1
ArchiveTransitionRule: 1
ArchiveTransitionHistoryEntry: 1
AccountStates: 1
JwtToken: 1
EnterpriseApiSession: 1
marathon.Container: 1
marathon.Network: 1
marathon.Healthcheck: 1
DcosApiSession: 1
dcos_cli.DcosCli: 1
Union[(IO[bytes], IO[str])]: 1
ClusterBackend: 1
Docker: 1
AbstractStorageProvider: 1
'Status[Input, Output]': 1
Callable[(..., A)]: 1
Callable[([Iterable], A)]: 1
TickerId: 1
OrderState: 1
ContractDetails: 1
CommissionReport: 1
InteractiveBrokers: 1
unit.Quantity: 1
'WaterButlerPath': 1
typing.Iterable[WaterButlerPathPart]: 1
metadata.BaseMetadata: 1
typing.Sequence: 1
'BaseMetadata': 1
'BaseFileRevisionMetadata': 1
typing.List[BaseMetadata]: 1
MultiDictProxy: 1
WaterButlerPath: 1
Union[(str, list, dict)]: 1
'MountainArray': 1
'List[Interval]': 1
'List[Point]': 1
List[Device]: 1
List[RolePrincipalPair]: 1
[Hand]: 1
android.view.View: 1
android.graphics.Canvas: 1
android.view.MotionEvent: 1
COMMIT_TYPE: 1
(requests.models.Response, Exception): 1
FileProxy: 1
FileProxyMap: 1
(str, SourcePosition): 1
(Iterable, str): 1
ClassPadding: 1
FunctionPadding: 1
DocstringTypeRegex: 1
HydraDoc: 1
Union[(NumberLike, Sequence)]: 1
_RegionProperties: 1
Union[(Tuple, Point)]: 1
Optional[NumberLike]: 1
Union[('Point', 'Circle')]: 1
Union[(Point, Iterable)]: 1
Union[(Circle, Point)]: 1
Union[(Point, Tuple)]: 1
language_models.ALanguageModel: 1
image_models.AImageModel: 1
Modele: 1
DefaultOrderedDict: 1
AstAction: 1
MSG: 1
SqlalchemyEngine: 1
Callable[([List, PandasDataFrame], None)]: 1
SqlAlchemySessionMaker: 1
Callable[([List, str], None)]: 1
Callable[([Dict, CollectionsOrderedDict], None)]: 1
NumpyNDArray: 1
ViewQuery: 1
N1QLQuery: 1
TargetIterator: 1
SrcTargetIterator: 1
List[Tuple[(Query, int)]]: 1
Dict[(str, Project)]: 1
JobMapping: 1
Optional[HttpRequest]: 1
IOHistory: 1
Callable[([str, str], bool)]: 1
t.Union[(t.Dict, object)]: 1
t.TextIO: 1
t.Union[(str, int, bool, None)]: 1
t.Callable: 1
WSGIHandler: 1
t.IO: 1
t.Optional[t.Dict]: 1
t.Optional[t.Union[(str, t.TextIO)]]: 1
ConsulParser: 1
'LoggingTensor': 1
'AbstractTensor': 1
List[AbstractTensor]: 1
'MultiPointerTensor': 1
'CRTPrecisionTensor': 1
'AutogradTensor': 1
AbstractTensor: 1
List[torch.nn.Module]: 1
'ObjectWrapper': 1
workers.AbstractWorker: 1
workers.BaseWorker: 1
'TrainConfig': 1
Union[(torch.Tensor, AbstractTensor)]: 1
Ellipsis: 1
torch.nn.Parameter: 1
Tuple[(bin, Tuple, str)]: 1
torch.Size: 1
GATTDescriptor: 1
GATTCharacteristic: 1
Dict[(int, Sequence[int])]: 1
Dict[(str, Sequence[int])]: 1
GATTService: 1
t.Mapping[(str, t.Tuple[(urllib.parse.ParseResult, pathlib.Path)])]: 1
{str: [str]}: 1
(str, {str: str}): 1
RequestHelper: 1
Union[(Query, Session)]: 1
mongosql.ModelPropertyBags: 1
'mongosql.MongoQuery': 1
Tuple[(int, J)]: 1
ProductOutput: 1
(list_of(Number), tuple_of(Number)): 1
(array_of(DelayedLinearSolver), list_of(DelayedLinearSolver)): 1
array_of(DelayedBasisFunctionsMatrix): 1
(Function.Type(), Operator): 1
(Function.Type(), Matrix.Type(), Vector.Type()): 1
tuple_of(list_of(DirichletBC)): 1
(tuple_of(Form), tuple_of(Matrix.Type()), tuple_of(Vector.Type()), tuple_of((Form, Matrix.Type())), tuple_of((Form, Vector.Type()))): 1
tuple_of(Function.Type()): 1
(Matrix.Type(), Vector.Type(), TensorsList): 1
(Function.Type(), FunctionsList): 1
ReducedVertices: 1
AffineExpansionStorage_DirichletBC: 1
(AffineExpansionStorage_Form, NonAffineExpansionStorage): 1
tuple_of(Form): 1
tuple_of(ParametrizedTensorFactory): 1
tuple_of(Matrix.Type()): 1
tuple_of(Vector.Type()): 1
AffineExpansionStorage_Function: 1
ComponentTensor: 1
tuple_of(FunctionSpace): 1
(GenericMatrix, GenericVector): 1
(Argument, BaseExpression, Constant, ConstantValue, GeometricQuantity, IndexBase, MultiIndex, Operator): 1
(int, list_of(str), str, tuple_of(int)): 1
(int, str): 1
list_of(str): 1
tuple_of(int): 1
List[Union[(str, 'RotationInfo')]]: 1
'FeatureConnection': 1
Grenade: 1
Optional['FeatureConnection']: 1
'FeatureTeam': 1
UploadModel: 1
Sequence[ImageFile]: 1
ContainerImageModel: 1
ContainerExecJobModel: 1
ContainerApiMixin: 1
RegistrationRequest: 1
Union[('ImageSet', 'AnnotationSet')]: 1
Union[(Result, Config)]: 1
[str, bytes]: 1
Object3D: 1
scenegraph.DrawableGroup3D: 1
gl.Mesh: 1
shaders.Phong: 1
Color4: 1
Matrix4: 1
scenegraph.Camera3D: 1
(float, int): 1
open: 1
Callable[([float, int], str)]: 1
Callable[([], Dict[(int, float)])]: 1
Tuple[(Foo, List[Enum], Any)]: 1
Tuple[('Foo', 'List[Enum]', 'Any')]: 1
Tuple[('FooBar', 'List[Enum]', 'Any')]: 1
_Hidden: 1
Tuple[Foo]: 1
Inliner: 1
EV3: 1
T.Optional[T.Iterable]: 1
T.Union[(Path, str)]: 1
T.Union[(bool, str)]: 1
(Package or None): 1
(AppConfig or None): 1
GlobalProperties: 1
(str or list): 1
(list or None): 1
AbstractView: 1
Optional[wrappers.EnumType]: 1
http_pb2.HttpRule: 1
wrappers.EnumType: 1
typing.Tuple[wrappers.Method]: 1
'Address': 1
List[ArtifactVersions]: 1
sample_manifest.Manifest: 1
Type[enum.IntEnum]: 1
Union[(str, TextIO, Dict, Settings)]: 1
Tier: 1
Set[Queue]: 1
Set[Season]: 1
Set[Champion]: 1
Union[(Champion, int, str)]: 1
ChampionMasteryDto: 1
ChampionMasteryListDto: 1
ChampionMasteryData: 1
ChampionMasteryListData: 1
SummonerDto: 1
SummonerData: 1
ChampionDto: 1
ChampionListDto: 1
ChampionReleaseDto: 1
RuneDto: 1
RuneListDto: 1
ItemDto: 1
ItemListDto: 1
SummonerSpellDto: 1
SummonerSpellListDto: 1
MapDto: 1
MapListDto: 1
VersionListDto: 1
RealmDto: 1
LanguagesDto: 1
LanguageStringsDto: 1
ProfileIconDetailsDto: 1
ProfileIconDataDto: 1
ChampionData: 1
ChampionListData: 1
RuneData: 1
RuneListData: 1
ItemData: 1
ItemListData: 1
SummonerSpellData: 1
SummonerSpellListData: 1
MapData: 1
MapListData: 1
VersionListData: 1
RealmData: 1
LanguagesData: 1
LanguageStringsData: 1
ProfileIconData: 1
ProfileIconListData: 1
VerificationStringDto: 1
VerificationStringData: 1
CurrentGameInfoDto: 1
FeaturedGamesDto: 1
FeaturedGamesData: 1
MatchDto: 1
MatchReferenceDto: 1
MatchListDto: 1
TimelineDto: 1
MatchData: 1
MatchReferenceData: 1
TimelineData: 1
LeagueDto: 1
LeagueEntryDto: 1
LeagueSummonerEntriesDto: 1
LeagueEntriesDto: 1
ChallengerLeagueListDto: 1
GrandmasterLeagueListDto: 1
MasterLeagueListDto: 1
LeagueData: 1
LeagueEntryData: 1
LeagueEntriesData: 1
ChallengerLeagueListData: 1
GrandmasterLeagueListData: 1
MasterLeagueListData: 1
ShardStatusDto: 1
ShardStatusData: 1
ChampionRotationDto: 1
ChampionRotationData: 1
DataTransformer: 1
'ChampionMastery': 1
'Summoner': 1
Union[(Summoner, str)]: 1
Optional[Set[Type[CoreData]]]: 1
Union[(str, Region)]: 1
Season: 1
Union[(arrow.Arrow, float)]: 1
Optional[Union[(arrow.Arrow, float)]]: 1
Union[arrow.Arrow]: 1
'Rune': 1
'ProfileIcon': 1
'SummonerSpell': 1
Iterable[RiotAPIService]: 1
Iterable[KernelSource]: 1
Union[(Callable[([Any], Any)], Any)]: 1
Optional[Capture]: 1
List[Tuple[(Node, Capture)]]: 1
OpNode: 1
List[nodes.Node]: 1
Configurator: 1
tp.List: 1
tp.Union[(str, None)]: 1
sublime_plugin.sublime.View: 1
typing.Union[(typing.List, typing.Dict)]: 1
base.Agent: 1
snt.Optimizer: 1
snt.RNNCore: 1
NetworkParameters: 1
Callable[([BsuiteId], BsuiteId)]: 1
Sequence[BsuiteId]: 1
dm_env.specs.BoundedArray: 1
Callable[([int], float)]: 1
dm_env.specs.DiscreteArray: 1
CartpoleState: 1
CartpoleConfig: 1
PathCollection: 1
SingleLoadFn: 1
base.Logger: 1
Callable[([pd.DataFrame], float)]: 1
Responses: 1
Agencies: 1
Callable[([U], W)]: 1
'Callable[[U], Lazy[U, W]]': 1
Callable[([Optional[T]], U)]: 1
'Sum': 1
'All': 1
List[Tuple[(Callable[([T], bool)], Callable)]]: 1
Callable[([T], 'Maybe[U]')]: 1
XPos: 1
Union[(URL, str, Pattern)]: 1
'Optional[asyncio.AbstractEventLoop]': 1
Type[BaseTarget]: 1
'Gtk.IconSize': 1
List[Tuple[(QuerySet, str)]]: 1
Callable[([T], Iterable[U])]: 1
'AppSemVer': 1
GroupedVersions: 1
Callable[([WebElement], None)]: 1
Dict[(str, 'Importer')]: 1
PhpExtensionImporter: 1
DatabaseImporter: 1
LicenseImporter: 1
ShellCommandImporter: 1
AppReleaseImporter: 1
ScreenshotsImporter: 1
CategoryImporter: 1
AuthorImporter: 1
AppReleaseDownloader: 1
GunZipAppMetadataExtractor: 1
ReleaseConfig: 1
CertificateConfiguration: 1
RedFetcher: 1
RobotChecker: 1
thor.loop.LoopBase: 1
List[Tuple[(bytes, bytes)]]: 1
httperr.HttpError: 1
categories: 1
levels: 1
List[Callable[([str, str, str, str], None)]]: 1
Callable[([str], int)]: 1
Union[(List[str], bool)]: 1
EventEmitter: 1
bomb.Bomb: 1
'BaseService': 1
typing.MutableMapping: 1
'UDPMulticastTransport': 1
Pattern[AnyStr]: 1
List[SpectrumSpectrumMatch]: 1
SpectralLibraryReader: 1
'text [a-zA-Z]{10}': 1
'header': 1
'number .{10}': 1
'file': 1
'entetes p': 1
'lus p': 1
'un': 1
'deux': 1
'path': 1
'map': 1
'module': 1
'object': 1
'boolean': 1
'SocketReader': 1
'socket': 1
Union[(np.datetime64, np.ndarray)]: 1
Dict[(XTFHeaderType, List[int])]: 1
List[XTFPingHeader]: 1
XTFFileHeader: 1
models.MaatschappelijkeActiviteit: 1
models.Vestiging: 1
kvk.KvkFunctievervulling: 1
kvk.KvkMaatschappelijkeActiviteit: 1
kvk.KvkPersoon: 1
SuccessResult: 1
Dict[(_T, List[_T])]: 1
Dict[(_T, Set[_T])]: 1
Callable[([float], None)]: 1
TimerDelayPolicy: 1
Optional[Iterable[AbstractAsyncContextManager]]: 1
t.Optional[Feature]: 1
Optional[ToplevelWriter]: 1
Union[(ir.StaticAssert, ir.ConstantDef, ir.Typedef, ir.TemplateDefn)]: 1
ir.TemplateArgDecl: 1
ir.Literal: 1
ir.ComparisonExpr: 1
ir.Int64BinaryOpExpr: 1
ir.BoolBinaryOpExpr: 1
Iterable[ir.TemplateDefn]: 1
Dict[(str, ir.TemplateDefn)]: 1
ir.PatternExpr: 1
ir.AtomicTypeLiteralPattern: 1
ir.PointerTypePatternExpr: 1
ir.ReferenceTypePatternExpr: 1
ir.RvalueReferenceTypePatternExpr: 1
ir.ConstTypePatternExpr: 1
ir.ArrayTypePatternExpr: 1
ir.FunctionTypePatternExpr: 1
ir.TemplateInstantiationPatternExpr: 1
ir.ListPatternExpr: 1
ir.AddToSetExpr: 1
ir.SetToListExpr: 1
ir.ListToSetExpr: 1
ir.SetEqualityComparison: 1
ir.IsInListExpr: 1
ir.IsInstanceExpr: 1
ir.SafeUncheckedCast: 1
ir.CheckIfError: 1
ir.CheckIfErrorDefn: 1
ir2.Module: 1
ir0.TemplateArgDecl: 1
ir0.AtomicTypeLiteral: 1
Dict[(str, Set[int])]: 1
Callable[([Any], Tuple[(Any, bool)])]: 1
Optional[Iterator[str]]: 1
Callable[([], Tuple[(List, bool)])]: 1
List[ir.Header]: 1
Optional[ir.Expr]: 1
Union[(ir.Expr, List[ir.Expr])]: 1
Sequence[ir.TemplateBodyElement]: 1
Callable[([List, Transformation], Tuple[(List, bool)])]: 1
MutableMapping[(Tuple[(str, str)], str)]: 1
Dict[(Tuple[(str, str)], str)]: 1
ir.ExprType: 1
Sequence[ir.TemplateArgDecl]: 1
Union[(str, TermT)]: 1
UnificationStrategy.Expr: 1
_NonListExpr: 1
List[_NonListExpr]: 1
Dict[(str, _NonListExpr)]: 1
Dict[(str, List[_NonListExpr])]: 1
List[_Expr]: 1
ToplevelWriter: 1
Writer: 1
Optional[ir2.Module]: 1
Optional[ir0.Header]: 1
Optional[ir1.Module]: 1
Dict[(str, ModuleInfo)]: 1
List[ObjectFileContent]: 1
ir.CustomType: 1
ir.SetExpr: 1
ir.IntSetSumExpr: 1
ir.BoolSetAllExpr: 1
ir.BoolSetAnyExpr: 1
ir.InExpr: 1
ir.AndExpr: 1
ir.OrExpr: 1
ir.IntUnaryMinusExpr: 1
Optional[ir.ExprType]: 1
Optional[text_measurer.TextMeasurer]: 1
condition.Segment: 1
Callable[([], Callable[(..., T)])]: 1
Optional[Dict[(str, field.Field)]]: 1
Optional[Dict[(str, relationship.Relationship)]]: 1
Optional[Dict[(str, index.Index)]]: 1
ModelMetadata: 1
relationship.Relationship: 1
index.Index: 1
Dict[(str, type_pb2.Type)]: 1
tensornetwork.TensorNetwork: 1
List[tensornetwork.Edge]: 1
Optional[graphviz.Graph]: 1
Sequence[network_components.CopyNode]: 1
Optional[Sequence[network_components.Edge]]: 1
Callable[([List[Set[int]], Set[int], Dict[(int, int)]], List)]: 1
AXES_TYPE: 1
batchtensornetwork.BatchTensorNetwork: 1
List[tensornetwork.Node]: 1
Tuple[tensornetwork.Node]: 1
BatchTensorNetwork: 1
cc_aead.Aead: 1
tink_pb2.KeyData.KeyMaterialType: 1
tink_pb2.KeyStatusType: 1
tink_pb2.OutputPrefixType: 1
io.BufferedIOBase: 1
writer.KeysetWriter: 1
reader.KeysetReader: 1
km_module.KeyManager: 1
primitive_wrapper.PrimitiveWrapper: 1
pset_module.PrimitiveSet: 1
ecdsa_pb2.EcdsaSignatureEncoding: 1
cc_public_key_sign.PublicKeySign: 1
cc_public_key_verify.PublicKeyVerify: 1
cc_hybrid_decrypt.HybridDecrypt: 1
common_pb2.EcPointFormat: 1
cc_hybrid_encrypt.HybridEncrypt: 1
List[List[xarray.Dataset]]: 1
Union[(tf.Tensor, np.ndarray)]: 1
GridOffset: 1
Callable[([float, float], bool)]: 1
controller.GetInputTargetAndPredictedParameters: 1
AugmentParameters: 1
Dict[(str, Tuple[(object, object)])]: 1
List[lt.LabeledTensor]: 1
BatchParameters: 1
List[Tuple[(List[str], List[lt.LabeledTensor])]]: 1
nssize: 1
Optional[rocat.message.Envelope]: 1
Dict[(str, list)]: 1
Geometry.FloatPoint: 1
typing.Sequence[UndoableCommand]: 1
UndoableCommand: 1
DocumentModel.DocumentModel.DataItemReference: 1
Window.Window: 1
Declarative.UIDescription: 1
DocumentController.DocumentController: 1
Geometry.IntPoint: 1
DataItem.DataItem: 1
List['Player']: 1
'Resources': 1
List['Virus']: 1
List['Cell']: 1
ParticleReleaser: 1
Union[(int, slice, Sequence[int])]: 1
'cylinder rotation speed': 1
'approximate domain size': 1
'number of elementsa long edge': 1
'maxrefine level for trimming': 1
'cut-out radius': 1
'poisson ratio': 1
'spatial dimension': 1
'time scale (timestep=timescale/nelems)': 1
'solver tolerance': 1
'epsilon, 0 for automatic (based on nelems)': 1
'wall contact angle (degrees)': 1
'stop when chemical potential is peak to peak below threshold': 1
'select circular domain': 1
'hole radius': 1
"poisson's ratio": 1
'type of basis function (h/th-std/spline)': 1
'number of refinement steps (-1 for unlimited)': 1
'bend angle (degrees)': 1
'residual tolerance': 1
'create circular-shaped hole': 1
'integer': 1
'float': 1
List[ServicePlanCost]: 1
ServicePlanMetaData: 1
Schemas: 1
ProvisionState: 1
SharedDevice: 1
List[ServicePlan]: 1
ServiceMetadata: 1
ServiceDashboardClient: 1
UpdateDetails: 1
BindDetails: 1
UnbindDetails: 1
Moves: 1
STR_ENUM_FWD_REF: 1
Union[(str, List[Union[(str, int)]])]: 1
List[Form]: 1
DeformErrorInterface: 1
ValidatorType: 1
Type[T1]: 1
Type[T2]: 1
Sequence[Union[(Type, int)]]: 1
MultiTimer: 1
Sequence[Union[(int, float, None)]]: 1
Union[(str, ModuleType)]: 1
List[ModuleType]: 1
ArgsType: 1
KwargsType: 1
AdminSite: 1
Iterable[PdfPlan]: 1
TYPE_WSGI_RESPONSE_HEADERS: 1
TYPE_WSGI_EXC_INFO: 1
DateLikeType: 1
DateTimeLikeType: 1
Exists: 1
Insert: 1
SQLCompiler: 1
Sphinx: 1
NlprpRequest: 1
Union[(QuerySet, List[Any])]: 1
Type[settings.AUTH_USER_MODEL]: 1
Optional[Union[(datetime.date, datetime.datetime)]]: 1
ModelForm: 1
JsonArrayType: 1
BaseNlpParser: 1
Fernet: 1
'NlpDefinition': 1
List[Tuple[(str, List[str])]]: 1
ExtendedConfigParser: 1
NlpDefinition: 1
Dict[(Pattern, Any)]: 1
NlprpError: 1
'PersonalizedScrubber': 1
_Node: 1
_Tree: 1
Dict[(int, List[int])]: 1
PDFlask: 1
Babel: 1
'BaseView': 1
Optional[Callable[([ContextStack, str], str)]]: 1
Optional[Callable[([object], str)]]: 1
pystache.parsed.ParsedTemplate: 1
pystache.renderengine.RenderEngine: 1
Union[(bool, Dict[(str, Any)], None, List[Container])]: 1
Union[(str, Container)]: 1
Dict[(str, parser.PriceListType)]: 1
Optional[List[object]]: 1
Optional[List[Deck]]: 1
person.Person: 1
RawDeckDescription: 1
Top: 1
CardContainer: 1
Union[(str, int, float)]: 1
Mapping[(str, Union[(str, int, List[int], List[Deck])])]: 1
Iterable[Container]: 1
Comp: 1
archs.Archetype: 1
PyLinter: 1
Optional[PyLinter]: 1
PropertyFunction: 1
IntervalsType: 1
ValidSqlArgumentDescription: 1
Union[(str, List[str], Set[str], int, float)]: 1
Dict[(str, PriceListType)]: 1
SectionType: 1
DecklistType: 1
SetInfoType: 1
Dict[(str, Card)]: 1
List[CardDescription]: 1
card.ColumnDescription: 1
card.TableDescription: 1
datetime.tzinfo: 1
RAM: 1
PPU: 1
APU: 1
Gateway: 1
RaspyRFMClient: 1
List[Syllable]: 1
List[Word]: 1
List[Line]: 1
SentenceSplitter: 1
'Stress': 1
Set[Stress]: 1
'StressedWord': 1
List['TreeNode']: 1
List[StressCorrection]: 1
ClassificationResult: 1
List[Markup]: 1
LanguageModel: 1
TrainConfig: 1
BuildModelConfig: 1
List[List[WordForm]]: 1
MorphAnalyzer: 1
Union[(Store, dict)]: 1
Optional[SessionPayload]: 1
Menu: 1
ShortcutManager: 1
List[Sessions]: 1
pb2.Controls: 1
pb2.GameState: 1
OutdatedStepAction: 1
Union[(Dict[(str, Any)], yaml.YAMLObject)]: 1
snapcraft.ProjectOptions: 1
_metadata.ExtractedMetadata: 1
Type['GlobalState']: 1
Union[(List[str], Dict[(str, str)], str)]: 1
'_StatementCollection': 1
List[pluginhandler.PluginHandler]: 1
'project_loader._config.Config': 1
Type['InstanceInfo']: 1
Type['Channel']: 1
channels.Channel: 1
Song: 1
ManifestStaticFilesStorage: 1
Union[(Dict[(str, Any)], str)]: 1
Union[(Text, bytes)]: 1
Optional[Reform]: 1
Optional[None]: 1
Reform: 1
BaseList: 1
Tuple[(bool, int)]: 1
Tuple[(bool, str)]: 1
Union[(str, 'Table')]: 1
Union[(str, 'Column', 'FieldTransformation')]: 1
Union[(str, 'Column')]: 1
DmReference: 1
Union[(str, Table)]: 1
'Hub': 1
HubEntity: 1
Dim: 1
'Dwh': 1
List[DvEntity]: 1
Dict[(str, Callable[([Model, Namespace], None)])]: 1
Doc2Vec: 1
actions.Action: 1
GameEntity: 1
HeroPowerPhase: 1
po.PlayerOpTree: 1
text.Label: 1
PartialSong: 1
LoadedModel: 1
UrlDescriptor: 1
AccountAdapter: 1
Leg: 1
BaseFeatureLearningWrapper: 1
ChannelFusion: 1
Union[(Partition, Sequence[Partition])]: 1
Optional[Sequence[Split]]: 1
Optional[Partition]: 1
t.OutPoint: 1
t.TxOut: 1
Mapping[(str, Mapping[(str, bool)])]: 1
NodePredicate: 1
DictEdgePredicate: 1
EdgePredicate: 1
Callable[([BaseEntity], bool)]: 1
Type[ListAbundance]: 1
Optional[Iterable[Dict]]: 1
Union[(Iterable[Dict], 'Pipeline')]: 1
Union[(None, int, Iterable[int])]: 1
Optional[Seeding]: 1
Optional[Pipeline]: 1
BELParser: 1
BELParserWarning: 1
Type[X]: 1
Iterable[Edge]: 1
Iterable[Citation]: 1
Union[(None, str, List[str])]: 1
Union[(None, str, datetime.date)]: 1
Mapping[(str, Tuple[(str, str)])]: 1
ListAbundance: 1
Reaction: 1
Type[BaseEntity]: 1
Mapping[(X, List[Y])]: 1
Mapping[(X, Sized)]: 1
Mapping[(Y, Set[X])]: 1
Union[(List[Tuple[(str, int)]], Mapping[(str, int)])]: 1
Optional[Callable[([T], bool)]]: 1
Mapping[(BaseEntity, Any)]: 1
Optional[Callable[([List[float]], float)]]: 1
ComplexAbundance: 1
Optional[BELGraph]: 1
typing.Counter[int]: 1
Iterable[Tuple[(A, B)]]: 1
Union[(NodePredicate, Iterable[NodePredicate])]: 1
Mapping[(Any, int)]: 1
Mapping[(Any, BELGraph)]: 1
Mapping[(str, List[Gene])]: 1
Optional['bio2bel_drugbank.manager']: 1
Union[(None, str, TextIO)]: 1
Optional[Mapping[(str, int)]]: 1
Optional[Callable[([Iterable[X]], X)]]: 1
OneTimeBot: 1
VolumeType: 1
pywikibot.Page: 1
Union[(Article, str)]: 1
ReScannerTask: 1
VolumeRegister: 1
Dict[(str, Union[(str, List)])]: 1
Union[(str, Lemma)]: 1
Dict[(str, Union[(str, list)])]: 1
'Vector': 1
(list, set): 1
Node.StringSingle: 1
(int, float, str): 1
Node.dict_indexable: 1
Node.IntList: 1
version.Version: 1
EFBChannel: 1
EFBMiddleware: 1
Optional[InstanceID]: 1
InstanceID: 1
Optional[ChatID]: 1
MessageID: 1
Optional[EFBChannel]: 1
Optional[EFBMiddleware]: 1
Optional[ReactionName]: 1
Reactions: 1
EFBChat: 1
Optional[posix.uname_result]: 1
Pid: 1
Dict[(Tuple[(str, str)], Tuple[(str, str)])]: 1
Exiter: 1
AbstractWindow: 1
Slack: 1
Facebook: 1
IncludeOwner: 1
List[AnyStr]: 1
StateSortingKeys: 1
FundFilterBy: 1
RuleFilter: 1
BaseQuerySet: 1
(set, tuple, list): 1
(np.ndarray, list, tuple): 1
RetVal: 1
PyRakLibServer: 1
ServerInstance: 1
csvfile: 1
mdfile: 1
DropPoint: 1
List[np.array]: 1
List[Tuple[(float, float, int)]]: 1
Mapping[(T, tf.Tensor)]: 1
List[Tuple[(K, V)]]: 1
equations.Equation: 1
StatisticsDict: 1
Mapping[(str, TensorLike)]: 1
Optional[grids.Grid]: 1
List[Transform]: 1
Prefix: 1
List[Tuple[(states.StateDefinition, grids.Grid)]]: 1
Dict[(str, tf.io.FixedLenFeature)]: 1
orm.OpRegularizerManager: 1
SpoilerChannel: 1
mamba.symbol_table.SymbolTable: 1
ReportAfterStatus: 1
ReportAfterCommit: 1
UserError: 1
ReviewQAHandler: 1
PurgeQAHandler: 1
IReviewRecordDB: 1
PathHelper: 1
Reviewer: 1
List[RuleResult]: 1
List[Dataset]: 1
gzip.GzipFile: 1
tnsnamesParser.AliasContext: 1
tnsnamesParser.Tns_entryContext: 1
tnsnamesParser.Lsnr_entryContext: 1
TokenStream: 1
AlexaRequest: 1
Trigger: 1
TriggerSet: 1
Lightify: 1
Light: 1
COMMAND_TYPE: 1
QLayoutItem: 1
'Label': 1
'ComboBox': 1
'DateEdit': 1
'SpinBox': 1
'ListWidget': 1
'LineEdit': 1
'DoubleSpinBox': 1
'PushButton': 1
Painter: 1
'TableWidget': 1
Union['StorageType']: 1
Optional['WindowState']: 1
Union['[Bucket]']: 1
Union['[PermissionType]']: 1
Union['Bounds']: 1
Optional['[PositionTickInfo]']: 1
Union['[ProfileNode]']: 1
Union['[CoverageRange]']: 1
Union['[FunctionCoverage]']: 1
Union['[TypeObject]']: 1
Union['[TypeProfileEntry]']: 1
Union[('Profile', dict)]: 1
Optional['[ScrollRect]']: 1
Optional['StickyPositionConstraint']: 1
Union['[PictureTile]']: 1
Optional['DOM.Rect']: 1
Union[('LayerId', dict)]: 1
Union[('DOM.Rect', dict)]: 1
Union[('[Layer]', dict, None)]: 1
Union['[ApplicationCacheResource]']: 1
Union['[SamplingHeapProfileNode]']: 1
Union['SamplingHeapProfileNode']: 1
Union['[SamplingHeapProfileSample]']: 1
Union[('float', dict)]: 1
Union[('bool', dict, None)]: 1
Optional['[NameValue]']: 1
Optional['Page.FrameId']: 1
Optional['DOM.PseudoType']: 1
Optional['DOM.ShadowRootType']: 1
Optional['[DOMDebugger.EventListener]']: 1
Optional['[InlineTextBox]']: 1
Union['[NameValue]']: 1
Union['NodeTreeSnapshot']: 1
Union['LayoutTreeSnapshot']: 1
Union['TextBoxSnapshot']: 1
Optional['[DOM.BackendNodeId]']: 1
Optional['[ArrayOfStrings]']: 1
Optional['RareIntegerData']: 1
Union['[ArrayOfStrings]']: 1
Union['RareBooleanData']: 1
Union['Network.TimeSinceEpoch']: 1
Union['ServiceWorker.RegistrationID']: 1
Union['[EventMetadata]']: 1
Union[('ServiceName', dict)]: 1
Union[('BackgroundServiceEvent', dict)]: 1
Union['Network.RequestId']: 1
Union['CachedResponseType']: 1
Union[('[Metric]', dict)]: 1
Union['ContextType']: 1
Union['ContextState']: 1
Optional['ContextRealtimeData']: 1
Union[('ContextId', dict)]: 1
Union[('[Sink]', dict)]: 1
Union['AXValueSourceType']: 1
Optional['AXValueNativeSourceType']: 1
Union['AXPropertyName']: 1
Union['AXValue']: 1
Union['AXValueType']: 1
Optional['Any']: 1
Optional['[AXRelatedNode]']: 1
Optional['[AXValueSource]']: 1
Union['AXNodeId']: 1
Optional['[AXNodeId]']: 1
Optional['DOM.NodeId']: 1
Optional['Runtime.RemoteObjectId']: 1
Union['AuthenticatorProtocol']: 1
Union['AuthenticatorTransport']: 1
Union['VirtualAuthenticatorOptions']: 1
Union['Credential']: 1
Union['[SamplingProfileNode]']: 1
Union['[Module]']: 1
Union['PressureLevel']: 1
Union[('ConsoleMessage', dict)]: 1
Union[('Database', dict)]: 1
Optional['Network.ResourceType']: 1
Optional['RequestStage']: 1
Optional['[RequestPattern]']: 1
Union['Network.ErrorReason']: 1
Union['[HeaderEntry]']: 1
Optional['[HeaderEntry]']: 1
Union['AuthChallengeResponse']: 1
Union[('Network.ErrorReason', dict, None)]: 1
Union[('int', dict, None)]: 1
Union[('[HeaderEntry]', dict, None)]: 1
Union[('RequestId', dict, None)]: 1
Union[('AuthChallenge', dict)]: 1
Optional['AnimationEffect']: 1
Optional['KeyframesRule']: 1
Union['[KeyframeStyle]']: 1
Union[('Animation', dict)]: 1
Optional['MemoryDumpConfig']: 1
Optional['StreamFormat']: 1
Optional['StreamCompression']: 1
Optional['TraceConfig']: 1
Union[('IO.StreamHandle', dict, None)]: 1
Union[('StreamFormat', dict, None)]: 1
Union[('StreamCompression', dict, None)]: 1
Union['ImageType']: 1
Union['[SubsamplingFormat]']: 1
Union['[GPUDevice]']: 1
Union['[VideoDecodeAcceleratorCapability]']: 1
Union['[VideoEncodeAcceleratorCapability]']: 1
Union['[ImageDecodeAcceleratorCapability]']: 1
Optional['ScreenshotParams']: 1
Union['Runtime.Timestamp']: 1
Optional['Runtime.StackTrace']: 1
Optional['Network.RequestId']: 1
Optional['[Runtime.RemoteObject]']: 1
Union['[ViolationSetting]']: 1
Union[('LogEntry', dict)]: 1
Union['MixedContentType']: 1
Union['CertificateErrorAction']: 1
Union[('SecurityState', dict)]: 1
Union[('[SecurityStateExplanation]', dict)]: 1
Union[('InsecureContentStatus', dict)]: 1
Union['ServiceWorkerVersionRunningStatus']: 1
Union['ServiceWorkerVersionStatus']: 1
Optional['[Target.TargetID]']: 1
Union[('ServiceWorkerErrorMessage', dict)]: 1
Union[('[ServiceWorkerRegistration]', dict)]: 1
Union[('[ServiceWorkerVersion]', dict)]: 1
Union['[ObjectStore]']: 1
Union['[ObjectStoreIndex]']: 1
Optional['[Key]']: 1
Union['KeyRange']: 1
Optional['KeyRange']: 1
BatteryMonitor: 1
Dict[(str, List[PadHit])]: 1
'VirtualHelix': 1
'Oligo': 1
List[List[ORG_T]]: 1
Record_T: 1
Dict[(str, Section)]: 1
Optional[uuid.UUID]: 1
GridParametersInfoType: 1
GalacticDiskType: 1
SearchStrategy: 1
Dict[(Hashable, Any)]: 1
Metafunc: 1
MIMEText: 1
socketcan.Message: 1
'Frame.Opcode': 1
Iterable[Doctest]: 1
resolver.ParamResolver: 1
TMeasurementKey: 1
ParamResolver: 1
trial_result.TrialResult: 1
Union[(sympy.Basic, float, str)]: 1
value.LinearDict[str]: 1
Callable[([int, int], bool)]: 1
'WaveFunctionSimulatorState': 1
Optional[study.Sweepable]: 1
ops.SamplesDisplay: 1
WaveFunctionSimulatorState: 1
Union[(circuits.Circuit, ops.Gate, ops.OP_TREE, schedules.Schedule)]: 1
CircuitSampleJob: 1
'cirq.Sampler': 1
Optional[CIRCUIT_SAMPLE_JOB_TREE]: 1
CIRCUIT_SAMPLE_JOB_TREE: 1
ops.PauliSumLike: 1
collector.CircuitSampleJob: 1
ops.PauliString: 1
Union[(Awaitable, asyncio.Future)]: 1
ops.Pauli: 1
Callable[([Any], ops.PauliStringPhasor)]: 1
Union[(circuits.Circuit, circuits.CircuitDag)]: 1
Iterable[Iterable[ops.Qid]]: 1
Optional[UndirectedGraphDeviceEdge]: 1
Mapping[(int, Optional[UndirectedGraphDeviceEdge])]: 1
Dict[(Iterable[Hashable], Any)]: 1
Union[(int, Iterable)]: 1
Mapping[(int, float)]: 1
value.Duration: 1
Dict[(Tuple[(cirq.Qid, ...)], cirq.Gate)]: 1
Union[(str, BipartiteGraphType)]: 1
Tuple[(List[ops.Qid], List[ops.Qid])]: 1
Sequence[ops.raw_types.Qid]: 1
networkx.DiGraph: 1
Dict[(ops.Qid, ops.Qid)]: 1
Union[(circuits.Circuit, ops.Operation)]: 1
PermutationGate: 1
Sequence[Sequence[ops.Qid]]: 1
Iterable[Tuple[(ops.Qid, ops.Qid)]]: 1
Sequence[TItem]: 1
Callable[([ops.Qid], ops.Qid)]: 1
ops.CNotPowGate: 1
ops.HPowGate: 1
ops.SwapPowGate: 1
ops.CSwapGate: 1
ops.CCXPowGate: 1
ops.CCZPowGate: 1
ops.ControlledOperation: 1
protocols.CircuitDiagramInfo: 1
circuits.TextDiagramDrawer: 1
Optional[BoxDrawCharacterSet]: 1
circuit.Circuit: 1
Callable[([Union[(int, float)], Union[(int, float)]], Tuple[(Union[(int, float)], Union[(int, float)])])]: 1
Iterable[Tuple[(int, TItem)]]: 1
TItem: 1
Optional[Mapping[(TVector, Scalar)]]: 1
Callable[([TVector], bool)]: 1
Mapping[(TVector, Scalar)]: 1
sympy.Basic: 1
'Timestamp': 1
Union[('Duration', timedelta)]: 1
QubitCoordinate: 1
Union[(str, mpl.colors.Colormap)]: 1
mpl.cm.ScalarMappable: 1
mpl_collections.Collection: 1
v2.program_pb2.Arg: 1
Optional[xmon_device.XmonDevice]: 1
Callable[([ops.Qid], devices.GridQubit)]: 1
Iterable[op_serializer.GateOpSerializer]: 1
Iterable[op_deserializer.GateOpDeserializer]: 1
Optional[v2.program_pb2.Program]: 1
v2.program_pb2.Program: 1
Sequence[DeserializingArg]: 1
Iterable[LineSequence]: 1
LinePlacementStrategy: 1
List[List[GridQubit]]: 1
Set[EDGE]: 1
Callable[([T, float, float, float, bool], None)]: 1
run_context_pb2.Sweep: 1
Iterable[Iterable[study.TrialResult]]: 1
result_pb2.Result: 1
result_pb2.SweepResult: 1
Dict[(str, MeasureInfo)]: 1
sweeps.Zip: 1
sweeps.SingleSweep: 1
ops.PhasedXPowGate: 1
ops.MeasurementGate: 1
'xmon_device.XmonDevice': 1
Sequence[Tuple[(str, np.ndarray)]]: 1
Sequence[Tuple[(str, int)]]: 1
cirq.QasmArgs: 1
Union[(int, Sequence[cirq.Qid])]: 1
Optional[Dict[(cirq.Gate, int)]]: 1
Union[(Sequence[ops.Qid], int)]: 1
Optional[Dict[(ops.Gate, int)]]: 1
Type[ops.EigenGate]: 1
ops.EigenGate: 1
cirq.Schedule: 1
cirq.ScheduledOperation: 1
Iterable[ScheduledOperation]: 1
Union[(Timestamp, slice)]: 1
Union[(Duration, timedelta)]: 1
Iterable[LineQubit]: 1
LineQubit: 1
Callable[([ops.Operation], bool)]: 1
Optional[Callable[([cirq.Circuit], None)]]: 1
Sequence[cirq.SingleQubitGate]: 1
Sequence[Optional[raw_types.Qid]]: 1
'cirq.ApplyUnitaryArgs': 1
Callable[([Operation], OP_TREE)]: 1
Callable[([Iterable[OP_TREE]], OP_TREE)]: 1
Callable[([Iterable[raw_types.Qid]], Tuple[(raw_types.Qid, ...)])]: 1
Optional['QubitOrder']: 1
Callable[([raw_types.Qid], Any)]: 1
'qubit_order_or_list.QubitOrderOrList': 1
Callable[([TExternalQubit], TInternalQubit)]: 1
Callable[([TInternalQubit], TExternalQubit)]: 1
Mapping[(raw_types.Gate, value.Scalar)]: 1
Mapping[(raw_types.Operation, value.Scalar)]: 1
value.LinearDict[UnitPauliStringT]: 1
UnitPauliStringT: 1
Union[(int, float, complex)]: 1
Optional[value.LinearDict[UnitPauliStringT]]: 1
PauliSumLike: 1
Union[(PauliString, List[PauliString])]: 1
Sequence[Qid]: 1
Callable[([Qid], Qid)]: 1
'_PauliX': 1
'_PauliY': 1
'_PauliZ': 1
cirq.GateOperation: 1
TSelf_Moment: 1
Callable[([raw_types.Qid], raw_types.Qid)]: 1
Optional[Iterable['cirq.Qid']]: 1
Optional[Dict[('cirq.Qid', int)]]: 1
CircuitDiagramInfoArgs: 1
Union[(Tuple[np.ndarray], Sequence[Any])]: 1
cirq.LinearDict[str]: 1
SupportsMixture: 1
Dict[('cirq.Qid', str)]: 1
Tuple['cirq.Qid']: 1
Union[('cirq.Gate', op_tree.OP_TREE)]: 1
'cirq.ScheduledOperation': 1
VariationalAnsatz: 1
VariationalObjective: 1
Optional[cirq.Circuit]: 1
Union[(int, numpy.ndarray)]: 1
Union[(openfermion.DiagonalCoulombHamiltonian, openfermion.FermionOperator, openfermion.InteractionOperator, openfermion.QubitOperator)]: 1
Optional[TrotterAlgorithm]: 1
TrotterStep: 1
TrotterAlgorithm: 1
openfermion.InteractionOperator: 1
DiagonalCoulombHamiltonian: 1
Optional[List[Tuple[(float, Optional[float], Optional[numpy.ndarray])]]]: 1
Optional[List[float]]: 1
'OptimizationParams': 1
OptimizationAlgorithm: 1
Union[(sympy.Symbol, float)]: 1
Type[cirq.EigenGate]: 1
Iterable[cirq.Qid]: 1
Optional[Union[(Sequence[int], Tuple[(Sequence[int], Sequence[int])])]]: 1
Tuple[(Sequence[int], Sequence[int])]: 1
Callable[([int, int, cirq.Qid, cirq.Qid], cirq.OP_TREE)]: 1
Optional[Union[(int, Sequence[int])]]: 1
github_repository.GithubRepository: 1
Optional[github_repository.GithubRepository]: 1
mbq.env.Environment: 1
bpy.types.Scene: 1
BlockExportTree: 1
_Union[(str, bool, None)]: 1
_Type[BaseException]: 1
_TracebackType: 1
ClassFunc: 1
Callable[([str], EnumType)]: 1
Tuple[(Union[(float, VOLUME)], Union[(float, VOLUME)])]: 1
Tuple[(Union[(float, Level)], Union[(float, Level)])]: 1
Tuple[(Union[(float, Pitch)], Union[(float, Pitch)])]: 1
Iterable['Sound']: 1
Tuple[object]: 1
Callable[([Type[BaseException], BaseException, TracebackType], None)]: 1
Optional[_InitArgT]: 1
_InitArgT: 1
Dict[(str, 'SurfaceProp')]: 1
Dict[(str, Union[(str, Property)])]: 1
Dict[(str, Sequence[Command])]: 1
utils.InstanceConfig: 1
FlinkDeploymentConfigDict: 1
Mapping[(str, Mapping[(str, Any)])]: 1
Sequence[KubeCustomResource]: 1
V1Pod: 1
FlinkDeploymentConfig: 1
CassandraClusterDeploymentConfigDict: 1
Dict[(str, V1_Mapping)]: 1
V2_Mappings: 1
LongRunningServiceConfigDict: 1
BranchDictV2: 1
Union[(V1Deployment, V1StatefulSet)]: 1
V1Deployment: 1
NativeServiceConfigDict: 1
Optional[ServiceNamespaceConfig]: 1
TaskInfo: 1
_SelfT: 1
Type[_SelfT]: 1
DelayDeadlineQueue: 1
List[PaastaDeployWorker]: 1
BaseMetrics: 1
Optional[BounceTimers]: 1
Collection[Tuple[(str, str)]]: 1
SmartstackData: 1
Callable[(['SLOWatcher'], None)]: 1
Callable[(['SLOWatcher'], Any)]: 1
Callable[([str, bool], Any)]: 1
kazoo.client.KazooClient: 1
BaseCachedView: 1
ConfigsFileWatcher: 1
Tuple[dict]: 1
PendingOrderBase: 1
SignalCancelBase: 1
SignalCancelTST: 1
SignalCancelPending: 1
op.ReaderBase: 1
Callable[([dict], dict)]: 1
outlineItem: 1
AsyncCallback: 1
ImmutableDict: 1
'KinesisShard': 1
Callable[([List[Any], str, str, datetime], List[Any])]: 1
Callable[([Optional[List[Any]], str, Optional[str], Optional[datetime]], None)]: 1
Callable[([BeautifulSoup], ResultSet)]: 1
'"entry" or "entry_comment"': 1
[tuple, type]: 1
R.Response: 1
hug.directives.cors: 1
'The name': 1
hug.types.one_of(('news', 'newest', 'show')): 1
fields.DateTime(): 1
fields.Int(validate=Range(min=1)): 1
fields.Str(validate=OneOf(['minutes', 'days'])): 1
SMTP: 1
CreateUserSchema(): 1
unique_username: 1
'A Python file that contains a Hug API': 1
'A Python module that contains a Hug API': 1
'Interface to bind to': 1
'Run a command defined in the given module': 1
Container[Any]: 1
Optional[Iterable[Type[BaseFinder]]]: 1
Optional[Callable[([str], Any)]]: 1
aioxmpp.structs.JID: 1
'aioxmpp.node.Client': 1
aioxmpp.IQ: 1
aioxmpp.stream.StanzaStream: 1
aioxmpp.JID: 1
AbstractCommandHandler: 1
Optional[Headers]: 1
CloseReason: 1
Callable[([asyncio.Task, str], None)]: 1
Callable[(..., Optional[str])]: 1
simdspec.Signature: 1
simdspec.Interpretation: 1
'Signature': 1
'Bool': 1
get_text_type: 1
ty.Optional[str]: 1
ty.Dict[(str, int)]: 1
ty.List[str]: 1
ty.Union[(str, float, int)]: 1
ty.Any: 1
ty.Union[(int, float)]: 1
ty.Iterable[str]: 1
Organiser: 1
DownloadFile: 1
Type[AbstractView]: 1
Type[Request]: 1
Optional[Union[(_CIMultiDict, Dict[(str, str)], Iterable[Tuple[(str, str)]])]]: 1
_AsyncIterable: 1
Type['Application']: 1
Callable[([], AbstractResource)]: 1
Iterable[AbstractRouteDef]: 1
'FlowControlDataQueue[WSMessage]': 1
WebSocketWriter: 1
ClientResponse: 1
'CIMultiDict[str]': 1
OptLocals: 1
my_checker: 1
DoubleVar: 1
MinutiaType: 1
Canvas: 1
Minutia: 1
Bottle: 1
ToDoCreated: 1
uuid4: 1
ToDoItem: 1
BrokerConnection: 1
KombuMessage: 1
uuid: 1
Optional[Registry]: 1
Optional[MessageMapperRegistry]: 1
Optional[BrightsideMessageStore]: 1
Optional[BrightsideProducer]: 1
BrightsideConsumer: 1
Dict[(str, ConsumerConfiguration)]: 1
BrightsideMessageType: 1
BrightsideMessageBody: 1
Callable[([], Handler)]: 1
Callable[([Request], BrightsideMessage)]: 1
CommandProcessor: 1
[0, 1]: 1
(u.kg / (u.m ** 3)): 1
(u.kg / ((u.m ** 2) * u.s)): 1
(u.J / (u.m ** 3)): 1
u.Tesla: 1
(u.m / u.s): 1
Union[(Type[Any], Any)]: 1
Union[(Mapping[(str, List[str])], List[str])]: 1
Alliance: 1
'Condition': 1
Dict[(T, Any)]: 1
ModelResource: 1
SearchQuerySet: 1
Optional[Operand]: 1
Union[(State, None)]: 1
IOWrapper: 1
TreeViewModel: 1
Union[(QStandardItem, QStandardItemModel)]: 1
Optional[Union[(QTextCharFormat, Sequence[QTextCharFormat])]]: 1
Optional[QRegularExpression]: 1
QTextCharFormat: 1
HighlightRule: 1
Optional[HighlightRule]: 1
JSONRPC2Connection: 1
List[UnitKey]: 1
DefFormatData: 1
Union[(type, List, Dict)]: 1
QtWidgets.QListWidget: 1
List[AllWidgetTypes]: 1
SHA512Hash: 1
mitmproxy.addonmanager.Loader: 1
mitmproxy.log.LogEntry: 1
WebSocketMessage: 1
connections.ClientConnection: 1
connections.ServerConnection: 1
websocket.WebSocketFlow: 1
CommandManager: 1
Optional[http.Headers]: 1
CommandBuffer: 1
CommandHistory: 1
typing.Tuple[(typing.Iterable[bytes], typing.Container[int])]: 1
typing.Iterable[list]: 1
typing.Sequence[list]: 1
typing.Union[(typing.List[typing.List[typing.Any]], typing.List[typing.Any], str)]: 1
LogEntry: 1
mtypes.Path: 1
collections.deque: 1
HTTPResponse: 1
ClientConnection: 1
ServerConnection: 1
flow.Error: 1
http_pb2.HTTPRequest: 1
http_pb2.HTTPResponse: 1
http_pb2.ClientConnection: 1
http_pb2.ServerConnection: 1
http_pb2.HTTPError: 1
http_pb2.HTTPFlow: 1
typing.Type[typing.List]: 1
typing.Type[typing.Mapping]: 1
typing.Optional[tuple]: 1
typing.Iterable[typing.Tuple[(TTextType, TTextType)]]: 1
httpclient.HTTPResponse: 1
ActionPolicy: 1
StringOrStrings: 1
errors.InvalidUsage: 1
mp.Event: 1
Iterable[icalendar.cal.Event]: 1
icalendar.Calendar: 1
Surfaces: 1
Union[(Model, Options)]: 1
Union[(Model, KrigingParameters)]: 1
Union[(Model, RescaledData)]: 1
CenteredGrid: 1
ghmde.Repository: 1
ghmde.File: 1
ecore.EModelElement: 1
ecore.EClass: 1
ecore.EStructuralFeature: 1
Cashdesk: 1
SessionBaseForm: 1
ControllerDiscovery: 1
InputDevice: 1
messages.RippleSignTx: 1
List[messages.CardanoTxInputType]: 1
List[messages.CardanoTxOutputType]: 1
c.Container: 1
c.Construct: 1
Optional[logging.Handler]: 1
Iterable[Ed25519PublicPoint]: 1
Iterable[Ed25519Signature]: 1
List[Ed25519PublicPoint]: 1
WebUsbHandle: 1
ScopeEqualities: 1
DescendantMap: 1
ScopalArgumentStructure: 1
Iterable[Link]: 1
Iterable[EP]: 1
Iterable[HCons]: 1
Iterable[ICons]: 1
Mapping[(str, Mapping[(str, str)])]: 1
Optional[Pin]: 1
blocks.Block: 1
List[Pin]: 1
ObservableList: 1
KeyError: 1
'DNASegment': 1
'OrientedDNASegment': 1
Read: 1
List[OrientedRead]: 1
OrientedDNASegment: 1
MergedReads: 1
ComponentBuilder: 1
Optional[Persistor]: 1
List[Component]: 1
DataRouter: 1
'RasaNLUModelConfig': 1
Union[(Text, RasaNLUModelConfig)]: 1
Optional['MitieIntentClassifier']: 1
'sklearn.model_selection.GridSearchCV': 1
Optional['sklearn.preprocessing.LabelEncoder']: 1
Optional['SklearnIntentClassifier']: 1
Optional[List[Message]]: 1
Optional['RegexFeaturizer']: 1
Optional['NGramFeaturizer']: 1
Optional['CountVectorsFeaturizer']: 1
Optional['mitie.total_word_feature_extractor']: 1
Optional['MitieNLP']: 1
Optional['SpacyNLP']: 1
Optional['Language']: 1
Optional['DucklingHTTPExtractor']: 1
Optional['EntitySynonymMapper']: 1
Optional['MitieEntityExtractor']: 1
Optional[Component]: 1
List['api.PrettyAttribute']: 1
Union[(Tuple[(AttrCategory, ...)], AttrCategory)]: 1
'_Color': 1
Optional[List['PrettyAttribute']]: 1
Tuple[(AttrCategory, ...)]: 1
MappingProxyType: 1
Phoneme: 1
'expr': 1
['expr']: 1
ParseTreeStub: 1
indentable: 1
parsing.Node: 1
[ComponentTypeName]: 1
Fun: 1
error.Notification: 1
MapSourceTranslate: 1
(str or tuple): 1
MapTargetTranslate: 1
[TypeName]: 1
parsing.Call: 1
parsing.CallTrue: 1
parsing.Hook: 1
parsing.Rule: 1
parsing.Alt: 1
[ast.expr]: 1
parsing.Seq: 1
parsing.RepOptional: 1
(int or slice): 1
ListNodeItem: 1
state.EventExpr: 1
MatchExpr: 1
ref(Edge): 1
[list]: 1
state.LivingContext: 1
Union[(dict, list, tuple, str, bytes, None)]: 1
Union[(Dict[(str, str)], None)]: 1
AbstractSentenceIterator: 1
Union[('Response', None)]: 1
Union[(str, bytes, Dict[(str, str)], Dict[(bytes, bytes)])]: 1
List[APIKey]: 1
ModifyUser: 1
NewUser: 1
Type[AbstractJob]: 1
np.core.records.ndarray: 1
Optional[Callable[([subprocess.Popen], None)]]: 1
Optional[Callable[([int], None)]]: 1
Optional[Callable[([], bool)]]: 1
tornado.websocket.WebSocketHandler: 1
Optional[ValueArray]: 1
Optional[ValueType]: 1
Workspace: 1
TimeLike.TYPE: 1
Arbitrary.TYPE: 1
Literal.TYPE: 1
DataFrameLike.TYPE: 1
Tuple[(type, ...)]: 1
Optional[Executor]: 1
EventT: 1
FrozenSet[SearchKey]: 1
SequenceSet: 1
Flag: 1
Type[ConfigT]: 1
Type[FilterValueT]: 1
_Transport: 1
FlagOp: 1
Iterable[FetchAttribute]: 1
FetchAttribute.Section: 1
Writeable: 1
'_TreeNode': 1
Optional[SelectedMailbox]: 1
MailboxDataInterface[MessageT]: 1
Sequence[Flag]: 1
Iterable[Union[(bytes, Flag)]]: 1
Optional[NotParseable]: 1
Optional[Type[Command]]: 1
Type[Command]: 1
Union[(bytes, Writeable)]: 1
Type[MaybeBytesT]: 1
Iterable[Tuple[(int, int)]]: 1
_FetchData: 1
Mapping[(bytes, MaybeBytes)]: 1
Mapping[(StatusAttribute, Number)]: 1
Iterable[_AppendMsgArg]: 1
Sequence[StatusAttribute]: 1
Iterable['FetchRequirement']: 1
FrozenSet[bytes]: 1
ListP: 1
Iterable[ExtensionOption]: 1
Sequence[_SeqElem]: 1
_SeqElem: 1
_SeqIdx: 1
_FilterType: 1
'MessageHeader': 1
'MessageBody': 1
_Folded: 1
ParsedHeaders: 1
Sequence[_Lines]: 1
Optional[ContentTypeHeader]: 1
Sequence[MessageContent]: 1
MessageHeader: 1
Optional[ContentTransferEncodingHeader]: 1
Union[(bytes, memoryview)]: 1
FrozenSet[int]: 1
Sequence[Sequence[bytes]]: 1
Union[(_FormatArg, Iterable[_FormatArg])]: 1
_FormatArg: 1
Iterable[_FormatArg]: 1
SieveRunner: 1
SieveTest: 1
AddressPart: 1
SizeComparator: 1
SessionInterface: 1
NotParseable: 1
_Capabilities: 1
FilterSetInterface[bytes]: 1
BackendInterface: 1
AppendResponse: 1
AdminStub: 1
FieldOrFactory: 1
typing.Dict[(str, ma.fields.Field)]: 1
typing.Union[(str, typing.Iterable)]: 1
typing.Union[(str, typing.Mapping[(str, T)])]: 1
Subcast: 1
typing.Type[ma.fields.Field]: 1
fields.Str(missing='Friend'): 1
fields.Str(required=True): 1
ArgMap: 1
typing.Optional[Request]: 1
Validate: 1
typing.Union[(int, None)]: 1
json.JSONDecodeError: 1
cozmoR.robot.Robot: 1
List[Union[(InputMediaPhoto, InputMediaVideo)]]: 1
core.TextReplacer: 1
csr_matrix: 1
Tuple[Route]: 1
CT: 1
Route: 1
List[RequestParamAnnotation]: 1
ItemId: 1
NoteTypes: 1
IsDeleted: 1
FoosWithParser: 1
ColorsOrObject: 1
sqlalchemy.engine.Engine: 1
[sqlalchemy.sql.schema.MetaData]: 1
mara_db.dbs.PostgreSQLDB: 1
mara_db.dbs.SQLiteDB: 1
mara_page.response.ActionButton: 1
Movie: 1
BoxSlot: 1
BrainNN: 1
Union[(discord.Guild, int)]: 1
discord.Object: 1
PartialEmoji: 1
Set[PartialEmoji]: 1
lifesaver.Context: 1
Type[ModAction]: 1
CheckOptions: 1
Union[(Dict, None)]: 1
FILENAME: 1
reward_net.RewardNet: 1
Union[(gym.Env, str)]: 1
DiscrimNet: 1
Tuple[(np.ndarray, np.ndarray, np.ndarray)]: 1
Dict[(str, Tuple[(int, ...)])]: 1
Dict[(str, np.dtype)]: 1
Optional[gym.Env]: 1
Type[BasePolicy]: 1
LayersDict: 1
BasePolicy: 1
VecNormalize: 1
Optional[VecNormalize]: 1
Optional['Application']: 1
Optional['MockPath']: 1
List[Document]: 1
HiddenField: 1
Union[(_symbol, str)]: 1
Thread: 1
Optional[CommunityPresenter]: 1
TextAreaField: 1
Union[(Document, WikiPage)]: 1
'Translations': 1
'Service': 1
'Changes': 1
'AuditService': 1
Optional[AuditServiceState]: 1
'PreferenceService': 1
PreferencePanel: 1
Optional[Flask]: 1
Union[(BytesIO, bytes)]: 1
Type['_VocabularyMeta']: 1
Tuple[(Type[Model], ...)]: 1
'SettingsService': 1
Union[(Dict[(str, Any)], ImmutableMultiDict)]: 1
DynamicIcon: 1
'AuthService': 1
Union[(LazyString, str)]: 1
Union[(str, Endpoint)]: 1
Collection[Role]: 1
Union[(Collection[Role], Role)]: 1
Union[(None, str, Role, Collection[Role])]: 1
FileField: 1
EntityQuery: 1
DummyForm: 1
DummyField: 1
Union[(None, Entity, object)]: 1
Union[(Entity, Type[Entity])]: 1
Union[(db.Model, Hit, Dict, None)]: 1
Union[('Application', Blueprint)]: 1
AuditEntry: 1
SecurityAudit: 1
Type['ValueSingletonMeta']: 1
Tuple[Type]: 1
Union[(None, str, uuid.UUID)]: 1
flask_mail.Connection: 1
'Info': 1
Union[(Type['User'], Type['Group'])]: 1
QWebEnginePage: 1
QWebEngineUrlRequestJob: 1
Qt.WindowState: 1
Union[(OscMessage, OscBundle)]: 1
Union[(int, float, bytes, str, bool, tuple, list)]: 1
BaseEventLoop: 1
Union[(Any, List[Any])]: 1
OscMessage: 1
Tuple[(Tuple[(int, int, int, int)], int)]: 1
SymbolMapper: 1
List[Identifier]: 1
'SymbolMap': 1
Union[(Identifier, NamedAccess)]: 1
IndexedAccess: 1
'ParameterVector': 1
AssignmentOperation: 1
IterationLoop: 1
TryBlock: 1
LexicalToken: 1
List[List[LexicalToken]]: 1
List[LexicalToken]: 1
LexicalRepeatFor: 1
LexicalIn: 1
LexicalRepeatWhile: 1
LexicalConditional: 1
LexicalTry: 1
LexicalThrowStatement: 1
LexicalBinaryOperation: 1
'NamedAccess': 1
SecondOrderLexicalBinaryOperation: 1
FirstOrderLexicalBinaryOperation: 1
LexicalLogic: 1
NamedAccess: 1
LexicalExclamation: 1
LexicalNegation: 1
LexicalDeclarationMethod: 1
METHOD_NAME_TYPES: 1
LexicalDeclarationConstructor: 1
LexicalDeclarationReturnType: 1
TypeList: 1
LexicalDeclarationStatic: 1
LexicalImplicitTag: 1
(LexicalDeclarationMember, LexicalPrivateTag): 1
MEMBER_NAME_TYPES: 1
CompilationContext: 1
LexicalDeclarationThing: 1
'TypeVector': 1
LexicalInheritanceTag: 1
ProgramTestCase: 1
Union[(None, List[str])]: 1
Tuple[Results]: 1
Union[(pd.DataFrame, pd.Series)]: 1
Iterable[Union[(tuple, float)]]: 1
Union[(list, pd.DataFrame)]: 1
Optional[pd.DataFrame]: 1
Optional[Union[(float, ArrayLike)]]: 1
'Layout': 1
Callable[([], Optional[Validator])]: 1
MouseEventType: 1
_Sender: 1
Optional[Callable[([_Sender], None)]]: 1
Union[(Callable[([], str)], str)]: 1
Union[(Callable[([], int)], int)]: 1
Union[(Callable[([], float)], float)]: 1
Callable[([], _U)]: 1
Callable[(..., _V)]: 1
_K: 1
Union[(bool, Filter)]: 1
Callable[([], Optional[AutoSuggest])]: 1
Callable[([], Optional[Lexer])]: 1
'PygmentsLexerCls': 1
Type['PygmentsLexerCls']: 1
Optional[SyntaxSync]: 1
List[Tuple[(str, _T)]]: 1
Optional[Completer]: 1
Optional[List[Tuple[(_T, AnyFormattedText)]]]: 1
Callable[([Callable[([int], None)], Callable[([str], None)]], None)]: 1
Optional[Sequence[Formatter]]: 1
Optional[KeyBindings]: 1
Optional[ColorDepth]: 1
Optional[Output]: 1
Optional[Input]: 1
Optional[Iterable[_T]]: 1
Optional[Iterable[_CounterItem]]: 1
Callable[([], Optional[Clipboard])]: 1
Optional[ClipboardData]: 1
Dict[(str, Validator)]: 1
Optional[Dict[(str, Lexer)]]: 1
Dict[(str, Completer)]: 1
Iterable[Completion]: 1
Callable[([bytes], None)]: 1
Callable[([int, int], None)]: 1
Callable[(['TelnetConnection'], Awaitable[None])]: 1
'TelnetServer': 1
Callable[([TelnetConnection], Awaitable[None])]: 1
Callable[([MouseEvent], None)]: 1
Margin: 1
Callable[([], StyleAndTextTuples)]: 1
Optional[Callable[([int, int, bool], StyleAndTextTuples)]]: 1
Optional[Char]: 1
'WritePosition': 1
Union[(_T, Iterable[_T])]: 1
Optional[FocusableElement]: 1
UIControl: 1
'FocusableElement': 1
EditingMode: 1
InputMode: 1
List[Completion]: 1
BaseSelector: 1
Optional[AbstractEventLoop]: 1
Token[_T]: 1
List[KeyPress]: 1
Callable[([KeyPress], None)]: 1
Union[(str, Keys, Tuple[(Keys, ...)])]: 1
Iterable[AnyFormattedText]: 1
List[Tuple[('Token', str)]]: 1
Union[(object, Tuple[(object, ...)])]: 1
Callable[([], Optional[Completer])]: 1
Sequence[Completion]: 1
Optional[Pattern[str]]: 1
'_FuzzyMatch': 1
Optional[Callable[([], List[str])]]: 1
Optional[Callable[([str], bool)]]: 1
Callable[([], _T)]: 1
'Application[Any]': 1
List['MenuItem']: 1
Optional[List[Float]]: 1
Optional[KeyBindingsBase]: 1
Optional[List['MenuItem']]: 1
Optional[Sequence[Union[(Keys, str)]]]: 1
Optional[Buffer]: 1
Optional[Sequence[Button]]: 1
Callable[([], Optional[BaseStyle])]: 1
Callable[([], Optional[StyleTransformation])]: 1
StyleTransformation: 1
Type['PygmentsStyle']: 1
Dict[('Token', str)]: 1
'Token': 1
Priority: 1
List[Attrs]: 1
BaseConfig: 1
xarray.DataArray: 1
MockLC: 1
SimulationSetup: 1
RankedSeasons: 1
UserFirefox: 1
RequestException: 1
Callable[([Dict], Any)]: 1
Callable[([Any, Any], None)]: 1
MappingJSONEncoder: 1
Tuple[PropertyMapper]: 1
Optional[SerializableType]: 1
Type[Serializer]: 1
Type[JSONDecoder]: 1
Union[(Type[JSONEncoder], Callable[([], Type[JSONEncoder])])]: 1
Union[(Type[JSONDecoder], Callable[([], Type[JSONDecoder])])]: 1
Optional[Iterable[PropertyMapping]]: 1
Callable[([Iterable[PropertyMapping]], Serializer)]: 1
Callable[([Iterable[PropertyMapping]], Deserializer)]: 1
'_Container': 1
SimpleModel: 1
Iterable[_CollectionItemType]: 1
_CollectionItemType: 1
_ProgressCallback: 1
Tuple[(int, int, str)]: 1
Quran: 1
ResponseError: 1
SqliteSession: 1
SqliteLogger: 1
InlineKeyboardLayout: 1
InlineKeyboardButton: 1
SchedulerApi: 1
ProjectInfo: 1
List[ApiObject]: 1
Hashtag: 1
HashtagList: 1
SameMessageSender: 1
ReusableMessageLimiter: 1
TelegramBotApiException: 1
QueueWorkerPool: 1
WorkerPoolNameGenerator: 1
asynctnt.Connection: 1
TensorBuffer: 1
ImagePool: 1
Union[(str, Dict[(str, tf.Tensor)])]: 1
Union[(bool, Dict[(str, bool)])]: 1
Dict[(str, Union[(tf.Tensor, np.ndarray, List)])]: 1
Union[(tf.Tensor, np.ndarray, List)]: 1
Union[(list, np.ndarray, tf.Tensor)]: 1
Union[(slice, list, np.ndarray, str)]: 1
tf.train.Example: 1
List[HighlightDefinition]: 1
concents.ServiceRefused: 1
message.concents.ForcePayment: 1
typing.Optional[Path]: 1
'Type[NodeTestPlaybook]': 1
'queue.Queue': 1
semantic_version.Spec: 1
Optional[Tuple[(str, str, str)]]: 1
TCPConnectInfo: 1
TCPListenInfo: 1
TCPListeningInfo: 1
SoftSwitch: 1
FileTransferToken.FileInfo.Category: 1
Optional[ClientConfig]: 1
HyperdriveAsyncClient: 1
Optional[Peers]: 1
Sequence[Type[peewee.Field]]: 1
Sequence[Type[peewee.Model]]: 1
Type[Database]: 1
'Database': 1
'CertificateManager.CrossbarUsers': 1
crypto.PKey: 1
Optional[SerializerType]: 1
WebSocketAddress: 1
ApplicationSession: 1
CertificateManager: 1
Dict[(Text, Callable)]: 1
typing.List[MissingFunds]: 1
model.TaskPayment: 1
List[Tuple[(str, AclRule, Optional[int])]]: 1
Type[TaskDefinition]: 1
Type[Options]: 1
'Type[TaskBuilder]': 1
TaskPurpose: 1
TaskTypeInfo: 1
dt_tasks.TaskHeader: 1
TaskState: 1
Callable[([], ComputeTaskDef)]: 1
Dict[(EnvId, bool)]: 1
Dict[(str, 'TaskClient')]: 1
SubtaskStatus: 1
WantToComputeTask: 1
TaskToCompute: 1
CreateTaskParams: 1
SubtaskId: 1
'TaskSession': 1
ExtractedPackage: 1
message.tasks.SubtaskResultsRejected.REASON: 1
Optional[Union[(dict, HyperdriveClientOptions)]]: 1
'TaskServer': 1
'WaitingTaskResult': 1
List[DockerImage]: 1
Union[('DockerImage', Tuple, Dict)]: 1
List[Union[(DockerImage, Dict, Tuple)]]: 1
DockerDirMapping: 1
NodeMetadataModel: 1
AsyncRequest: 1
Optional[Union[(bytes, str)]]: 1
defer.Deferred: 1
Union[(ipaddress.IPv4Address, ipaddress.IPv6Address)]: 1
Union[(ipaddress.IPv4Network, ipaddress.IPv6Network)]: 1
LocalComputer: 1
dt_p2p.Node: 1
DirManager: 1
CoreTaskTypeInfo: 1
DummyTaskTypeInfo: 1
DummyTaskDefaults: 1
VerificationTask: 1
CoreBenchmark: 1
'FloatingPointBox': 1
Optional[FloatingPointBox]: 1
[List[Crop]]: 1
Crop: 1
List[Crop]: 1
BuderusBridge: 1
pyCardDeck.deck: 1
KittenCard: 1
GripPipeline: 1
'bot_added': 1
'bot_changed': 1
'channel_archive': 1
'channel_created': 1
'channel_deleted': 1
'channel_history_change': 1
'channel_joined': 1
'channel_left': 1
'channel_marked': 1
'channel_rename': 1
'channel_unarchive': 1
'email_domain_changed': 1
'file_change': 1
'file_comment_added': 1
'file_comment_deleted': 1
'file_comment_edited': 1
'file_created': 1
'file_deleted': 1
'file_private': 1
'file_public': 1
'file_shared': 1
'file_unshared': 1
'group_archive': 1
'group_close': 1
'group_history_changed': 1
'group_joined': 1
'group_left': 1
'group_marked': 1
'group_open': 1
'group_rename': 1
'group_unarchive': 1
'im_close': 1
'im_created': 1
'im_history_changed': 1
'im_marked': 1
'im_open': 1
'manual_presence_change': 1
'pref_chage': 1
'presence_change': 1
'star_added': 1
'star_removed': 1
'team_domain_change': 1
'team_join': 1
'team_pref_change': 1
'team_rename': 1
'user_change': 1
ALL: 1
bs4.element.Tag: 1
SearchPred: 1
ZApp: 1
zoe_lib.state.SQLManager: 1
NodeStats: 1
ClusterStats: 1
List[SimulatedNode]: 1
IRequest: 1
TestApp: 1
TimeIntervalDisplay: 1
List[Number]: 1
Sequence[Line]: 1
package.Package: 1
Iterable[package.Package]: 1
List[dependency_highlighter.OutdatedDependency]: 1
MessageAndDuration: 1
List[CheckResponse]: 1
'Queue[int]': 1
errors.HttpError: 1
CreationMode: 1
kubernetes.client.CoreV1Api: 1
kubernetes.client.ExtensionsV1beta1Api: 1
im.InnerModel: 1
om.OuterModel: 1
WeightsCalculatorFactory: 1
'BICO': 1
Callable[([int, int, float], NearestNeighbor)]: 1
ClusteringFeature: 1
hook_type: 1
MetadataExtractor: 1
List[Seq]: 1
Alphabet: 1
Dict[(Seq, Set[Seq])]: 1
AttentionSeq2Seq: 1
InfoHolder: 1
Optional[Job]: 1
ImageInfo: 1
Iterable[ImageInfo]: 1
TocEntry: 1
Iterable[TocEntry]: 1
PhysicalItem: 1
Optional[Tuple[(int, str, int)]]: 1
HTTPException: 1
BasicAuthError: 1
PolygraphInputValue: 1
PolygraphField: 1
PolygraphType: 1
Iterable[PolygraphType]: 1
Iterable[PolygraphField]: 1
([Channels] or [str]): 1
TOCEntry: 1
RawClient: 1
'Optional[RawClient]': 1
Union[(Action, Any)]: 1
Callable[([], aiohttp.ClientSession)]: 1
ni_abc.CLAHost: 1
PullRequestEvent: 1
JSONDict: 1
'SharedSessionSecret': 1
SharedSessionMaster: 1
SplitSession: 1
Share: 1
_Union[(int, float, str, Decimal, Fraction)]: 1
Fraction: 1
_Union[(int, str)]: 1
Friend: 1
Inbound: 1
Outbound: 1
Union[(PauliSum, PauliTerm, np.ndarray)]: 1
Dict[(int, str)]: 1
ufunc: 1
List[Union[(int, float)]]: 1
Dict[(Tuple[(int, int)], Union[(int, float)])]: 1
Dict[(Tuple[(int, int)], int)]: 1
Dict[(str, Union[(bool, int)])]: 1
QPUCompiler: 1
QVMConnection: 1
BinaryExecutableRequest: 1
QVMCompiler: 1
Dict[(str, Union[(bool, Sequence[int])])]: 1
List[Gate]: 1
Union[(PauliSum, List[PauliTerm])]: 1
List[Optional[Tuple[(int, int)]]]: 1
PyQuilExecutableResponse: 1
github.Repository.Repository: 1
Iterable[WindowInfo]: 1
'QPainter': 1
Union[(ManagesNames, AbstractConnection)]: 1
'ManagesNames': 1
AbstractConnectionManager: 1
AbstractConnection: 1
'AbstractCall': 1
AbstractRegistrationManager: 1
AbstractPublisherManager: 1
AbstractPublisher: 1
AbstractSubscriptionManager: 1
Union[(ManagesNames, AbstractCall)]: 1
Union[(ManagesNames, AbstractRegistrationManager)]: 1
PythonRepl: 1
Union[(ManagesNames, AbstractPublisher)]: 1
Union[(ManagesNames, AbstractPublisherManager)]: 1
Union[(ManagesNames, AbstractSubscriptionManager)]: 1
Union[(ManagesNames, AbstractConnectionManager)]: 1
ap.Namespace: 1
List[ScryfallCardCount]: 1
counts.ScryfallCardCount: 1
bundles.ScryfallDataSet: 1
List[Tuple[(str, List[List[str]])]]: 1
RequestsMock: 1
ser_interface.SerializationDialect: 1
Mapping[(CountType, int)]: 1
Sequence[ScryCard]: 1
EnumMeta: 1
Union[(Dict[(str, Any)], List[Dict[(str, Any)]])]: 1
models.ScryObject: 1
QtCore.QtMsgType: 1
QtCore.QMessageLogContext: 1
traceback: 1
Optional['hyo2.soundspeed.soundspeed.SoundSpeedLibrary']: 1
Optional[ExportDbFields]: 1
'hyo2.soundspeed.soundspeed import SoundSpeedLibrary': 1
Union[(date, dt, None)]: 1
Union[(int, float, str)]: 1
Callable[([TypeVar('T')], Failable)]: 1
Optional[CFGBlock]: 1
astroid.ClassDef: 1
astroid.FunctionDef: 1
astroid.If: 1
astroid.While: 1
astroid.Break: 1
astroid.Continue: 1
astroid.Return: 1
Union[(astroid.Break, astroid.Continue, astroid.Return)]: 1
Union[(astroid.For, astroid.While)]: 1
astroid.Comprehension: 1
astroid.Name: 1
Union[(astroid.AssignName, astroid.Name)]: 1
TypeFail: 1
astroid.BinOp: 1
astroid.UnaryOp: 1
astroid.Subscript: 1
Union[(type, TypeFail)]: 1
TypeFailUnify: 1
TypeFailFunction: 1
Dict[(NodeNG, ControlFlowGraph)]: 1
graphviz.Digraph: 1
_MetadataLike: 1
'Deadline': 1
'IServable': 1
_Callback: 1
'IEventsTarget': 1
Type[_EventType]: 1
Callable[([_EventType], Coroutine[(Any, Any, None)])]: 1
Collection['IServable']: 1
Collection[Service]: 1
CodeGeneratorRequest: 1
FileDescriptorProto: 1
DescriptorProto: 1
'Collection[IServable]': 1
'IProtoMessage': 1
Set['CheckBase']: 1
Collection[asyncio.Event]: 1
Mapping[(asyncio.Event, 'asyncio.Future[bool]')]: 1
Optional[_ChecksConfig]: 1
Callable[([], Awaitable[_Status])]: 1
_Status: 1
ProcessPoolExecutor: 1
Rover: 1
List[Tuple[(bool, Tuple[(int, ...)])]]: 1
Iterator[Exercise]: 1
Iterator[Company]: 1
Optional['Player']: 1
Optional[ValueExtractor]: 1
Connector: 1
MerkleTree: 1
MappingSerializer: 1
FileStore: 1
SovrinErrorCode: 1
Hash: 1
sanic.Sanic: 1
[(int, str, str)]: 1
slackweb.Slack: 1
hvac.Client: 1
Union[(Reducer, Module)]: 1
Chrome: 1
'typing.Mapping': 1
'errbot.backends.base.Message': 1
VHDDisk: 1
'MOWrapper': 1
PropertyTransformer: 1
'ManagementObject': 1
RangedCodeEnum: 1
Point2d: 1
Tuple[(Tuple[(int, int, float)], ...)]: 1
DimensionalSynthesis: 1
Sequence[Sequence[Tuple[(int, int)]]]: 1
QProgressDialog: 1
Optional[QListWidgetItem]: 1
List[List[Tuple[(float, float)]]]: 1
Dict[(int, List[Tuple[(float, float)]])]: 1
Tuple[(VPoint, ...)]: 1
Optional[Tuple[VPoint]]: 1
Dict[(str, Sequence[Tuple[(float, float)]])]: 1
List[Tuple[(Tuple[(int, int)], ...)]]: 1
RegexLexer: 1
Sequence[VLink]: 1
List[_Coord]: 1
Dict[(str, Tuple[_Coord])]: 1
Dict[(str, Tuple[(float, float, float)])]: 1
Sequence[Union[(Tuple[(_Coord, ...)], _Coord)]]: 1
Union[(List[str], Iterator[str])]: 1
Sequence[Union[(str, float)]]: 1
(str, dict, list): 1
Union[(RtlSignal, Interface)]: 1
Union[(int, 'TimeIndependentRtlResource.INVARIANT_TIME')]: 1
'HlsAllocator': 1
Union[(HlsOperation, HlsRead, HlsWrite)]: 1
HlsOperation: 1
HlsRead: 1
HlsWrite: 1
DummyPlatform: 1
'PropDeclrCollector': 1
Optional[SimModel]: 1
SimSignal: 1
Tuple[Value]: 1
Optional[VcdVarWritingScope]: 1
Union[(Interface, Unit, Param)]: 1
VerilogSerializerCtx: 1
BitsVal: 1
HArrayVal: 1
SliceVal: 1
HEnumVal: 1
Union[(HdlStatement, Operator)]: 1
Clk: 1
Rst: 1
Rst_n: 1
HandshakedAgent: 1
List[Tuple[(Value, List[HdlStatement])]]: 1
Optional['TransTmpl']: 1
Optional[HStructField]: 1
HStream: 1
ObjIteratorCtx: 1
Tuple[TransTmpl]: 1
Optional[HdlStatement]: 1
Set[RtlSignalBase]: 1
List[RtlSignalBase]: 1
StreamTransaction: 1
'FrameTmpl': 1
Union[(HStructField, HdlType)]: 1
Set['RtlSignal']: 1
Optional[HdlType]: 1
Union[(int, RtlSignal, Value)]: 1
BramPort_withoutClk: 1
List[Tuple[(int, Set)]]: 1
List[Tuple[(Union[(int, AUTO_ADDR)], int, Set)]]: 1
Optional[Tuple[(Clk, Clk)]]: 1
Axi3: 1
Axi3Lite: 1
Handshaked: 1
Union[(Handshaked, VldSynced)]: 1
OutNodeInfo: 1
StructIntf: 1
Union[(TransPart, ChoicesOfFrameParts, StreamOfFramePars)]: 1
Union[(bool, RtlSignal)]: 1
Union[(StructIntf, UnionSource)]: 1
TransPart: 1
Union[(UnionSource, UnionSink)]: 1
ListOfOutNodeInfos: 1
Union[(TransPart, ChoicesOfFrameParts)]: 1
Union[(RtlSignal, bool)]: 1
Union[(str, Path, List[str])]: 1
Union[(List[Path], Iterable)]: 1
mc.model.MoveDirectionEnum: 1
mc.mc_global.BreathingState: 1
[str, Iterator[str]]: 1
CrumbArgsMap: 1
Dict[(str, List[hansel.Crumb])]: 1
[Dict, CrumbArgsSequences]: 1
'o': 1
'b': 1
TraitTarget: 1
odict: 1
Resolutions: 1
Union[(Expression, Pattern)]: 1
Replacement: 1
Sequence[Tuple[(Sequence[int], Replacement)]]: 1
Union[(List['expressions.Expression'], 'expressions.Expression')]: 1
Type[Operation]: 1
Union[(None, Dict[(str, Any)], List[Dict[(str, Any)]])]: 1
SpotifyPlaylist: 1
Serializer[TSer]: 1
Deserializer[TDe]: 1
Serializer[T]: 1
Deserializer[T]: 1
StateStore[(KT, VT)]: 1
qrlmining_pb2.GetBlockMiningCompatibleReq: 1
qrlmining_pb2.GetLastBlockHeaderReq: 1
qrlmining_pb2.GetBlockToMineReq: 1
qrlmining_pb2.SubmitMinedBlockReq: 1
qrldebug_pb2.GetFullStateReq: 1
GetNodeInfoReq: 1
SyncState: 1
ESyncState: 1
XMSS: 1
qrl_pb2.Transaction: 1
IPMetadata: 1
MQTTPayload: 1
ConnectPayload: 1
ConnackVariableHeader: 1
PublishVariableHeader: 1
SubackPacket: 1
UnsubackPacket: 1
PingRespPacket: 1
ConnectPacket: 1
PingReqPacket: 1
SubscribePacket: 1
UnsubscribePacket: 1
pkg_resources.EntryPoint: 1
Gtk.ToggleButton: 1
PersonV2: 1
PersonV3: 1
TypeHintsPerson: 1
List[Union[(str, int)]]: 1
Union[(Union[(int, str, Optional[int])], Union[(int, str, Optional[int])])]: 1
MYTYPE: 1
'MYTYPE2': 1
INT: 1
NEW_INT: 1
'BinaryTree': 1
BaricSystem: 1
Terrain: 1
FlyingGroup: 1
Union[(Tuple[(Point, Point, Point)], List[Point])]: 1
FlyingType: 1
ParkingSlot: 1
PlaneType: 1
HelicopterType: 1
UnitType: 1
condition.Condition: 1
action.Action: 1
dcs.mission.Mission: 1
VNav: 1
Steer: 1
MediaTypes: 1
owncloud.Client: 1
TLSProxy: 1
'RplintTest': 1
MismatchValue: 1
SelectorList: 1
dbmodels.RSAPrivateKey: 1
x509.Name: 1
RSAPrivateKey: 1
dbmodels.CertificateSigningRequest: 1
dbmodels.Certificate: 1
Union[(io.RawIOBase, io.BufferedIOBase)]: 1
DeviceInformation: 1
SecurityInfo: 1
ProfileList: 1
CertificateList: 1
InstalledApplicationList: 1
InstallProfile: 1
AvailableOSUpdates: 1
InstallApplication: 1
CertificateSet: 1
SignerIdentifier: 1
DigestAlgorithm: 1
SignedDigestAlgorithm: 1
TypeProvider: 1
List[PycksonAttribute]: 1
SerializerProvider: 1
ParserProvider: 1
'Quz': 1
'Toto': 1
List['ForwardListType']: 1
Iterable[Union[(Mesh, 'CollectionOfMeshes')]]: 1
Union[(Callable, Iterable[float])]: 1
'Axis': 1
ResultProxy: 1
types.account.Password: 1
Iterable[TypeMessageEntity]: 1
'typing.Optional[hints.MarkupLike]': 1
ObjectFile: 1
Char: 1
types.CType: 1
CType: 1
SourceLocation: 1
ir.Block: 1
ir.ProcedureCall: 1
LayerData: 1
QImage: 1
QLocalSocket: 1
AuthenticationResponse: 1
Optional[AuthenticationResponse]: 1
'ResponseStatus': 1
'ConnectionType': 1
'ConnectionState': 1
Optional['FileHandler']: 1
'FirmwareUpdateState': 1
Optional['MaterialOutputModel']: 1
Optional[MaterialOutputModel]: 1
Optional['PrintJobOutputModel']: 1
Optional[QImage]: 1
Optional['PrinterConfigurationModel']: 1
Optional['PrinterOutputModel']: 1
List['ExtruderConfigurationModel']: 1
'QualityNode': 1
'MaterialNode': 1
Optional['VariantType']: 1
'DefinitionContainer': 1
Optional['GlobalStack']: 1
Preferences: 1
List[SettingVisibilityPreset]: 1
'DiscoveredPrinter': 1
'QualityGroup': 1
'ZipFile': 1
Optional[Dict[(int, SceneNode)]]: 1
Optional[List[SceneNode]]: 1
Dict[(str, _NodeInfo)]: 1
List[Polygon]: 1
MultiBuildPlateModel: 1
Optional[Polygon]: 1
'SettingDefinition': 1
'CuraContainerStack': 1
'UploadBackupJob': 1
trimesh.base.Trimesh: 1
List[Dict[(str, Union[(str, List[str], int)])]]: 1
PrinterOutputDevice: 1
PrintJobOutputModel: 1
'LocalClusterOutputDevice': 1
Dict[(str, LocalMaterial)]: 1
Callable[([List[ClusterPrinterStatus]], Any)]: 1
Callable[([List[ClusterPrintJobStatus]], Any)]: 1
PrinterSystemStatus: 1
UltimakerNetworkedPrinterOutputDevice: 1
'UltimakerNetworkedPrinterOutputDevice': 1
Union[(T, Dict[(str, Any)])]: 1
List[Union[(T, Dict[(str, Any)])]]: 1
List[ConfigurationChangeModel]: 1
List[Union[(Dict[(str, Any)], ClusterPrintJobConstraints)]]: 1
List[Union[(Dict[(str, Any)], ClusterPrintJobConfigurationChange)]]: 1
List[Union[(Dict[(str, Any)], ClusterPrintJobImpediment)]]: 1
ClusterOutputController: 1
UM3PrintJobOutputModel: 1
PrinterOutputModel: 1
Union[(None, Dict[(str, Any)], ClusterPrinterConfigurationMaterial)]: 1
ExtruderOutputModel: 1
ExtruderConfigurationModel: 1
List[Union[(ClusterPrinterStatus, Dict[(str, Any)])]]: 1
List[Union[(ClusterPrintJobStatus, Dict[(str, Any)])]]: 1
QNetworkAccessManager: 1
Callable[([List[CloudError]], None)]: 1
Callable[([List[CloudClusterResponse]], Any)]: 1
Callable[([CloudClusterStatus], Any)]: 1
CloudPrintJobUploadRequest: 1
Callable[([CloudPrintJobResponse], Any)]: 1
Callable[([CloudPrintResponse], Any)]: 1
CloudApiClient: 1
BackendState: 1
CloudClusterStatus: 1
CloudPrintResponse: 1
List[CloudClusterResponse]: 1
CloudOutputDevice: 1
BufferedIOBase: 1
Savitar.SceneNode: 1
ToolHandle: 1
Optional[Plane]: 1
Union[(Iterable, str)]: 1
QMimeType: 1
Union[(str, bytes, int, 'Version', List[Union[(int, str, bytes)]])]: 1
Ray: 1
'AxisAlignedBox': 1
Union[(List, numpy.array)]: 1
'OutputDevice': 1
'OutputDevicePlugin': 1
'FileReader': 1
'FileWriter': 1
ReadFileJob: 1
ShaderProgram: 1
Optional[Matrix]: 1
Optional[MeshData]: 1
Optional[Camera]: 1
ReadMeshJob: 1
SceneNode.SceneNode: 1
Optional['MeshData']: 1
Matrix: 1
Optional['ContainerInterface']: 1
RelationType: 1
Optional[ContainerInterface]: 1
Set['SettingRelation']: 1
List['SettingRelation']: 1
ast.Name: 1
'ContainerRegistry': 1
InstanceContainer: 1
'RenderPass': 1
'QQmlEngine': 1
'QJSEngine': 1
PluginRegistry: 1
VersionUpgradeManager: 1
arg(choices=('bash', 'fish'), help='Shell to install completion for'): 1
arg(help='~/.bashrc.d/runcommands.rc or ~/.config/fish/runcommands.fish'): 1
'Overwrite if exists': 1
'Pass -e option to tox with the specified environments': 1
'Pass --recreate flag to tox': 1
'Remove tox directory first': 1
arg(help='Show errors'): 1
arg(inverse_option=DISABLE, help="Don't ignore any errors"): 1
arg(inverse_option=DISABLE, help='Ignore noqa directives'): 1
arg(short_option='-m'): 1
arg(short_option='-f'): 1
arg(container=dict, type=json_value, help='Global variables & default args for *all* commands; will be injected into itself, default args, and environment variables (higher precedence than keyword args)'): 1
arg(help='env will be added to globals if specified'): 1
arg(help='version will be added to globals if specified'): 1
arg(type=bool, help='echo=True will be added to globals', inverse_help='echo=False will be added to globals'): 1
arg(container=dict, help='Additional environment variables; added just before commands are run'): 1
arg(help='Show info and exit'): 1
arg(help='Show info & commands and exit'): 1
arg(type=bool, help='Print debugging info & re-raise exceptions; also added to globals'): 1
arg(type=bool_or(str), choices=('format', 'string')): 1
'Get short hash': 1
'Print version to stdout': 1
arg(type=dict): 1
arg(type=bool): 1
arg(container=dict): 1
CompletedProcess: 1
arg(choices=('bash', 'fish')): 1
'Method': 1
'Content': 1
List[cb.CompositeBehavior]: 1
Union[(bool, Callable)]: 1
Tuple[(role_assignment.RoleRequirements, robocup.OurRobot)]: 1
'Citation': 1
List[Tuple[(Player, str, str, Role)]]: 1
List[Robot]: 1
List[Position]: 1
Dict[(Role, Player)]: 1
DribbleState: 1
Union[(Queue, DictProxy)]: 1
List[EngineCommand]: 1
RobotState: 1
Iterable[Union[(RobotFilter, BallFilter)]]: 1
RefereeCommand: 1
TeamColor: 1
RawRefereeCommand: 1
SSL_Referee: 1
Optional[Dict[(Role, int)]]: 1
PlayExecutor: 1
Dict[(Player, AICommand)]: 1
WayPoint: 1
List[Point2D]: 1
Dict[(str, torch.FloatTensor)]: 1
'AioMethodContext': 1
'AioBase': 1
DirectType: 1
OffsetType: 1
OrderField(): 1
TradeField(): 1
HFPY: 1
Dict[(str, typeAny)]: 1
Callable[([Path, Optional[int]], bool)]: 1
ExtensionDb: 1
ExtensionRunner: 1
ExtensionManifest: 1
ManifestJson: 1
Type['ExtensionDb']: 1
ExtRunErrorName: 1
ErrorName: 1
Records: 1
FileQueries: 1
Callable[([Any], 'Identity')]: 1
'Identity': 1
'Callable[[Any], Reader]': 1
'Reader': 1
Callable[([Any], 'Cont')]: 1
Callable[([Any], 'Maybe')]: 1
Callable[([Any], 'IO')]: 1
Callable[([Any], 'List')]: 1
Callable[([Any], Tuple[(Any, Any)])]: 1
Callable[([Any], 'State')]: 1
Callable[([A], 'Either')]: 1
Callable[([Any], 'Observable')]: 1
Callable[([Tuple[(Any, Log)]], Tuple[(Any, Log)])]: 1
Callable[([Any], 'Writer')]: 1
'Writer': 1
Callable[([Any], Tuple[(Any, Log)])]: 1
Monoid: 1
'Debounce[T]': 1
List[asyncio.Task]: 1
'AsyncObserver': 1
'Skip[T]': 1
AsyncIterable[T]: 1
'FlatMap': 1
'FilterIndexed': 1
'CatchException': 1
'TakeLast': 1
'Take': 1
'Scan': 1
'SkipLast': 1
'AsyncObservable': 1
Callable[(['AsyncObservable[T]'], 'AsyncObservable[T2]')]: 1
'AsyncChainedObservable': 1
Callable[([T], AsyncObservable)]: 1
DaGroup: 1
AbsDriver: 1
'DaGroup': 1
AbsData: 1
da.Array: 1
Codec: 1
Optional[InitialValues]: 1
InitialValues: 1
ClientData: 1
AsyncHolder: 1
CymbolParser.IntExprContext: 1
CymbolParser.VarDeclContext: 1
CymbolParser.AddSubExprContext: 1
TerminalNode: 1
ErrorNode: 1
TestParser.ExpressionsContext: 1
TestParser.AssignContext: 1
TestParser.AddSubContext: 1
TestParser.IntContext: 1
TestParser.IdentifierContext: 1
TestParser.ParenContext: 1
TestParser.MultDivContext: 1
db_models.Followed: 1
models.Bangumi: 1
models.DataSourceItem: 1
Bangumi: 1
Union[(str, Path, TextIO)]: 1
List[TimeCode]: 1
List[VideoMetadata]: 1
'Union[Participant, ResponsibilityPerson]': 1
'EmailTemplate': 1
'SubitemMixin': 1
'Union[Activity, ActivityChoice]': 1
'Question': 1
x509.CertificateBuilder: 1
MethodMapping: 1
List[Optional[Any]]: 1
Invocation: 1
ClientTransport: 1
ServerTransport: 1
'Expiration': 1
List[Integer]: 1
List[Price]: 1
vm.XenonStackItem: 1
Callable[([int, int], List)]: 1
ScraperConfig: 1
MeshGrid: 1
Optional[BaseGeometry]: 1
DistanceMap: 1
'QuerySet': 1
BattleSide: 1
BattleOrganization: 1
MessageRecipient: 1
u.m: 1
u.arcsec: 1
(u.arcsec / u.pix): 1
u.angstrom: 1
u.s: 1
CloudRecoIncludeTargetData: 1
Distribution: 1
Iterable[Sequence[(str, str)]]: 1
Book: 1
TeleBot: 1
Dict[(str, Tuple[(List[str], Reader)])]: 1
AutoregressiveDecoder: 1
TemporalStatefulWithOutput: 1
SpatialStatefulWithOutput: 1
tf.TensorArray: 1
VideoSlider: 1
VideoService: 1
StreamSelectorCheckBox: 1
VideoList: 1
QRoundProgressBar: 1
BarStyle: 1
QPaintEvent: 1
Qt.WindowFlags: 1
RealDebridAction: 1
QProcess.ProcessError: 1
'list(char)': 1
'dict of str': 1
'str, proto:addr:port': 1
Optional[Seed]: 1
Optional[Sequence[Any]]: 1
Optional[tzinfo]: 1
Optional[Dict[(str, Union[(object, Callable)])]]: 1
Optional[Handler]: 1
Optional[Iterable[Handler]]: 1
BuildPlateModel: 1
Z_plus: 1
'StatusMonitor.StatusMonitor': 1
NotificationDispatcher: 1
DispatcherManager: 1
logging.INFO: 1
Day: 1
Union[(str, bytes, Path)]: 1
Iterable[Tuple[(str, dict, TrainingTrace)]]: 1
List[Tuple[(str, dict, TrainingTrace)]]: 1
Tuple[(str, dict, str)]: 1
Callable[([], Stream)]: 1
Optional[TimeProfile]: 1
cx.AbstractDataset: 1
Iterable[Iterable[Hashable]]: 1
BaseDataset: 1
yaml.Loader: 1
Callable[([], object)]: 1
TableModelColumn: 1
QAbstractItemView: 1
List[MasternodeConfig]: 1
QTableView: 1
UtxoType: 1
Mark: 1
WerkzeugConverter: 1
TxManager: 1
List[ERC20Token]: 1
List[Invocation]: 1
Ilk: 1
Urn: 1
Deployment: 1
discord.VoiceClient: 1
AsyncConsumer: 1
ServerSession: 1
List[Routing]: 1
Routing: 1
hug.types.one_of(['json', 'csv']): 1
Union[(Params, dict)]: 1
Dict[(str, any)]: 1
List['Tensor']: 1
Dict[(Any, float)]: 1
Callable[([], DeepQaModel)]: 1
List[List[Tuple[(tensorflow.Tensor, tensorflow.Tensor)]]]: 1
List[tensorflow.IndexedSlices]: 1
Union[(Params, str)]: 1
tensorflow.Variable: 1
tensorflow.summary.FileWriter: 1
MutableMapping[(str, Field)]: 1
List[Field]: 1
Sequence[Union[(str, int)]]: 1
Deque[Instance]: 1
Dict[(Tuple[(int, int)], str)]: 1
Dict[(str, DatasetReader)]: 1
Callable[([], Iterable[Instance])]: 1
Callable[([str], Instance)]: 1
Callable[([Instance], str)]: 1
List[List[List[JsonDict]]]: 1
DefaultDict[(int, List[Tuple[(int, int)]])]: 1
List[SpacyToken]: 1
Dict[(str, List[numpy.ndarray])]: 1
CharacterTokenizer: 1
WordSplitter: 1
WordFilter: 1
WordStemmer: 1
DomainLanguage: 1
KnowledgeGraph: 1
Dict[(str, TableColumn)]: 1
List[None]: 1
QuarelWorld: 1
Doc: 1
List[List[List[int]]]: 1
Archive: 1
Union[(torch.Tensor, List[List[List[int]]])]: 1
SupervisionType: 1
Tuple[(torch.Tensor, torch.Tensor)]: 1
Dict[(Tuple[(str, str)], List[str])]: 1
Dict[(str, Dict[(str, Tuple[(torch.Tensor, torch.Tensor, List[int])])])]: 1
Dict[(str, Tuple[(torch.Tensor, torch.Tensor, int)])]: 1
Sequence['GrammarBasedState']: 1
Dict[(str, ActionRepresentation)]: 1
List[ChecklistStatelet]: 1
Sequence['CoverageState']: 1
Union[(str, int, List[int])]: 1
Union[(int, list)]: 1
Dict[(str, Union[(Any, Dict[(str, Any)])])]: 1
torch.nn.parameter.Parameter: 1
StepFunctionType: 1
List[Set[int]]: 1
Sequence[Tuple[(str, Regularizer)]]: 1
Iterable[Tuple[(str, Params)]]: 1
Union[(int, torch.LongTensor)]: 1
Union[(float, Sequence[float])]: 1
Union[(Activation, List[Activation])]: 1
Union[(float, List[float])]: 1
Dict[(str, TokenEmbedder)]: 1
Dict[(str, Union[(List[str], Dict[(str, str)])])]: 1
Sequence[Sequence[Sequence[int]]]: 1
torch.nn.modules.RNNBase: 1
BertModel: 1
OpenaiTransformer: 1
flask.testing.FlaskClient: 1
Callable[([int, int], int)]: 1
SimpleState: 1
WordTokenizer: 1
DatasetMingler: 1
'GanCallbackTrainer': 1
Gan: 1
GanOptimizer: 1
Optional[FeedForward]: 1
Dict[(int, List[List[int]])]: 1
NlvrLanguage: 1
List[WikiTablesLanguage]: 1
List[List[ProductionRuleArray]]: 1
MatrixAttention: 1
List[BidirectionalAttentionFlow]: 1
Dict[(str, Subcommand)]: 1
Trainer: 1
TensorboardWriter: 1
MovingAverage: 1
LearningRateScheduler: 1
MomentumScheduler: 1
Iterable[Callback]: 1
TrainerBase: 1
torch.optim.lr_scheduler._LRScheduler: 1
Optional[TAGS_TO_SPANS_FUNCTION_TYPE]: 1
List[TypedStringSpan]: 1
IndentationErr: 1
MemoryContext: 1
TinyPyParser.ComparisonContext: 1
TinyPyParser.NotTestContext: 1
TinyPyParser.MulDivModContext: 1
TinyPyParser.AddSubContext: 1
TinyPyParser.ShiftsContext: 1
TinyPyParser.BitAndContext: 1
TinyPyParser.BitXorContext: 1
TinyPyParser.BitOrContext: 1
TinyPyParser.UnaryExprContext: 1
TinyPyParser.ParenExprContext: 1
TinyPyParser.AtomContext: 1
TinyPyParser.PlainNameContext: 1
TinyPyParser.FuncInvokeContext: 1
TinyPyParser.DottedNameContext: 1
TinyPyParser.SubNameContext: 1
TinyPyParser.SubscriptIndexContext: 1
TinyPyParser.SubscriptSliceContext: 1
TinyPyParser.DictorsetmakerContext: 1
TinyPyParser.DictMakerContext: 1
TinyPyParser.SetmakerContext: 1
TinyPyParser.DictormakerContext: 1
TinyPyParser.ListMakerContext: 1
TinyPyParser.TupleMakerContext: 1
TinyPyParser.Testlist_compContext: 1
TinyPyParser.NumberContext: 1
TinyPyParser.IntegerContext: 1
TinyPyParser.StringContext: 1
TinyPyParser.File_inputContext: 1
TinyPyParser.Single_inputContext: 1
TinyPyParser.Eval_inputContext: 1
TinyPyParser.Simple_stmtContext: 1
TinyPyParser.SuiteContext: 1
TinyPyParser.If_stmtContext: 1
TinyPyParser.While_stmtContext: 1
TinyPyParser.For_stmtContext: 1
TinyPyParser.FuncdefContext: 1
TinyPyParser.ExprStmtAssignContext: 1
TinyPyParser.ExprStmtAugmentedContext: 1
TinyPyParser.Return_stmtContext: 1
TinyPyParser.Pass_stmtContext: 1
TinyPyParser.Break_stmtContext: 1
TinyPyParser.Continue_stmtContext: 1
hug.directives.documentation: 1
EighthActivity: 1
EvaluationError: 1
Union[(int, Tuple[(int, int)])]: 1
'Feature': 1
'Scenario': 1
'Step': 1
'Background': 1
'Row': 1
'Examples': 1
'Comment': 1
VisitorObserver: 1
Union[(Seq[T1], int)]: 1
Opt[Iterable[T2]]: 1
Seq[T1]: 1
Seq[T2]: 1
Iterable[T2]: 1
Iterable[Tuple[(T1, T2)]]: 1
Attribute: 1
Union[(ClassVersion, Sequence)]: 1
ConstantClass: 1
CodeAttribute: 1
Constant: 1
aredis.StrictRedis: 1
Union[(str, ipaddress.IPv4Address, ipaddress.IPv6Address)]: 1
FragmentParser: 1
CSSStyleDeclaration: 1
Union[(type, Iterable)]: 1
Callable[([Event], Awaitable)]: 1
Dict[(str, Union[(Iterable[_T_MsgItem], _T_MsgItem)])]: 1
module.HTTPServer: 1
web.RequestHandler: 1
HTTPServer: 1
GenericTemplateElement: 1
List[QuickReply]: 1
(List[Button] or Button): 1
(GenericTemplateMessage or ListTemplate): 1
TypeSymbol: 1
...: 1
GRPCIterator: 1
TimeInterval: 1
Metric: 1
'StackdriverResult': 1
'PrometheusResult': 1
Union[(Iterable, Dict)]: 1
driver.DriverManager: 1
Iterable[Tuple[(str, bytes)]]: 1
Type[F]: 1
Union[(None, Path, str)]: 1
Callable[([Story], Optional[Flavor])]: 1
Callable[([Story], Optional[str])]: 1
Stamper: 1
db.Project: 1
sphinx.addnodes.desc_signature: 1
storage.blob.Blob: 1
storage.Bucket: 1
datastore.Key: 1
acts_scraper.Scraper: 1
acts_storage.ActsStorage: 1
typing.Sequence[acts_scraper.Breadcrumb]: 1
typing.Sequence[acts_scraper.ActItem]: 1
psutil.Process: 1
spider.ActsSpider: 1
acts_scraper.Breadcrumb: 1
astroid.ImportFrom: 1
my_module.MyClass: 1
QgsServerRequest.Method: 1
QgsServerRequest: 1
QgsBufferServerResponse: 1
Optional[Tuple]: 1
Callable[([str], Optional[str])]: 1
Callable[([Any, Iterable[int]], FileProvider)]: 1
AnkiJsonExporter: 1
Notifier: 1
Callable[([], dict)]: 1
Conference: 1
Movable: 1
'QGraphicsSceneDragDropEvent': 1
SyntaxState: 1
DerivationStep: 1
(SyntaxState or DerivationStep): 1
'kataja.saved.Node': 1
'kataja.saved.Forest': 1
'kataja.saved.movables.Node': 1
'kataja.saved.Edge': 1
NoteCollection: 1
splinter.BSpline: 1
List[Match]: 1
Optional[BaseFormatter]: 1
DictStrAny: 1
web.UrlDispatcher: 1
Union[(str, Settings)]: 1
UrlCollection: 1
Urls: 1
DictStrStr: 1
Optional[List[Union[(int, str)]]]: 1
List[Union[(int, str)]]: 1
'!logger': 1
'!log': 1
'!Pet': 1
'!Owner': 1
'!DB': 1
'!mul': 1
'!pow2': 1
TestGenerator: 1
TGenericDocumentation: 1
TEnumerationItem: 1
TExternalEnumeration: 1
[(str,)]: 1
(TConstructor or TMethod): 1
TMethod: 1
ClassGenerator: 1
TExternalNamespace: 1
TExternalClass: 1
(io.IOBase or [str]): 1
(TNamespace or TClass): 1
[object]: 1
TracebackType: 1
sample.Sample: 1
Generator[(Tuple[(str, Any)], str, None)]: 1
Union[(Resource, str, bytes)]: 1
Sequence[PostType]: 1
GameMode: 1
ConsoleIo: 1
TaleWsgiAppBase: 1
MemorySessionFactory: 1
base.Living: 1
pubsub.TopicNameType: 1
PlayerNaming: 1
Type[CircleMob]: 1
Dict[(str, Tuple[(Union[(str, Sample)], int)])]: 1
Union[(int, Iterable[int])]: 1
Palette: 1
Sequence[PushType]: 1
Union[(InstructionSet, str)]: 1
PushInterpreterConfig: 1
Union[(Instruction, JitInstructionRef)]: 1
Union[(sl.Selector, str)]: 1
Union[(vr.VariationStrategy, dict, str)]: 1
Union[(Selector, DiscreteProbDistrib, str)]: 1
Union[(VariationOperator, DiscreteProbDistrib, str)]: 1
Union[(VerbosityConfig, str)]: 1
Union[(bool, float, np.ndarray)]: 1
VariationOperator: 1
Sequence[VariationOperator]: 1
Union[(np.int64, np.float64)]: 1
Sequence[Atom]: 1
Sequence[Union[(Literal, Any)]]: 1
Sequence[Callable]: 1
DiscreteProbDistrib: 1
Optional[VerbosityConfig]: 1
Individual: 1
'Simulator': 1
List[Union[(Trigram, Tuple[(Trigram, ...)])]]: 1
Tuple[(Trigram, ...)]: 1
List[Tuple[(Trigram, L)]]: 1
'BaseMessage': 1
'MiddlewareManager': 1
C: 1
BaseContextStore: 1
BaseRegisterStore: 1
Callable[([TransDict], None)]: 1
TransDict: 1
Callable[([IntentDict], None)]: 1
ColRanges: 1
Union[(date, datetime, Text)]: 1
Union[(datetime, Text)]: 1
Optional[IntentsDb]: 1
IntentsDb: 1
True: 1
Register: 1
Intent: 1
Optional[TextT]: 1
Type[l.BaseLayer]: 1
List[Callable[([Request], 'BaseTrigger')]]: 1
l.BaseLayer: 1
'Platform': 1
MessageCallback: 1
Optional[MessageTag]: 1
List[BaseOption]: 1
List[BaseButton]: 1
Optional[AspectRatio]: 1
Optional[TransText]: 1
Optional[List[BaseButton]]: 1
Optional[BaseMedia]: 1
Optional[CardAction]: 1
Optional['GenericTemplate']: 1
SignatureDB: 1
Union[(List[Union[(BitVec, int)]], bytes)]: 1
List[TaintRecord]: 1
LaserEVM: 1
Optional[Memory]: 1
List[Union[(int, BitVec)]]: 1
Optional[List[Bool]]: 1
List[Bool]: 1
Iterable[Bool]: 1
'WorldState': 1
Union[(int, slice, BitVec)]: 1
Union[(int, BitVec, bool, Bool)]: 1
Union[(BitVec, int, List[Union[(int, BitVec)]])]: 1
List[StateAnnotation]: 1
Union[('MessageCallTransaction', 'ContractCreationTransaction')]: 1
WorldState: 1
z3.BitVecRef: 1
Union[(Bool, bool)]: 1
G: 1
snug.Request: 1
t.Optional[datetime]: 1
(tk.Tk or tk.Toplevel): 1
tk.Toplevel: 1
List[discord.Guild]: 1
discord.VoiceRegion: 1
dt.timedelta: 1
DecisionTreeClassifier: 1
RandomForestClassifier: 1
GridSearchType: 1
sklearn.ensemble.RandomForestClassifier: 1
DatasetBase: 1
BostonRaw: 1
MultiLangTranslator: 1
'iterable': 1
List[Question]: 1
QuestionDatabase: 1
Dict[(int, Answer)]: 1
TossUpQuestion: 1
Result[(str, str)]: 1
Steel: 1
ApplianceFactor: 1
Properties: 1
Fluid: 1
GLRenderer: 1
Gdk.GLContext: 1
List[Partial]: 1
config.I3configgerConfig: 1
go.layout.XAxis: 1
'Histogram2D': 1
Union[(LevelType, float, str, timedelta)]: 1
LevelType: 1
uproot.write.TFile.TFileUpdate: 1
Union[(Tree, Dict)]: 1
PropertyHolder: 1
ResultManager: 1
JoltTestObject: 1
GeoDataFrame: 1
RegovarException: 1
're.Pattern': 1
'Iterable[AnimeTitle]': 1
'ConfigParser': 1
SQLParams: 1
Iterable[EpisodeType]: 1
AnimeFiles: 1
Iterable[Rule]: 1
'Iterable[CacheTableSpec]': 1
'Iterable[Path]': 1
Union[(list, bool)]: 1
Union[(list, None)]: 1
List[GraphExecutor.Executable]: 1
Union[(List[np.ndarray], np.ndarray)]: 1
Iterator[List[str]]: 1
Iterator[Dict[(str, np.ndarray)]]: 1
List[GenericTrainer]: 1
'GenericTrainer': 1
Sequence[Objective]: 1
'DelayedUpdateTrainer': 1
'BeamSearchRunner': 1
CTCDecoder: 1
SupportedDecoders: 1
Dict[(str, OutputSeries)]: 1
Set[GenericModelPart]: 1
OutputSeries: 1
List[GenericModelPart]: 1
'EmbeddedFactorSequence': 1
'EmbeddedSequence': 1
MutableSet[Feedable]: 1
MutableSet[Parameterized]: 1
'ModelPart': 1
'Parameterized': 1
Dict[(str, Callable[([], Iterator[List[str]])])]: 1
ibapi.common.TickAttrib: 1
ibapi.contract.Contract: 1
Union[(datetime.time, datetime.datetime)]: 1
[str, dict]: 1
[str, bool]: 1
ApiConfig: 1
ProductId: 1
Iterable[model.AnomalyPoint]: 1
model.RegionDisruption: 1
traffic.TrafficRepository: 1
Iterable[traffic.ProductId]: 1
AnomalyPoint: 1
ProductDisruption: 1
RecordData: 1
List[ResourceRecord]: 1
ii.IpInfoService: 1
OoniClient: 1
NamedTemporaryFile: 1
Union[(str, Record)]: 1
func.EventHubEvent: 1
func.DocumentList: 1
func.TimerRequest: 1
func.QueueMessage: 1
func.EventGridEvent: 1
func.HttpRequest: 1
func.InputStream: 1
Union[(WorkerTransportABC, Iterable[WorkerTransportABC])]: 1
Union[(TransportABC, Iterable[TransportABC])]: 1
ParserABC: 1
RabbitMQTransport: 1
Optional[APIHybridError]: 1
typing.Type[Exception]: 1
Sequence[AccessPermissionTokenItem]: 1
Union[(Polygon, MultiPolygon)]: 1
typing.Type[models.Model]: 1
Union[(Polygon, MultiPolygon, GeometryCollection)]: 1
Union[(LineString, MultiLineString, GeometryCollection)]: 1
Union[(Polygon, MultiPolygon, Sequence[Polygon])]: 1
LinearRing: 1
MapHistory: 1
GeometryIndexed: 1
(str or bytes or model.ProvDocument): 1
(str or bytes or provmodel.ProvDocument): 1
AbstractDeviceAdapter: 1
'Permission': 1
type(BasePermissionRule): 1
Type[RequestHandler]: 1
list(): 1
Iterable[LineString]: 1
Iterable[Iterable[str]]: 1
Callable[([geojson.LineString], Dict)]: 1
Union[(DataFrame, list)]: 1
Callable[([GPXTrackPoint, GPXTrackPoint], bool)]: 1
Callable[([float, float, int], Node)]: 1
List[Tuple[(float, float, float, float)]]: 1
GPXTrackPoint: 1
'html': 1
APISettings: 1
Backup: 1
Union[(Component, str)]: 1
iterutil.IterPath: 1
Iter: 1
Callable[([Iter, IterPath], Iter)]: 1
IterPath: 1
Union[(str, Dict, List)]: 1
ErrorResponse: 1
Union[(List[JSONRPCResponse], JSONRPCResponse, None)]: 1
Union[(List, Dict, object)]: 1
Iterable[Response]: 1
Union[(Request, Iterable[Request])]: 1
Optional[Methods]: 1
m.Bits(8): 1
m.Bits(11): 1
m.Bits(14): 1
m.Bits(4): 1
samples_database.SamplesDatabase: 1
SamplesDatabase: 1
sampler_pb2.MaxTokenLength: 1
sampler_pb2.SymmetricalTokenDepth: 1
typing.List[sampler_pb2.SampleTerminationCriterion]: 1
internal_pb2.PreprocessorWorker: 1
internal_pb2.EncoderWorker: 1
corpuses.Corpus: 1
DataBatch: 1
cache.FSCache: 1
'Corpus': 1
typing.Optional[typing.Union[(str, pathlib.Path)]]: 1
typing.Callable[([pathlib.Path], int)]: 1
typing.Type: 1
typing.Callable[([str, str], None)]: 1
'Configure script path (or None if no configure\n                  step is needed)': 1
'Configure script path (or None if no configure\n      step is needed)': 1
'Show configure standard output': 1
'Show build standard output': 1
Iterable[Tuple[(Message, str)]]: 1
gerrit_rest.GerritREST: 1
List[FieldFile]: 1
Union[(Form, None)]: 1
Registration: 1
Visit: 1
discord.Color: 1
'Red': 1
'CubeSourceProvider': 1
'EsdcDataStore': 1
esdl.Cube: 1
CubeConfig: 1
Optional[List[ObjectiveWeight]]: 1
List[Tuple[(int, int, Optional[int])]]: 1
List[BaseAttention]: 1
SearchStepOutput: 1
decimal: 1
currency_value: 1
LogbookLevel: 1
Mapping[(str, LogbookLevel)]: 1
Awaitable[Any]: 1
Optional[Callable[([Awaitable[Any]], Any)]]: 1
'PathClient': 1
EventCallback: 1
DropReason: 1
AddressType: 1
Optional[Dict[(str, Union[(str, bool, int)])]]: 1
Optional[List[Log]]: 1
Param('Use imagewoof (otherwise imagenette)', int): 1
Param('Mixup', float): 1
Param('Optimizer (adam,rms,sgd)', str): 1
Param('Architecture (xresnet34, xresnet50, presnet34, presnet50)', str): 1
Param("Print model; don't train", int): 1
Param('Name of the experiment', str, opt=False): 1
Param('GPU to run on', int): 1
Param('Dropouts multiplicator', float): 1
Param('Weight Decay', float): 1
Param('Bptt', int): 1
Param('Backward model', bool): 1
Param("Optimizer: 'adam','genopt','rms','sgd'", str): 1
Param('Decay AvgStatistic (momentum)', bool): 1
Param('The GPUs to use for distributed training', str): 1
Param('Script to run', str, opt=False): 1
Param('Args to pass to script', nargs='...', opt=False): 1
LambdaFunc: 1
NormType: 1
LayerFunc: 1
Collection[Callable]: 1
Optional[DataLoader]: 1
Union[(Floats, slice)]: 1
Optional[CallbackList]: 1
ImageSegment: 1
Optional[Union[(int, Callable)]]: 1
GANModule: 1
Sizes: 1
Sequence[nn.Module]: 1
Union[(nn.Module, Learner)]: 1
Tuple[(Tensor, Tensor, Tensor)]: 1
Collection[TrainingPhase]: 1
TensorOrNumber: 1
ModuleList: 1
Param(opt=False, nargs='?', type=bool): 1
ClassificationInterpretation: 1
Union[(date, datetime)]: 1
ItemBase: 1
OptTabTfms: 1
BaseTokenizer: 1
Tuple[(Tensor, Tensor)]: 1
datacube.Datacube: 1
Tuple[(BeautifulSoup, BeautifulSoup)]: 1
AutoImportResource: 1
CardClass: 1
'.game.Game': 1
BinaryOp: 1
SelectorEntityValue: 1
Callable[([BaseEntity, BaseEntity], bool)]: 1
Callable[([List[BaseEntity], BaseEntity], List[BaseEntity])]: 1
Optional[SelectorLike]: 1
List[Union[(Dict, str)]]: 1
HuffmanReader: 1
HuffmanWriter: 1
('URI to radio station (direct link, not playlist)', 'option', 's'): 1
('Start as console application', 'flag', 'c'): 1
models.CurrentWorker: 1
List[models.BaseTask]: 1
zmq.Context: 1
models.Application: 1
models.Rule: 1
models.Scenario: 1
models.CallListPhone: 1
Iterable[models.CallListPhone]: 1
TranslatorSettings: 1
BaseAuthService: 1
serializers.Serializer: 1
List[ObjDataType]: 1
'RelationshipObject': 1
Sequence[RelType]: 1
Callable[([RelType], str)]: 1
'ResourceIdObject': 1
ResourceIdObject: 1
Type[serializers.Serializer]: 1
ReturnList: 1
Optional[Transform]: 1
Optional[Artist]: 1
Optional[List['Track']]: 1
typing.Optional[sdk_auth.KerberosEnvironment]: 1
Optional[Union[(PackageVersion, str)]]: 1
List[ResultThread]: 1
(lambda res: bool): 1
Type['bot.Bot']: 1
CardInfo: 1
CardList: 1
FormatType: 1
Callable[([], _P)]: 1
Dict[(str, FieldDescriptor)]: 1
'venom.converter.Converter[_VT, _PT]': 1
_PT: 1
Sequence['venom.converter.Converter']: 1
Union[(str, Type[S])]: 1
Type['venom.rpc.comms.HTTPClient']: 1
Union[(str, Type[Service])]: 1
Union[(type, Callable[([Type[Any]], type)])]: 1
'venom.Venom': 1
Iterable[FieldDescriptor]: 1
Reflect: 1
Venom: 1
'AbstractClient[S]': 1
Method[(S, Req, Res)]: 1
Union[(_PT, None)]: 1
Tuple[_ValidationFunction]: 1
Type[_T]: 1
'Type[venom.protocol.Protocol]': 1
JSONValue: 1
Union[(StringValue, IntegerValue, NumberValue, BoolValue, BytesValue)]: 1
Union[(Set[str], FieldMask)]: 1
SnakeMessage: 1
Tuple[Tensor]: 1
ModelGeneralizedLinear: 1
Optional[Runtime]: 1
DeviceType: 1
LongUnits: 1
LongClientExtensions: 1
ShortUnits: 1
ShortClientExtensions: 1
DecimalNumber: 1
SinceTransactionID: 1
ServiceListID: 1
EventSid: 1
StatusID: 1
PageSize: 1
FromTransactionID: 1
ToTransactionID: 1
Ids: 1
TradeStateFilter: 1
TradeID: 1
ClientExtensions: 1
TakeProfitDetails: 1
StopLossDetails: 1
TrailingStopLossDetails: 1
PriceComponent: 1
CandlestickGranularity: 1
Smooth: 1
IncludeFirstQuery: 1
DailyAlignment: 1
AlignmentTimezone: 1
WeeklyAlignment: 1
ServiceList: 1
Type['Edit']: 1
Iterable[Vind]: 1
SourceCode: 1
TokenConverter: 1
SFID: 1
MEID: 1
FixEvent: 1
Optional[sqlite3.Connection]: 1
Union[(str, os.PathLike)]: 1
Set[SourceFileInRepository]: 1
redis.StrictRedis: 1
ServerProxy: 1
Sequence[Sentence]: 1
List[Configuration]: 1
Iterable[Configuration]: 1
optparse.Values: 1
List[EmailMultiAlternatives]: 1
ConfirmationKeyException: 1
ContentType: 1
Customer: 1
List[Selectable]: 1
Callable[([JobData], int)]: 1
Iterable[JobData]: 1
Dict[(str, Tuple[bytes])]: 1
Dict[(str, Tuple[UserProfile])]: 1
Dict[(str, Tuple[Stream])]: 1
Dict[(str, Tuple[Client])]: 1
Dict[(str, Tuple[Huddle])]: 1
Huddle: 1
Dict[(str, Tuple[Recipient])]: 1
Union[(int, IO[Any])]: 1
Callable[([Sequence[T]], None)]: 1
Optional[Set[int]]: 1
Callable[([List[Any]], None)]: 1
Set[Tuple[(str, str, str, bool)]]: 1
Callable[(..., ResultT)]: 1
sqlalchemy.engine.base.Connection: 1
Union[(None, Dict[(str, Any)])]: 1
List[ResultWithFamily]: 1
markdown.util.etree.Element: 1
SimpleCookie: 1
django.urls.resolvers.RegexURLPattern: 1
ScheduledMessage: 1
Dict[(str, Realm)]: 1
Callable[([UserProfile], None)]: 1
OAuth2Base: 1
HTTPBase: 1
BaseRoute: 1
Union[(str, UUID)]: 1
[Path]: 1
Union[(str, paramiko.RSAKey)]: 1
paramiko.PKey: 1
SFTPAttributes: 1
(str, int): 1
paramiko.RSAKey: 1
observers.AccrocchioObserver: 1
AccrocchioObserver: 1
tldap.Q: 1
LdapBase: 1
Callable[([ldap3.Connection], Entity)]: 1
FirmwareUpdateForcedError: 1
coap.Packet: 1
typing.Iterable['TLV']: 1
'Packet': 1
Packet: 1
ContentFormat: 1
ProblemType: 1
'statements.AppendMixIn': 1
Optional['statements.AppendMixIn']: 1
Union[(str, Tuple[(str, bool)])]: 1
'BlockStorage': 1
BlockStorage: 1
List[Union[(str, str, dict)]]: 1
List[Union[(str, BaseSection)]]: 1
ShExDocParser.ShExDocContext: 1
ShExDocParser.StatementContext: 1
ShExDocParser.NotStartActionContext: 1
ShExDocParser.DirectiveContext: 1
ShExDocParser.ValueClassDefinitionContext: 1
ShExDocParser.ValueClassExprContext: 1
ShExDocParser.ValueClassLabelContext: 1
ShExDocParser.BaseDeclContext: 1
ShExDocParser.PrefixDeclContext: 1
ShExDocParser.StartContext: 1
ShExDocParser.ShapeContext: 1
ShExDocParser.ShapeDefinitionContext: 1
ShExDocParser.IncludeSetContext: 1
ShExDocParser.InclPropertySetContext: 1
ShExDocParser.SomeOfShapeContext: 1
ShExDocParser.MultiElementSomeOfContext: 1
ShExDocParser.InnerShapeContext: 1
ShExDocParser.GroupShapeContext: 1
ShExDocParser.SingleElementGroupContext: 1
ShExDocParser.MultiElementGroupContext: 1
ShExDocParser.UnaryShapeContext: 1
ShExDocParser.EncapsulatedShapeContext: 1
ShExDocParser.IncludeContext: 1
ShExDocParser.ShapeLabelContext: 1
ShExDocParser.TripleConstraintContext: 1
ShExDocParser.SenseFlagsContext: 1
ShExDocParser.PredicateContext: 1
ShExDocParser.ValueClassOrRefContext: 1
ShExDocParser.ValueClassLiteralContext: 1
ShExDocParser.ValueClassNonLiteralContext: 1
ShExDocParser.ValueClassDatatypeContext: 1
ShExDocParser.ValueClassGroupContext: 1
ShExDocParser.ValueClassValueSetContext: 1
ShExDocParser.ValueClassAnyContext: 1
ShExDocParser.GroupShapeConstrContext: 1
ShExDocParser.ShapeOrRefContext: 1
ShExDocParser.XsFacetContext: 1
ShExDocParser.StringFacetContext: 1
ShExDocParser.StringLengthContext: 1
ShExDocParser.NumericFacetContext: 1
ShExDocParser.NumericRangeContext: 1
ShExDocParser.NumericLengthContext: 1
ShExDocParser.DatatypeContext: 1
ShExDocParser.AnnotationContext: 1
ShExDocParser.CardinalityContext: 1
ShExDocParser.RepeatRangeContext: 1
ShExDocParser.Min_rangeContext: 1
ShExDocParser.Max_rangeContext: 1
ShExDocParser.ValueSetContext: 1
ShExDocParser.ValueContext: 1
ShExDocParser.IriRangeContext: 1
ShExDocParser.ExclusionContext: 1
ShExDocParser.LiteralContext: 1
ShExDocParser.NumericLiteralContext: 1
ShExDocParser.RdfLiteralContext: 1
ShExDocParser.BooleanLiteralContext: 1
ShExDocParser.StringContext: 1
ShExDocParser.IriContext: 1
ShExDocParser.PrefixedNameContext: 1
ShExDocParser.BlankNodeContext: 1
ShExDocParser.CodeDeclContext: 1
ShExDocParser.ProductionNameContext: 1
ShExDocParser.StartActionsContext: 1
ShExDocParser.SemanticActionsContext: 1
ShExDocParser.RdfTypeContext: 1
PrefixMap: 1
Triple: 1
TripleConstraint: 1
TripleConstraintValueClass: 1
ValueClassLabel: 1
XSFacet: 1
ValueSet: 1
IRIRange: 1
IRIStem: 1
RDFLiteral: 1
CommonTokenStream: 1
ModuleVersion: 1
Optional[SNOMEDGraph]: 1
csv.DictReader: 1
Concepts: 1
Union[(Dict, int)]: 1
AppType: 1
'list[Extractor]': 1
'a node identifier': 1
_cpp.Lead: 1
_cpp.Leads: 1
udunits2Parser.Unit_specContext: 1
udunits2Parser.Shift_specContext: 1
udunits2Parser.ProductContext: 1
udunits2Parser.PowerContext: 1
udunits2Parser.Basic_specContext: 1
udunits2Parser.IntegerContext: 1
udunits2Parser.NumberContext: 1
udunits2Parser.TimestampContext: 1
udunits2Parser.Signed_clockContext: 1
udunits2Parser.Timezone_offsetContext: 1
Fore: 1
Union[(Request, PreparedRequest, _RequestObjectProxy)]: 1
List[Result]: 1
Union[(str, List[str], Dict[(str, Any)], None)]: 1
Evidence: 1
Union[(str, version.Version)]: 1
Union[(BeautifulSoup, None)]: 1
WowsAsync: 1
Region: 1
Union[(User, Member)]: 1
_SourceType: 1
Union[(str, list, None)]: 1
Optional[type]: 1
(str, dict): 1
UserSignupForm: 1
SingleConditionSpec: 1
Iterable[Iterable[np.ndarray]]: 1
UserDataArchiveBuilder: 1
'sampled signal': 1
'intervals per sample': 1
'odd integer': 1
'even integer': 1
'signal of odd length': 1
'fundamental frequency': 1
'sampling frequency': 1
CommandFailed: 1
github.Github: 1
git.Commit: 1
wrap.Wrap: 1
WrapWebError: 1
Sequence[Union[(AnsiDecorator, str)]]: 1
Optional[AnsiDecorator]: 1
Optional[List[AstVisitor]]: 1
mparser.EmptyNode: 1
'ExternalProgram': 1
LibType: 1
JenkinsesClients: 1
TriggearHeart: 1
GithubEvent: 1
PayloadType: 1
motor.motor_asyncio.AsyncIOMotorClient: 1
JenkinsInstanceConfig: 1
HookDetails: 1
motor.motor_asyncio.AsyncIOMotorCursor: 1
Union[(str, float, Version)]: 1
ExecutorType: 1
OutputExecutorType: 1
SlackerAdapter: 1
Union[(MutableMapping, str, bytes)]: 1
Type[QueryDict]: 1
Union[(HttpRequest, AccessBase)]: 1
ValidateFunc: 1
CertRetrieveFunc: 1
ResponseStatus: 1
OCSPRequest: 1
CodingRuleAction: 1
CodingSchemaField: 1
CodingRule: 1
List[Dict[(Any, Any)]]: 1
Union[(str, bytes, 'Digest')]: 1
'dateparser.languages.Locale': 1
Mapping[(str, Tuple[str])]: 1
APIError: 1
Type[UploadScript]: 1
models.UploadedFile: 1
'amcat.models.User': 1
Union[(str, int, Role)]: 1
Iterable['ArticleSet']: 1
List[List[Point2D]]: 1
List[SimplePoint2D]: 1
CvcMuscimaDataset: 1
DatasetDownloader: 1
ITEM: 1
'AsyncPipeline': 1
Type[AsyncFilter[ITEM]]: 1
aiohttp.web.Application: 1
Union[(int, float, List)]: 1
Optional['base_server.BaseServer']: 1
Packages: 1
Union[(EventPriority, int)]: 1
EventPriority: 1
ClassifierMixin: 1
Sequence[Dict[(int, str)]]: 1
AuthorInfo: 1
ScheduleStatus: 1
List[Schedule]: 1
'SDLInterface': 1
SDLData: 1
PythonMethod: 1
JavaMethod: 1
Iterator[Record]: 1
Side: 1
lua_nodes.String: 1
lua_nodes.Number: 1
Union[(lua_nodes.TrueExpr, lua_nodes.FalseExpr)]: 1
lua_nodes.Field: 1
_T_Outdated: 1
sqlalchemy.base.Engine: 1
O: 1
Optional[Type[O]]: 1
ErrorCodes: 1
Union[(Pkg, PkgFolder, PkgOptions)]: 1
AJob: 1
m3u8.model.Playlist: 1
'CustomTypeCodec': 1
Union[(Callable[([Any, Any], None)], Callable[([Any], Any)], None)]: 1
Union[(MsgpackTypeCodec, str)]: 1
Union[(JSONTypeCodec, str)]: 1
cbor2.CBORTag: 1
Union[(CBORTypeCodec, str)]: 1
ExceptionReporter: 1
CallDetails: 1
EventDetails: 1
Type[BaseException]: 1
'WAMPRegistry': 1
CloseDetails: 1
Union[(Executor, str, Callable[(..., T_Retval)])]: 1
Union[(Component, Dict[(str, Any)])]: 1
Type[T_Event]: 1
Callable[([T_Event], Any)]: 1
Sequence[Signal]: 1
Connectable: 1
Union[(Executor, str)]: 1
Union[(str, URL, Dict[(str, Any)])]: 1
Union[(Callable[([Engine, sessionmaker], Any)], str)]: 1
Union[(str, Pool)]: 1
Dict[(str, Union[(str, datetime, Number)])]: 1
BaseHTTPClientConnection: 1
Union[(str, Serializer)]: 1
WebSession: 1
'BaseRPCRouter': 1
Union[(Serializer, str, None)]: 1
Union[(Router, str)]: 1
Union[(ReadTransport, WriteTransport)]: 1
Union[(SSLContext, str)]: 1
Union[(Serializer, str)]: 1
T.Union[(str, Observable)]: 1
BasicMeterData: 1
events.JobSubmissionEvent: 1
Mapping[(str, Dict)]: 1
owncloud: 1
schema.Schema: 1
Task[T]: 1
MainFunc: 1
ArgsList: 1
Optional[Gitlab]: 1
ProjectMergeRequest: 1
Optional[GitHub]: 1
tsrc.Workspace: 1
List[Tuple[(str, tsrc.git.Status)]]: 1
Gitlab: 1
List[CopyConfig]: 1
List[RemoteConfig]: 1
(list or tuple): 1
'SkDataSet': 1
SkDataSet: 1
RTContext: 1
[RPCCall]: 1
TrieNode: 1
ZakSpace: 1
List[Udo]: 1
CableType: 1
CableColor: 1
RelayParser.OpIdentContext: 1
RelayParser.ProgContext: 1
RelayParser.ExprListContext: 1
RelayParser.CallNoAttrContext: 1
RelayParser.CallWithAttrContext: 1
RelayParser.FuncExprContext: 1
RelayParser.MetaExprContext: 1
RelayParser.TensorContext: 1
RelayParser.GraphContext: 1
RelayParser.IdentExprContext: 1
RelayParser.StringExprContext: 1
RelayParser.CallContext: 1
RelayParser.NegContext: 1
RelayParser.TupleContext: 1
RelayParser.ParenContext: 1
RelayParser.ScalarExprContext: 1
RelayParser.LetContext: 1
RelayParser.ProjectionContext: 1
RelayParser.IfElseContext: 1
RelayParser.BinOpContext: 1
RelayParser.FuncContext: 1
RelayParser.DefnContext: 1
RelayParser.ArgNoAttrContext: 1
RelayParser.ArgWithAttrContext: 1
RelayParser.VarListContext: 1
RelayParser.VarContext: 1
RelayParser.AttrSeqContext: 1
RelayParser.AttrContext: 1
RelayParser.TypeParamListContext: 1
RelayParser.TupleTypeContext: 1
RelayParser.TypeIdentTypeContext: 1
RelayParser.TensorTypeContext: 1
RelayParser.FuncTypeContext: 1
RelayParser.IncompleteTypeContext: 1
RelayParser.IntTypeContext: 1
RelayParser.ShapeListContext: 1
RelayParser.MetaContext: 1
RelayParser.MetaShapeContext: 1
RelayParser.ParensShapeContext: 1
RelayParser.IntShapeContext: 1
RelayParser.TypeIdentContext: 1
RelayParser.BodyContext: 1
RelayParser.ScalarFloatContext: 1
RelayParser.ScalarIntContext: 1
RelayParser.ScalarBoolContext: 1
RelayParser.IdentContext: 1
Union[(Web3, Contract)]: 1
Optional[List[SigningKey]]: 1
Optional[SigningKey]: 1
Type[SIGType]: 1
Type[CSVType]: 1
Type[CLTVType]: 1
Type[XHXType]: 1
Type[OperatorType]: 1
Type[ConditionType]: 1
Union[(str, BlockUID, None)]: 1
List[Endpoint]: 1
Type[PeerType]: 1
Type[DocumentType]: 1
endpoint.ConnectionHandler: 1
Union[(str, endpoint.Endpoint)]: 1
SortOrder: 1
FilterOperation: 1
typing.List[FieldSort]: 1
typing.Optional[requests.auth.AuthBase]: 1
'openhab.client.OpenHAB': 1
typing.Union[(str, typing.Type[openhab.types.CommandType])]: 1
[Node]: 1
typing.Optional[typing.Callable[(..., typing.Any)]]: 1
HeadersLike: 1
Optional[Union[(Credentials, Iterable[Credentials])]]: 1
Optional[Callable[([str, str], Awaitable[bool])]]: 1
Type[BasicAuthWebSocketServerProtocol]: 1
Callable[([List[MacroStep]], Any)]: 1
Optional[Transition]: 1
Callable[([Event], Any)]: 1
List[MicroStep]: 1
ColorName: 1
PathLocation: 1
nbxmpp.Message: 1
nbxmpp.Presence: 1
nbxmpp.Node: 1
Validation: 1
'areamanager.AreaManager': 1
Union[(type, List[type])]: 1
'lightmanager.LightManager': 1
Tuple[(entity.Entity, int)]: 1
layer.Layer: 1
Optional[tileset.Tileset]: 1
'entitymanager.EntityManager': 1
filetype.FontFile: 1
SDL_Renderer: 1
spritesheet.Spritesheet: 1
List[Union[(int, type(...))]]: 1
'Action': 1
Optional[ActionContext]: 1
Callable[([ActionContext], bool)]: 1
Optional[Action]: 1
Union[(tf.Tensor, tf.Operation)]: 1
'MetricTree': 1
'ComparisonSet': 1
'RankedMetric': 1
'labeling': 1
'linearization file': 1
Union[(BinaryIO, BytesIO)]: 1
Union[(BinaryIO, str)]: 1
Union[(BinaryIO, io.BytesIO)]: 1
QgsMapCanvas: 1
List[QgsMapLayer]: 1
QDockWidget: 1
QDomElement: 1
_timedelta_cls: 1
_Callable[([_S], bool)]: 1
_Iterable[_Callable[([_S], _T)]]: 1
_Iterable[_Case[(_S, _T)]]: 1
_Iterable[_S]: 1
_Type[_U]: 1
BaseSPARenderer.__class__: 1
BaseSPARenderer: 1
'SPAPluginMixin': 1
SPAPluginMixin: 1
List[Spectrum]: 1
'Protobuf': 1
'A': 1
models.QuerySet: 1
List[SMTPRecipientRefused]: 1
Optional[Rule]: 1
Union[(str, Any)]: 1
_Map: 1
_BaseTable: 1
'Redis': 1
SeedZone: 1
SpatialCoordinateVariables: 1
STSimConsole: 1
Union[(List[Phoneme], str)]: 1
'Leaf': 1
Tuple[(float, float, float, float)]: 1
QAbstractButton: 1
Situation: 1
T2: 1
Dict[(T1, int)]: 1
Dict[(T1, Any)]: 1
Callable[([SrcData], KeyData)]: 1
Iterable[SrcData]: 1
Union[('SExpr', str)]: 1
SExpr: 1
Callable[([SExpr], bool)]: 1
Callable[([SExpr], List[SExpr])]: 1
Callable[([T, T], bool)]: 1
List[Union[(K, List[K])]]: 1
Tuple[(Tuple[(K, V)], Any)]: 1
FrozenSet[K]: 1
Optional[V]: 1
Set[K]: 1
Union[(str, SExpr)]: 1
Optional[TupleLinkedList]: 1
Union[(Trace, CompleteTrace)]: 1
Iterable[RoleId]: 1
Optional[Dict[(str, Sort)]]: 1
Union[(SMTExpr, str, int, float, bool)]: 1
List[SMTLine]: 1
Union[(bool, int, float, timedelta)]: 1
Union[(bool, int, float)]: 1
FrozenSet[Sort]: 1
Dict[(str, Sort)]: 1
Iterable[SubsortConstraint]: 1
Iterable[Sort]: 1
Optional[List[Statement]]: 1
LocalVarId: 1
'ActorEventRule': 1
Callable[(['Term'], Iterable[T])]: 1
Callable[(['Term'], bool)]: 1
List[Term]: 1
Tuple[(Tuple[(str, Sort)], ...)]: 1
Tuple[(Sort, ...)]: 1
ContractParamId: 1
StateVarId: 1
RuleParamId: 1
ActionParamId: 1
LocalVarDec: 1
ContractParamDec: 1
CommonConfig: 1
Dict[(Str, Variant)]: 1
SourceType: 1
List[Tuple[(Structure, Structure)]]: 1
ObjPath: 1
IscsiInterfacesMode: 1
List[Byte]: 1
LearningUnitYear: 1
LearningUnit: 1
Sickle: 1
typ.URL: 1
DataWarehouseConfig: 1
partial: 1
List[DataWarehouseSchema]: 1
[bool]: 1
Optional[StatsTestOptions]: 1
Optional[MatrixTestOptions]: 1
Optional[TokenizerTestOption]: 1
SimilarityTestOption: 1
Optional[BCTTestOptions]: 1
Optional[DendroTestOptions]: 1
Optional[Union[(Quantity, ndarray)]]: 1
Union[(List[List[Any]], ndarray)]: 1
Union[(ndarray, List[List[Any]])]: 1
Union[(range, int, ndarray)]: 1
ET.ElementTree: 1
Callable[([ET.Element], bool)]: 1
ResizeMode: 1
FlipOrientation: 1
Optional[Union[(str, 'MimeType')]]: 1
trio.abc.ReceiveStream: 1
trio.abc.SendChannel: 1
LogItem: 1
TxnData: 1
CommEventType: 1
GlobalCommEventType: 1
CommandType: 1
Optional[Pattern]: 1
Optional[List[MRoleType]]: 1
Optional[List[bantypes]]: 1
'MServer': 1
MRoleType: 1
'MoMMI': 1
IrcTransformType: 1
DiscordTransformType: 1
Dict[(TKey, TValue)]: 1
Type[MCodeHandler]: 1
'requests.Response': 1
'SavedEndpoint': 1
BatteryState: 1
ModuleMode: 1
ModuleConfig: 1
'html code with some <form>': 1
GeoLocation: 1
Dict[(str, np.array)]: 1
Tuple[(List, int)]: 1
Sequence[Dict[(Any, Any)]]: 1
pyglet.graphics.Batch: 1
AbstractQueryWidget: 1
BaseWidget: 1
OneOf[(str, int)]: 1
OneOf[(int, str)]: 1
ScheduledJob: 1
'Phial': 1
Optional[Dict[(str, Union[(str, int, float, bool)])]]: 1
Callable[(..., PhialResponse)]: 1
Hashgraph: 1
List[Transaction]: 1
Parents: 1
typing.StartableTarget: 1
Callable[([Exception], bool)]: 1
ScheduledItem: 1
List[Tuple[(RelativeTime, Notification)]]: 1
List[Recorded]: 1
AbsoluteTime: 1
'ScheduledPeriodicAction': 1
Union[(typing.RelativeTime, Observable)]: 1
Optional[Callable[([], Future)]]: 1
Optional[Subject]: 1
Optional[Callable[([Optional[Scheduler]], Subject)]]: 1
Optional[Callable[([ConnectableObservable], Observable)]]: 1
Callable[([GroupedObservable], Observable)]: 1
Optional[PredicateIndexed]: 1
SubComparer: 1
Optional[Callable[([Any], Observable)]]: 1
Observer: 1
Callable[([Exception, Observable], Observable)]: 1
Union[(Observable, Callable[([Exception, Observable], Observable)])]: 1
typing.Predicate: 1
typing.PredicateIndexed: 1
typing.TState: 1
Callable[([], Future)]: 1
Callable[([Any], RelativeTime)]: 1
Union[(None, Observable, Future)]: 1
Callable[([], typing.Disposable)]: 1
Callable[([typing.Disposable], Observable)]: 1
Callable[([Scheduler], Union[(Observable, Future)])]: 1
Optional[typing.Subscription]: 1
Optional[Union[(typing.Observer, typing.OnNext)]]: 1
StartableTarget: 1
Optional[typing.Action]: 1
[float, int]: 1
Union[(int, float, str, bytes, _FileSizeType)]: 1
Optional[Dict[(str, int)]]: 1
typing.List[MenuSection]: 1
typing.Tuple[(int, int)]: 1
typing.Union[(str, abjad.String, typing.List[str], typing.List[abjad.String])]: 1
typing.List[MenuEntry]: 1
typing.Union[(bool, typing.Tuple[(str, ...)])]: 1
typing.Union[(str, list, Path)]: 1
Union[(HashBytes, str)]: 1
Union[(Cake, ContentAddress)]: 1
UnshortenModule: 1
List[UnshortenModule]: 1
TSet: 1
Num: 1
NumOrStr: 1
Dict[(Tf, Uf)]: 1
Iterator[Tf]: 1
Union[(List[Tf], Set[Tf], Dict[(Tf, Uf)], Iterator[Tf])]: 1
Callable[([Tf], float)]: 1
List[Num]: 1
Tf: 1
Union[(List[Tf], str)]: 1
List[Uf]: 1
Union[(str, Pattern)]: 1
Callable[([], V)]: 1
Tcopy: 1
Tuple[(str, str, str, str, str, str)]: 1
Raw: 1
SCIONPayloadBaseProto: 1
AnyNum: 1
ExpressionAccess: 1
Kind: 1
Set[Edge]: 1
List[LyraType]: 1
Dict[(LyraType, Dict[(str, Any)])]: 1
List[Type[State]]: 1
'UsageStore': 1
'RangeState': 1
'WordSetState': 1
'AlphabetState': 1
'QuantityState': 1
'KeyWrapper': 1
'IntervalKWrapper': 1
Type[PyAbstract1]: 1
PyVar: 1
PyLinexpr1: 1
PyTexpr1: 1
BackwardSemantics: 1
ForwardSemantics: 1
HlsStream: 1
ProtocolGenerator[S]: 1
typing.Union[(Buffer, None)]: 1
typing.Callable[(..., ProtocolGenerator[R])]: 1
DSLImplementationSubclass: 1
Type[ContextDelegate]: 1
'Expression': 1
ContextDelegate: 1
DSLContract: 1
DSLMeta: 1
CFUNCTYPE: 1
ErrorCode: 1
Sandbox: 1
Dict[(ProgrammingLanguage, Runner)]: 1
List[Tuple[(str, bytes)]]: 1
Optional[List[Gene]]: 1
Optional[List[Allele]]: 1
Optional[List[Variant]]: 1
Genovar: 1
Optional[List[Condition]]: 1
TacticNotationsParser.MetaContext: 1
TacticNotationsParser.TopContext: 1
TacticNotationsParser.BlocksContext: 1
TacticNotationsParser.BlockContext: 1
TacticNotationsParser.NopipeblockContext: 1
TacticNotationsParser.AltblocksContext: 1
Type['Team']: 1
Union[(Hashable, str, int)]: 1
MasterKeyStore: 1
RemoteSet: 1
StashTeam: 1
GitHubKeyStore: 1
ScriptSig: 1
TxIn: 1
Kutil: 1
Tuple[(Provider, dict, int, str)]: 1
CardBundle: 1
Optional[Callable[([list], Optional[list])]]: 1
CardTransfer: 1
Union[TxOut]: 1
(tuple or Damage): 1
{str: ('Item', int)}: 1
Damage: 1
BeneficialBuff: 1
{(int, str)}: 1
[State]: 1
Publisher: 1
TwitchDownloadManager: 1
Callable[(..., Dict)]: 1
Union[(Type[Exception], Tuple[Type[Exception]])]: 1
pyqtgraph.parametertree.Parameter: 1
Pyboard: 1
Union[(Function, BinaryExpression)]: 1
ComplexFilter: 1
TableJoin: 1
QueryArguments: 1
DBService: 1
List[Union[('ComplexFilter', ColumnFilter)]]: 1
OrderedSet: 1
Union[(Sequence[str], KeysView[str])]: 1
Union[(dt.date, dt.datetime)]: 1
Importer: 1
Optional[date]: 1
MockLoader: 1
Optional[JSON]: 1
Optional[Dict[(str, JSON)]]: 1
Meeting: 1
Optional[List[Body]]: 1
Optional[AddressPipeline]: 1
AttrDict: 1
UserAlert: 1
MainappSearch: 1
List[Meeting]: 1
List[Paper]: 1
Optional[Body]: 1
Paper: 1
selenium.webdriver.Remote: 1
Callable[([int, int, int], str)]: 1
List[object]: 1
List[ETKModule]: 1
List[jsonpath.Child]: 1
Extractable: 1
InputType: 1
KGSchema: 1
Dict[(str, Union[(URI, BNode)])]: 1
Union[(rdflib.URIRef, str, URI)]: 1
rdflib.URIRef: 1
DateResolution: 1
InferlinkRuleSet: 1
MatchMode: 1
click.core.Option: 1
typing.Union[('bugzilla.bug.Bug', None)]: 1
'models.Bug': 1
'mako.runtime.Context': 1
transactional_session_maker: 1
'BodhiMessage': 1
GcpTarget: 1
Backend: 1
pyvex.IRStmt.Put: 1
CredentialsProvider: 1
onlinejudge.type.Problem: 1
onlinejudge.type.TestCase: 1
Candidate: 1
SortedDict: 1
Optional[Type[Version]]: 1
FrozenSet[Type[Version]]: 1
ComplexIndexEntry: 1
Optional[Version]: 1
Set[Version]: 1
Callable[([io.BufferedIOBase], Callable[([int], bytes)])]: 1
config.RunnerConfig: 1
mesh.Environment: 1
Union[(subprocess.CompletedProcess, subprocess.CalledProcessError)]: 1
ImageSize: 1
SendSendgridEmail: 1
AzureFileStorage: 1
Upload: 1
Download: 1
Mail: 1
Iterable[MailPart]: 1
Optional[Dict[(str, Set[str])]]: 1
EmailServerClient: 1
Iterable[Download]: 1
Iterable[FileStorage]: 1
{'XML file content as bytes': bytes}: 1
PositionType: 1
Iterable[Model]: 1
Iterable[Union[(int, str)]]: 1
Optional[ModelTable]: 1
ExMetabolite: 1
'Component': 1
Microbiota: 1
Iterable[ExMetabolite]: 1
Iterable[ExReaction]: 1
'Reaction': 1
np.float: 1
Tuple[(float, str)]: 1
'ExReaction': 1
Dict[(Iterable[CobraModel], float)]: 1
InitMediaType: 1
RegType: 1
'Optional[Dict[str, List[TextEdit]]]': 1
'Optional[List[TextEdit]]': 1
'sublime.Region': 1
'Optional[List[Any]]': 1
'List[Dict[str, Any]]': 1
'Optional[List[Dict[str, Any]]]': 1
DiagnosticsUpdate: 1
'Dict[str, int]': 1
'Iterable[TextEdit]': 1
'Type[LanguageHandler]': 1
'List[List[ViewLike]]': 1
'Session': 1
MockWindow: 1
SignatureInformation: 1
'List[SignatureInformation]': 1
'Callable[[Optional[Any]], None]': 1
'Optional[Callable]': 1
'Dict[str, Callable]': 1
'Optional[dict]': 1
'Optional[Dict[str, Any]]': 1
'Optional[Range]': 1
LanguageHandler: 1
'List[LanguageConfig]': 1
'Dict[str,str]': 1
RegionParser: 1
AddressMap: 1
Sequence[Resource]: 1
PostgresListenerService: 1
Discovery: 1
Optional[Filesystem]: 1
[frozenset]: 1
[(str, float)]: 1
commands.Command[Context]: 1
ConfessionType: 1
ConfessionNumberingType: 1
Union[(Paragraph, Article, Question)]: 1
ConfessionTypeEnum: 1
List[Union[(Paragraph, Article, Question)]]: 1
Passage: 1
SearchResults: 1
MockCommand: 1
ConfessionJSON: 1
ArticlesJSON: 1
T.Optional[list]: 1
(List[str], Mapping[(int, str)]): 1
(MainPlugin or MetaPlugin): 1
Installer: 1
TypedConfigParser: 1
Dict[(str, 'Source')]: 1
Iterable['Source']: 1
TrainingExamplesInterface: 1
Iterable[Posting]: 1
Optional[reconcile.Candidates]: 1
reconcile.LoadedReconciler: 1
journal_editor.JournalEditor: 1
Union[(Directive, Posting)]: 1
ImportResult: 1
Iterable[ImportResult]: 1
Iterable[InvalidSourceReference]: 1
Optional[Tuple[(str, Any)]]: 1
Optional[Posting]: 1
'JournalEditor': 1
LogFunction: 1
Union[(MintEntry, RawBalance)]: 1
Union[(Set[str], FrozenSet[str])]: 1
Optional[PredictionInput]: 1
List[ImportResult]: 1
training.FeatureExtractor: 1
List[InvalidSourceReference]: 1
Dict[(str, Open)]: 1
Iterable[RawEntry]: 1
Iterable[Directive]: 1
Callable[([Transaction, Posting, List[Posting], str, datetime.date], RawEntryKey)]: 1
Callable[([RawEntry], RawEntryKey)]: 1
Callable[([RawEntry], Transaction)]: 1
mpl.axes.Axes: 1
ElasticSearchFactory: 1
ElasticSearchIndex: 1
'ProjectSet': 1
Caller: 1
RuleGeneric: 1
Union[(LogLevel, str)]: 1
Union[(str, IPAddress, IPNetwork)]: 1
Union[(str, IPAddress, IPNetwork, BaseAddress)]: 1
Union[(None, Dict, List)]: 1
GoogleAlbumMedia: 1
LocalFilesMedia: 1
Union[(Mapping[(futures.Future, DatabaseMedia)], List[futures.Future])]: 1
PatType: 1
Optional[Page]: 1
Company: 1
Sequence['Ingredient']: 1
Training: 1
Union[(np.ndarray, tuple)]: 1
'AdversarialExampleController': 1
KerasClassifier: 1
BaseController: 1
MaximizationEngine: 1
MaximizationEngine.Change: 1
LucidController: 1
LucidEngine: 1
LucidEngine.Change: 1
util.RecorderHandler: 1
ActivationView: 1
elasticsearch_dsl.Search: 1
Date('%Y年%M月%d日'): 1
ArticleRequested: 1
MsgDirection: 1
Iterable[Tuple[(AnyFunc, AnyArgs)]]: 1
RichText: 1
Jobs: 1
ModelFilePaths: 1
Entities: 1
List[Files]: 1
id: 1
List[NmapRule]: 1
List[Resource]: 1
Union[(Tuple, None)]: 1
DateField: 1
TcamCaptureData: 1
TcamDevice: 1
TcamDeviceIndex: 1
ROIGroup: 1
Gst.Buffer: 1
Encoder: 1
VariableDescriptor: 1
AzimuthWindowingMethod: 1
L1bProductComparator: 1
QComboBox: 1
Dict[(Interval, int)]: 1
BackupRoot: 1
Dict[(Interval, str)]: 1
Dict[(Interval, KeepAmount)]: 1
Union[(SnapDir, SnapDirTmp)]: 1
BackupLatest: 1
SongInfo: 1
List[FieldSpec]: 1
Optional[Tuple[FieldSpec]]: 1
TType: 1
Tuple[FieldSpec]: 1
Dict[(str, thrift_inspect.Function)]: 1
Struct: 1
Mapping[(Protocol, bytes)]: 1
Union[(Struct, Mapping[(Any, Any)], Sequence[Any], AbstractSet[Any])]: 1
BadEnum: 1
Type[_E]: 1
Optional['thrift.py3.server.Path']: 1
thrift.py3.server.ServiceInterface: 1
TestActivity: 1
Optional[AppProcessState]: 1
IdbClientBase: 1
XctestRunResponse: 1
Destination: 1
HIDPressAction: 1
CrashLogResponse: 1
CrashLogInfoProto: 1
CrashShowResponse: 1
CrashLogQuery: 1
GrpcCompanionInfo: 1
GrpcTargetDescription: 1
ScreenDimensions: 1
GrpcScreenDimensions: 1
GrpcConnectionDestination: 1
Callable[([str], IdbClientBase)]: 1
Callable[(..., AsyncIterator[_T])]: 1
_F: 1
CompanionServiceStub: 1
GRPCHandler: 1
BootManager: 1
List[Server]: 1
FBSimctl: 1
Photo: 1
Union[(str, float)]: 1
SimpleReportProcessorInterface: 1
PcsdSSL: 1
ruby_pcsd.SinatraResult: 1
HTTPHeaders: 1
List[Metric]: 1
Optional[Metric]: 1
Union[(str, bson.ObjectId)]: 1
DataStorage: 1
DataSourceError: 1
NotImplementedError: 1
_FileType: 1
process.UnexpectedOutputError: 1
Registro: 1
[(float, str, str)]: 1
List[slice]: 1
List[TIME_FORMAT]: 1
Type[list]: 1
Opt[List[Union[(Event, TIME_FORMAT)]]]: 1
List[Union[(Event, TIME_FORMAT)]]: 1
Union[(float, Fraction)]: 1
Opt[Union[(List[EventList], List[List[TIME_FORMAT]])]]: 1
Opt[List[float]]: 1
List[Filter]: 1
Opt[List[Union[(Weightable, List[Any])]]]: 1
'WeightableList': 1
Opt[Union[(VideoSourceList, List[Union[(VideoSource, str, List[Any])]])]]: 1
EventList: 1
List[VideoSegment]: 1
Opt[List[VideoEffect]]: 1
List[Dimensions]: 1
Union[(SourceList, list)]: 1
Opt[List[Union[(Source, 'SourceList')]]]: 1
List[Subtitle]: 1
Opt[List[str]]: 1
List[VideoClip]: 1
VideoClip: 1
'VideoSegment': 1
Opt[Tuple[(int, int)]]: 1
MPI.Intercomm: 1
Dict[(str, packaging.requirements.Requirement)]: 1
_Union[(_Dict[(str, _Union[(int, str)])], _List[_Union[(int, str)]])]: 1
'RepoManager': 1
Union[(str, Path, os.PathLike)]: 1
importlib.machinery.ModuleSpec: 1
discord.abc.User: 1
commands.Cog: 1
AntiSpamInterval: 1
Iterable[_ReactableEmoji]: 1
Definition: 1
'Error': 1
Optional[InferenceContext]: 1
astroid.node_classes.Name: 1
astroid.node_classes.NodeNG: 1
List[Tuple[(tuple, tuple)]]: 1
List[MeshPolygon]: 1
List[MeshVertex]: 1
Sequence[Union[(arrow.Arrow, datetime.datetime)]]: 1
Sequence[RestaurantsConfigEntry]: 1
MutableMapping[(str, Union[(str, int)])]: 1
RestaurantCard: 1
'SingleCheckpoint': 1
List[SingleCheckpoint]: 1
List[Tuple[(Schedule, EnvironmentSteps)]]: 1
'SaverCollection': 1
EnvResponse: 1
PredictionType: 1
NFSDataStoreParameters: 1
S3DataStoreParameters: 1
DataStoreParameters: 1
'InputFilter': 1
ReductionMethod: 1
VectorObservationSpace: 1
Union[(Tuple, np.ndarray)]: 1
List[ObservationType]: 1
PlanarMapsObservationSpace: 1
Dict[(str, NetworkParameters)]: 1
QDND: 1
List[CameraTypes]: 1
StarcraftObservationType: 1
Union[(List, EmbedderScheme)]: 1
Dict[(Any, np.ndarray)]: 1
List[Tuple[('Architecture', Dict[(str, np.ndarray)])]]: 1
layers.NoisyNetDense: 1
tf.train.Server: 1
tf.placeholder: 1
gluon.ParameterDict: 1
Union[(list, tuple, np.ndarray, NDArray, int, float)]: 1
Union[(NDArray, list, tuple)]: 1
Tuple[NDArray]: 1
GradientClippingMethod: 1
List[Tuple[(Union[(NDArray, Symbol)], str)]]: 1
LSTMMiddlewareParameters: 1
MiddlewareParameters: 1
FCMiddlewareParameters: 1
MemoryBackend: 1
RedisPubSubMemoryBackendParameters: 1
'OpeSharedStats': 1
typing.Iterable[_MongoField]: 1
typing.ItemsView[(str, import_status.Importer)]: 1
options_pb2.StringFormat: 1
online_salon_pb2.SalonFilterRule: 1
typing.List[_OnlineSalonRule]: 1
typing.Dict[(str, typing.Dict[(str, typing.Any)])]: 1
typing.Iterable['job_offers._JobOffer']: 1
typing.Union[(float, str)]: 1
typing.Iterable[_T]: 1
typing.Callable[([_T], typing.Iterable[_U])]: 1
typing.Iterable[typing.Dict[(str, typing.Any)]]: 1
_ProxyFields: 1
_MatplotlibAxesSubplot: 1
typing.Callable[([_MatplotlibPatch], str)]: 1
typing.Dict[(str, typing.Union[(str, int)])]: 1
typing.Union[(pd.DataFrame, str)]: 1
typing.Callable[([str, str, 'options_pb2.StringFormat'], str)]: 1
typing.Optional[typing.AbstractSet[str]]: 1
typing.Iterable[typing.Dict[(str, str)]]: 1
typing.Dict[(str, typing.Dict[(str, str)])]: 1
StringCollector: 1
typing.Union[(str, _Recipient)]: 1
typing.Optional[typing.List[_Recipient]]: 1
action_pb2.Action: 1
database.Database: 1
use_case_pb2.UseCaseEvaluation: 1
use_case_pb2.UseCaseCreateRequest: 1
use_case_pb2.UseCaseFiltersRequest: 1
typing.Iterator[use_case_pb2.UseCase]: 1
typing.Iterable[diagnostic_pb2.DiagnosticCategory]: 1
use_case_pb2.UseCasesDistributionRequest: 1
typing.Union[(_XmlType, typing.List[_XmlType])]: 1
typing.Set[int]: 1
typing.Optional[typing.Set[int]]: 1
_ProtoType: 1
_NamedJob: 1
user_pb2.Gender: 1
scoring.ModelBase: 1
strategy_pb2.StrategyModule: 1
typing.Callable[([typing.Dict[(str, typing.Any)]], bool)]: 1
flask.Response: 1
typing.Union[(None, typing.List[typing.Any], _JsonDict)]: 1
typing.Optional[_JsonDict]: 1
typing.Optional[typing.Any]: 1
_SentMessage: 1
geo_pb2.Location: 1
typing.Iterable[commute_pb2.HiringCity]: 1
typing.Iterable[event_pb2.Event]: 1
job_pb2.ApplicationMode: 1
typing.Iterable[job_pb2.RelatedLocalJobGroup]: 1
typing.Callable[([_T], str)]: 1
user_pb2.EmailSent: 1
job_pb2.DegreeLevel: 1
job_pb2.Job: 1
typing.Dict[(_T, typing.Optional[_U])]: 1
typing.List[signal.Signals]: 1
typing.Iterator[_T]: 1
typing.Iterable[user_pb2.EmailSent]: 1
EmailPolicy: 1
typing.Optional[job_pb2.ModePercentage]: 1
typing.Iterable[project_pb2.Advice]: 1
'geo_pb2.AreaType': 1
typing.List[job_pb2.EmploymentTypePercentage]: 1
typing.Iterable['job_pb2.Month']: 1
review_pb2.DocumentToReview: 1
typing.Type[_UserProto]: 1
typing.Callable[([_UserProto], _Profile)]: 1
typing.Callable[([_UserProto], bool)]: 1
typing.Callable[([_UserProto], str)]: 1
typing.Callable[([_UserProto, mypy_extensions.DefaultNamedArg(pymongo.database.Database, 'database'), mypy_extensions.DefaultNamedArg(pymongo.database.Database, 'users_database')], typing.Optional[typing.Dict[(str, str)]])]: 1
typing.Optional[typing.Callable[([_UserProto, mypy_extensions.DefaultNamedArg(user_pb2.EmailSent, 'email_sent'), mypy_extensions.DefaultNamedArg(typing.Dict[(str, str)], 'template_vars'), mypy_extensions.DefaultNamedArg(pymongo.database.Database, 'database'), mypy_extensions.DefaultNamedArg(pymongo.database.Database, 'user_database')], None)]]: 1
_UserCollection[typing.Any]: 1
_UserProto: 1
Campaign[_UserProto]: 1
user_pb2.UserProfile: 1
GracefulInterruptHandler: 1
Bars: 1
AbstractSignalHandler: 1
ticker_input: 1
Union[(dt.datetime, Timestamp)]: 1
Union[(SignalType, str)]: 1
(SignalType or str): 1
Chunker: 1
Union[(pd.DatetimeIndex, DateRange)]: 1
(str or int or dt.datetime): 1
DateRange: 1
(pd.Series or pd.DataFrame): 1
(dt.datetime or str): 1
Play: 1
ManagedConfig: 1
collections.Callable: 1
Optional[Union[(Iterable, List, Tuple, Dict)]]: 1
Optional[List[Attachment]]: 1
Optional[Embed]: 1
Optional[Dict[(str, Message)]]: 1
Optional[Sequence[Message]]: 1
EntryMeta: 1
QueueEntry: 1
Tuple[(bytes, ...)]: 1
Union[(int, bytes)]: 1
click.Command: 1
Depot: 1
LocalTemplate: 1
'BaseTemplate': 1
Union[(str, Version)]: 1
Optional[BaseTemplate]: 1
List[BaseTemplate]: 1
TemplateParameter: 1
Union[(Dict[(str, bool)], bool)]: 1
Optional[c.Conductor]: 1
Optional['CliConfig']: 1
Union[(str, Dict, object, List[Union[(str, Dict, object, Tuple)]])]: 1
Optional[Callable[([T], Union[(bool, str)])]]: 1
Optional[Logger]: 1
Tuple[np.ndarray]: 1
Optional[Tuple[(int, int, int)]]: 1
SuperSegmentationObject: 1
SuperSegmentationDataset: 1
Union[(Dict[(str, np.ndarray)], List[np.ndarray])]: 1
'SegmentationDataset': 1
Union[(np.ndarray, List)]: 1
Optional[Union[(np.ndarray, List[np.ndarray])]]: 1
Optional[Union[(List[str], np.ndarray)]]: 1
Union[(List[int], np.ndarray)]: 1
Iterable[_BlobId]: 1
AbstractSet[ImageTag]: 1
Iterable[ImageManifest]: 1
SameBoard: 1
GuiClient: 1
'ColourScheme': 1
List[List['Ball']]: 1
List[List['Box']]: 1
'Colour': 1
'Scorer': 1
(None, int): 1
SomeNamedTuple: 1
'some string': 1
SomeClass: 1
(None, str): 1
Union[('Unit', 'Point2', 'Point3')]: 1
Union[('Units', List['Point2'])]: 1
Union[('Unit', 'Pointlike')]: 1
Union[('Point2', 'Point3')]: 1
Union[(Set['Point2'], List['Point2'])]: 1
'GameInfo': 1
Union[(Unit, Point2)]: 1
gpflow_monitor.Trigger: 1
AuthToken: 1
models.Sensor: 1
models.SensorGroup: 1
models.Device: 1
models.Billing: 1
models.RealTimeConfig: 1
models.Profile: 1
models.Measurement: 1
BillingModel: 1
'Sensor': 1
Optional[List[Sensor]]: 1
List[SensorGroup]: 1
RealTimeConfig: 1
List[RegisterGroup]: 1
List[Register]: 1
Billing: 1
(str or [str] or iter): 1
([str] or str): 1
([str] or None): 1
Optional[CoordinateSystem]: 1
Optional[Iterable[AffineTransform]]: 1
'Streamlines': 1
Dict[(str, List[Set])]: 1
PayloadMeta: 1
List[Dict[(str, Dict)]]: 1
Dict[(str, List[List])]: 1
List[PayloadResults]: 1
Optional[List[ExtractedPayload]]: 1
Union[(DefaultDict[(str, List[str])], Dict[(str, List[str])])]: 1
(str,): 1
{str: object}: 1
[Cloud]: 1
ReportData: 1
TafLineData: 1
MetarTrans: 1
TafLineTrans: 1
PriorityQueue: 1
Callable[([List[int]], DynamicConnectivity)]: 1
TlsWrappedProtocolEnum: 1
Optional[ClientAuthenticationCredentials]: 1
Optional[HttpConnectTunnelingSettings]: 1
ClientAuthenticationServerConfigurationEnum: 1
Optional[OpenSslVersionEnum]: 1
List[PluginScanResult]: 1
JobType: 1
ConnectionHelper: 1
TlsWrappedProtocolHelper: 1
Union[('ServerConnectivityInfo', 'ServerConnectivityTester')]: 1
HttpConnectTunnelingSettings: 1
HeartbleedScanCommand: 1
FallbackScsvScanCommand: 1
List[Type[Plugin]]: 1
plugin_base.PluginScanCommand: 1
OpenSslCcsInjectionScanCommand: 1
SessionRenegotiationScanCommand: 1
CompressionScanCommand: 1
EarlyDataScanCommand: 1
Certificate: 1
SupportedPlatformEnum: 1
Optional[socket.socket]: 1
OpenSslVerifyEnum: 1
_nassl.OCSP_RESPONSE: 1
OcspResponseStatusEnum: 1
Union[(RSAPrivateKey, RSAPublicKey)]: 1
'path to (optionally gzipped) fasta/fastq input': 1
'path to Diamond taxonomic classification output': 1
'comma delimited list of taxon IDs': 1
'pass sequences unclassified at superkingdom level >(0)': 1
'discard specified taxa': 1
'show warnings': 1
'path to tictax annotated fasta input': 1
'path to BBMap scaftstats file': 1
'One Codex API key': 1
'attempt to reconstruct reference around soft-clip boundaries': 1
'substitute Ns at coverage depths beneath this value': 1
'match length required to close soft-clipped gaps': 1
'read depth fraction at which to cease clip extension': 1
'ignore clip dominant positions within n positions of termini': 1
'trim ambiguous nucleotides (Ns) from sequence ends': 1
'close gaps using uppercase alphabet': 1
'output relative nucleotide frequencies': 1
'skip confidence calculation': 1
'absolute frequency (0-∞) threshold above which to call variants': 1
'relative frequency (0.0-1.0) threshold above which to call variants': 1
'exclude invariant sites from output': 1
'report absolute variant frequencies': 1
GradeBook: 1
SqlitePersisterRequest: 1
Callable[([T], None)]: 1
events.NewSubmissionsEvent: 1
events.SubmissionStartedEvent: 1
events.SubmissionFinishedEvent: 1
events.EndOfSubmissionsEvent: 1
events.SubmissionGradeExternallyUpdatedEvent: 1
events.AuthGrantedEvent: 1
events.EventManager: 1
events.AuthRequestedEvent: 1
iochannels.Log: 1
hosts.LocalHost: 1
List[psutil.Process]: 1
KillPredicateType: 1
wave.Wave_write: 1
sql_query_data.SQLQueryData: 1
{str, type}: 1
base_sql_query_execution.BaseSQLQueryExecution(): 1
[sql_query_data.SQLQueryData]: 1
base_file_handler.BaseFileHandler(): 1
base_explain_query_plan.BaseExplainQueryPlan: 1
os.path: 1
base_output_handler.BaseOutputHandler: 1
base_sqlite_plugin_helper.BaseSQLitePluginHelper: 1
base_sqlite_plugin_path_helper.BaseSQLitePluginPathHelper(): 1
sql_query_column_model_data.SQLColumnModelData: 1
parser_test_data_model.ParserTestDataModel: 1
formatter_data_model.FormatterDataModel: 1
formatter_test_data_model.FormatterTestDataModel: 1
parser_data_model.ParserDataModel: 1
[sql_query_column_model_data.SQLColumnModelData]: 1
discord.Game: 1
ProjMan: 1
OpCode: 1
List[SingleQuery]: 1
ray.actor.ActorClass: 1
ray.actor.ActorHandle: 1
Optional[State]: 1
IStrategy: 1
RunMode: 1
Wheel: 1
'pages.Page': 1
Callable[(['Node'], None)]: 1
Optional[BrandID]: 1
DbParty: 1
DbShop: 1
DbNumberSequence: 1
Set[PaymentState]: 1
Sequence[OrderItemQuantity]: 1
Dict[(ArticleNumber, str)]: 1
OrderAction: 1
Sequence[OrderEventData]: 1
Set[OrderNumber]: 1
TicketBundle: 1
BadgeAwarding: 1
AttachedArticleID: 1
ArticleCompilation: 1
Sequence[DbAttachedArticle]: 1
ArticleCompilationItem: 1
AvatarID: 1
BoardAccessGrantID: 1
PostingID: 1
DbBoard: 1
CategoryWithLastUpdate: 1
MembershipID: 1
Sequence[DbUser]: 1
OrgaFlag: 1
SessionToken: 1
Union[(AnonymousUser, User)]: 1
DbArea: 1
Set[SeatID]: 1
AreaID: 1
DbSeatGroupOccupancy: 1
SeatGroupID: 1
Seat: 1
Tuple[(UserID, str, bool, bool, Optional[Avatar], bool)]: 1
Set[User]: 1
Iterable[ImageType]: 1
TourneyCategoryID: 1
Tourney: 1
DbBrand: 1
Set[BadgeID]: 1
DbBadge: 1
DbBadgeAwarding: 1
Mountpoint: 1
MountpointID: 1
Optional[Scope]: 1
SnippetVersion: 1
List[Permission]: 1
DbChannel: 1
DbImage: 1
ItemVersionID: 1
ItemVersion: 1
DbSubject: 1
Sequence[SubjectID]: 1
DbTicket: 1
DbSeat: 1
Set[TicketCode]: 1
DbSite: 1
Iterator[Metric]: 1
List[BrandID]: 1
List[Shop]: 1
Presence: 1
List[TimeSlot]: 1
Sequence[Arrow]: 1
Iterable[datetime]: 1
ImageFile: 1
Sequence[Order]: 1
Set[Badge]: 1
Sequence[Posting]: 1
Optional[PartyID]: 1
Sequence[Seat]: 1
Sequence[TicketEvent]: 1
Iterable[PresenceTimeSlot]: 1
Iterable[TimeSlot]: 1
Optional[VersionID]: 1
ApiCaller: 1
List[CharNode]: 1
CharNode: 1
'CharNode': 1
ReshapeAlert: 1
ModeValue: 1
DriveMode: 1
Entrypoint: 1
WriteProtectMode: 1
QueryMetadata: 1
IO[AnyStr]: 1
Type[Union[(str, int)]]: 1
List[Rule]: 1
List[RuleBlock]: 1
Union[('ViewRegistrant', ViewFunc)]: 1
ViewFunc: 1
Collection[Dict[(str, Any)]]: 1
'UserVisibleVersionInfo': 1
Callable[([int], GraphProcessor)]: 1
Callable[([Dict[(str, Any)]], Dict[(str, float)])]: 1
models.Image: 1
models.Option: 1
models.WorkaroundPoll: 1
List[ParsedMailAttachment]: 1
chkit.Ingress: 1
Callable[([List[Tuple[(str, int, int)]]], bytes)]: 1
JsonRpcMsg: 1
AsyncJSONRPCLightsClient: 1
List[structs.LightBulb]: 1
AIOSCMonolightApp: 1
KeyPress: 1
LedCanvas: 1
RequestTypeList: 1
List[UIComponent]: 1
Controls: 1
Callable[([List[str]], List[Any])]: 1
Callable[([List[Any]], float)]: 1
Callable[([List[str], Any, int], None)]: 1
SliderTraits: 1
Callable[([lightsc.structs.LightBulb], T)]: 1
Layout: 1
h5py.Group: 1
FileFormat: 1
Union[(Text, IO)]: 1
StacPropertyView: 1
CommentedMap: 1
typing.Union[(Path, str)]: 1
Console: 1
pyqtBoundSignal: 1
RecentProject: 1
QFormLayout: 1
AxisFormatter: 1
PlotItem: 1
MouseClickEvent: 1
Iterable[PlotItem]: 1
LinearSegment: 1
SubTab: 1
List[MenuBinding]: 1
TransformPlot: 1
Union[('OID', str)]: 1
'IFlightController': 1
'IDataSetController': 1
Optional[Union[(QWidget, QObject)]]: 1
QIcon: 1
DataSegment: 1
Gravimeter: 1
Flight: 1
Union[(OID, str)]: 1
Union[(Flight, Gravimeter)]: 1
Union[(str, OID)]: 1
List[DataSegment]: 1
sa.engine.Connectable: 1
OutputFormat: 1
SourceDataMetrics: 1
models.Submission: 1
sa_engine.Engine: 1
models.Form: 1
models.User: 1
typing.Dict[(T_PROPS, nine.Type[TemporalProperty])]: 1
typing.Iterable[T_PROPS]: 1
nine.Type[EntityClock]: 1
nine.Type[TemporalActivityMixin]: 1
TemporalActivityMixin: 1
typing.Union[(orm.Session, orm.sessionmaker)]: 1
typing.Iterable[sa.Column]: 1
sa.Column: 1
bases.TemporalActivityMixin: 1
bases.Clocked: 1
attributes.InstrumentedAttribute: 1
sa.engine.Connection: 1
orm.sessionmaker: 1
Meld: 1
Sheet: 1
DatabaseUser: 1
DatabaseClassroom: 1
List[DatabaseClassroom]: 1
DatabaseBuild: 1
List[DatabaseBuild]: 1
DatabaseEvent: 1
List[DatabaseEvent]: 1
List[datetime]: 1
SpiderEvent: 1
ShelveSettings: 1
SchedulerInfo: 1
IsUserAdminUseCase: 1
Optional[cfscrape.CloudflareScraper]: 1
ViewVerification: 1
ModuleEnum: 1
Iterable[ViewVerification]: 1
1: 1
List[LaunchDescriptionEntity]: 1
Optional[Iterable[LaunchDescriptionEntity]]: 1
Optional[LaunchDescription]: 1
LaunchDescriptionSource: 1
Iterable[Action]: 1
Optional[Iterable[SomeSubstitutionsType]]: 1
Union[(type, Iterable[type])]: 1
PublisherEventCallbacks: 1
Callable[([SrvTypeRequest, SrvTypeResponse], SrvTypeResponse)]: 1
SrvTypeResponse: 1
SubscriptionEventCallbacks: 1
usb.core.Device: 1
Callable[([DreamCheekyEvent], None)]: 1
_Callable[(['DreamCheekyEvent'], None)]: 1
DreamCheekyThread: 1
JudgingCriteria: 1
I2: 1
SendMode: 1
autokey.service.Service: 1
PopupMenu: 1
QAbstractItemView.EditTrigger: 1
Optional[QTreeWidgetItem]: 1
model.Phrase: 1
List[model.Folder]: 1
ItemWidgetType: 1
QApplication: 1
QSystemTrayIcon.ActivationReason: 1
AutoKeyIcon: 1
typing.List[Key]: 1
GlobalHotkeyDialog: 1
QPushButton: 1
Union[(int, dict)]: 1
Callable[([Dict, DagRunOrder], DagRunOrder)]: 1
Optional[Union[(str, datetime.datetime)]]: 1
SupportsAbs[int]: 1
Callable[([str, str], Optional[Dict])]: 1
VolumeMount: 1
Union[(Dict, SynthesisInput)]: 1
Union[(Dict, VoiceSelectionParams)]: 1
Union[(Dict, AudioConfig)]: 1
Union[(Dict, Cluster)]: 1
List[VideoIntelligenceServiceClient.enums.Feature]: 1
Union[(Dict, VideoContext)]: 1
Union[(Dict, RecognitionConfig)]: 1
Union[(Dict, RecognitionAudio)]: 1
enums.Instance.Type: 1
enums.StorageType: 1
Dict[(str, GarbageCollectionRule)]: 1
TaskInstance: 1
Iterable[BaseOperator]: 1
DagBag: 1
BaseOperator: 1
Union[(DAG, BaseOperator, dict, list, set, tuple)]: 1
Union[(slice, int)]: 1
Tuple[Tuple[(int, ...)]]: 1
PendingAction: 1
RunContext: 1
GetListConfigParser: 1
LintContext: 1
'RunContext': 1
JJBConfig: 1
Modifier: 1
[Body]: 1
Optional[Mapping[(UUID, Optional[Permission])]]: 1
ApiToken: 1
GitHubRepositoryProvider: 1
models.Author: 1
Mapping[(str, BinaryIO)]: 1
List[Repository]: 1
Artifact: 1
FileCoverage: 1
Tuple[(Any, List[Build])]: 1
List[Revision]: 1
QtCore.Qt.Orientation: 1
Ui_MainWindow: 1
typing.Union[(Error, ErrorList)]: 1
SortDirection: 1
FieldABC: 1
Optional[Callee]: 1
List[MimeTypeComponents]: 1
IterableType[str]: 1
MimeTypeComponents: 1
typing.Union[('JSONPointer', str)]: 1
JSONPointer: 1
JSONAPIContext: 1
'DiffNode': 1
DiffEngine: 1
InformationContentStore: 1
SimApi: 1
IcStatistic: 1
Dict[(str, IcStatistic)]: 1
Dict[(AnnotationKey, InferenceValue)]: 1
InferenceValue: 1
Association: 1
ResultType: 1
AssociationSet: 1
Union[(float, str, None)]: 1
Optional[List[PairwiseMatch]]: 1
Optional[List[Node]]: 1
Optional[List[List[Node]]]: 1
Optional[TypedNode]: 1
SimQuery: 1
List[SimMatch]: 1
SimMetadata: 1
ReceiptParams: 1
Optional[List[ParslExecutor]]: 1
Optional[MonitoringHub]: 1
schemas.Route: 1
Phrase: 1
Animation: 1
PeopleApplication: 1
BaseBlockStoreConfig: 1
MemoryRealmComponent: 1
MemoryUserComponent: 1
MemoryMessageComponent: 1
BaseVlobComponent: 1
RealmRole: 1
RemoteManifest: 1
RemoteLoader: 1
WorkspaceFS: 1
Optional[UserManifest]: 1
Optional[LocalUserManifest]: 1
BackendOrganizationAddr: 1
BaseLocalDeviceDecryptor: 1
BaseLocalDeviceEncryptor: 1
List[OpenBurnGrain]: 1
OpenBurnNozzle: 1
'ThemePreview': 1
'IconThemePreview': 1
ConstructorType: 1
aiormq.types.DeliveredMessage: 1
ExchangeType_: 1
Union[(int, np.int64)]: 1
Union[(int, np.datetime64)]: 1
List[FeedConn]: 1
interceptor.Request: 1
downloads.TempDownload: 1
apitypes.InitContext: 1
ExtensionInfo: 1
'webenginetab.WebEngineTab': 1
QWebEnginePage.NavigationType: 1
qtnetworkdownloads.DownloadItem: 1
typing.Iterable[bool]: 1
QFileDevice: 1
QByteArray: 1
QIODevice: 1
'configdata.Option': 1
usertypes.Backend: 1
typing.Optional[typing.Mapping[(str, bool)]]: 1
typing.Union[(str, Exception)]: 1
typing.Sequence[ConfigErrorDesc]: 1
savemanager.SaveManager: 1
typing.Union[(str, typing.Mapping[(str, typing.Any)])]: 1
_BackendDict: 1
typing.Union[(None, str, _BackendDict)]: 1
LtiContentSource: 1
json: 1
Callable[([str, str, str], None)]: 1
ReminderPlugin: 1
BuildInfo: 1
'IRAmbassadorTLS': 1
Optional['IRAmbassadorTLS']: 1
Union[(str, RichStatus)]: 1
Type[IRBaseMapping]: 1
Optional[IRTLSContext]: 1
IRTLSContext: 1
SequenceView: 1
typing.Optional[typing.Callable[([Popen], None)]]: 1
Type[protocol.Protocol]: 1
MachineBuilder: 1
Gtk.Stack: 1
List[MessageListener]: 1
MessageListener: 1
FinishedJob: 1
List[Tuple[(float, int)]]: 1
Optional[List[Tuple[(float, int)]]]: 1
Optional[LearningRateScheduler]: 1
BatchState: 1
CheckpointState: 1
EveState: 1
Optional['encoder.ConvolutionalEmbeddingConfig']: 1
Optional[Dict[(str, Optional[mx.sym.Symbol])]]: 1
Optional[mx.sym.Symbol]: 1
data_io.DataConfig: 1
encoder.EncoderConfig: 1
decoder.DecoderConfig: 1
loss.LossConfig: 1
Optional[loss.LossConfig]: 1
layers.LengthRatioConfig: 1
ModelConfig: 1
List[Tuple[(str, Callable)]]: 1
Dict[(str, List[float])]: 1
Dict[(str, Dict)]: 1
Dict[(str, mx.nd.NDArray)]: 1
List[inference.TranslatorInput]: 1
ConvolutionConfig: 1
List[mx.context.Context]: 1
inference.LengthPenalty: 1
inference.BrevityPenalty: 1
mx.io.DataBatch: 1
List[mx.Context]: 1
Union[(QTreeWidget, QTreeWidgetItem)]: 1
SettingsClass: 1
Dict[(str, Attribute)]: 1
Dict[(str, Relation)]: 1
Callable[([T], S)]: 1
Union[(int, Tuple[(int, JsonType)])]: 1
Union[Coroutine]: 1
MetricsRegistry: 1
Optional[MetricsRegistry]: 1
ServerSlice: 1
Dict[(str, Callable[([ApplicationContext], None)])]: 1
'ServerSlice': 1
Callable[([Connection], Coroutine[(Any, Any, None)])]: 1
CacheItem: 1
AgentCache: 1
List[DefineEntity]: 1
List[DynamicStatement]: 1
DynamicStatement: 1
ResultCollector: 1
Locatable: 1
List[ExpressionStatement]: 1
'Implement': 1
'For': 1
BasicBlock: 1
List[Tuple[(LocatableString, ExpressionStatement)]]: 1
FunctionCall: 1
typing.List[ExpressionStatement]: 1
typing.List[typing.Tuple[(str, ReferenceStatement)]]: 1
typing.Dict[(object, ResultVariable)]: 1
typing.List[typing.Tuple[('Reference', str)]]: 1
CallTarget: 1
Callable[(..., Apireturn)]: 1
'Endpoint': 1
Dict[(str, common.UrlMethod)]: 1
MutableMapping[(str, str)]: 1
common.SessionManagerInterface: 1
'std::Host': 1
"FileType('w')": 1
List[GtfLine]: 1
multiprocessing.Pipe: 1
Mikado.loci.Gene: 1
[mp.Process]: 1
Union[(JsonObject, List[JsonObject], str)]: 1
slack.WebClient: 1
base_metric.MetricImplementation: 1
sqlalchemy.orm.attributes.InstrumentedAttribute: 1
models.Release: 1
Union[(datetime.datetime, Text)]: 1
MetricImplementation: 1
models.MetricResult: 1
Optional[models.MetricResult]: 1
Callable[([str, str, bool, bool], None)]: 1
Callable[([bool], bool)]: 1
LocalNotificationLog: 1
terms.Term: 1
Union[(Field, Operation)]: 1
Iterable[Series]: 1
Union[(Sized, Iterable)]: 1
Iterable[pd.DataFrame]: 1
Criterion: 1
Optional[BlockConvertible]: 1
BlockType: 1
List[EnumValue]: 1
Union[(str, bool, int)]: 1
Optional[List['Type']]: 1
CurseModpack: 1
QLayout: 1
'': 1
'class': 1
Optional[oct]: 1
oct: 1
ObjectGraph: 1
SecondaryLoader: 1
IPreprocessor: 1
(str or iter): 1
(nn.Module or iter): 1
typing.Union[(discord.Member, discord.Role)]: 1
discord.PermissionOverwrite: 1
FlaskRestfulApi: 1
Iterable[_ModuleT]: 1
APSP: 1
cusparseOperation: 1
scipy.sparse.coo_matrix: 1
Optional[DiffusionMaps]: 1
DiffusionMaps: 1
ServerPlacer: 1
Dict[(str, ServerPlacer)]: 1
DataUtils: 1
EdgeServer: 1
BaseStation: 1
cplex.Cplex: 1
[timedelta, int]: 1
ThrottlingRule: 1
RuleList: 1
[RuleList, ThrottlingRule]: 1
Union[(str, Mapping[(str, Any)], Sequence[str])]: 1
CaseInsensitiveDict: 1
List[Project]: 1
Type['Command']: 1
DiffractionLibraryGenerator: 1
DiffractionSimulation: 1
three.Object3d: 1
Keyboard: 1
Callable[([List[List[int]]], float)]: 1
Origin: 1
List[Tuple[(Game, int)]]: 1
List[AnalysedMove]: 1
AnalysedGameID: 1
List[AnalysedGameID]: 1
List[Analysis]: 1
List[AnalysedPosition]: 1
Opt[List[int]]: 1
Emt: 1
Opt[Salt]: 1
Opt[Dict]: 1
Iterable[Tuple[(AnalysedGame, AnalysedGamePrediction)]]: 1
List[AnalysedGamePrediction]: 1
WeightedMovePrediction: 1
List[AnalysedGameActivation]: 1
List[BasicGameActivation]: 1
torch.optim.Adam: 1
KinematicChain: 1
Optional[Tool]: 1
Optional[Union[(int, np.random.RandomState)]]: 1
Union[(Sequence[MDHLink], np.ndarray)]: 1
Union[(OrientationConvention, str)]: 1
OrientationConvention: 1
OptimizationHandler: 1
_Group: 1
'Eventful': 1
Union[(str, bool, None)]: 1
Optional[AuthBase]: 1
Union[(bytes, MutableMapping[(str, str)], IO[Any], None)]: 1
Union[(Dict[(str, IO)], Dict[(str, Tuple[(str, Union[(IO, BinaryIO)], Optional[str], Optional[Dict[(str, str)]])])], Dict[(str, Tuple[(str, str)])], Sequence[Tuple[(str, Union[(IO, BinaryIO)])]], Sequence[Tuple[(str, Union[(IO, BinaryIO)], Optional[str], Optional[Dict[(str, str)]])]], None)]: 1
Union[(bytes, MutableMapping[(str, str)], IO[Any])]: 1
Union[(Dict[(str, IO)], Dict[(str, Tuple[(str, IO, Optional[str], Optional[Dict[(str, str)]])])], Dict[(str, Tuple[(str, str)])], Sequence[Tuple[(str, IO)]], Sequence[Tuple[(str, IO, Optional[str], Optional[Dict[(str, str)]])]], None)]: 1
Union[(str, Dict[(str, str)], Sequence[Tuple[(str, str)]], None)]: 1
Union[(List[Dict[(str, Any)]], Dict[(str, Any)], None)]: 1
Dict[(str, Union[(str, None)])]: 1
Dict[(str, Union[(Sequence[str], Dict[(str, Sequence[str])])])]: 1
Union[(str, Dict[(str, str)])]: 1
Union[(Dict[(str, str)], Dict[(str, List[str])], Dict[(str, List[Dict[(str, str)]])])]: 1
VersionContainer[SemVerAdapter]: 1
Type['DebianVersion']: 1
Dict[(str, T)]: 1
Union[(Iterable[Any], None)]: 1
BasePacker: 1
Dict[(str, Union[(str, Dict[(str, str)])])]: 1
threading.Thread: 1
Union[(str, Engine)]: 1
expense.Expense: 1
Expense: 1
'list of expense.Expense': 1
'list of payment.Payment': 1
Optional[Generator]: 1
Optional[Union[(datetime, None)]]: 1
VectorQueue: 1
Dict[(str, Tuple[str])]: 1
Tuple[(bytes, Optional[str])]: 1
Firmware: 1
Pattern[bytes]: 1
Dict[(str, Dict[(str, Union[(str, int)])])]: 1
BlackJackGame: 1
List[Category]: 1
AllData: 1
Iterable['ConfigVariable']: 1
ChoiceCallableType: 1
ValidatorsType: 1
OnChangeType: 1
Callable[([Dict[(str, Any)]], Set[int])]: 1
AnyUser: 1
Union[(Iterable[Model], Model)]: 1
BaseWebsocketClientMessage: 1
ProjectorSlide: 1
Type[ElementCacheProvider]: 1
Callable[([], List[Cachable])]: 1
Optional[SchemaVersion]: 1
List[Cachable]: 1
List[SubSeq]: 1
Sequencer[(S, I)]: 1
[{str: str}]: 1
TextIOBase: 1
AstNode: 1
ModuleNode: 1
ModulesNode: 1
InstructionsNode: 1
InitializerSignatureNode: 1
Lexer: 1
Signals: 1
Iterable[Event]: 1
Iterator[Error]: 1
NewErrorCountPerFile: 1
Tuple[(List[str], str)]: 1
Dict[(Pattern, str)]: 1
ContractReceiveNewTokenNetwork: 1
ContractReceiveRouteNew: 1
ActionChannelUpdateFee: 1
ContractReceiveChannelNew: 1
ContractReceiveChannelDeposit: 1
typing.BlockNumber: 1
typing.Optional[ServiceRegistry]: 1
typing.Optional[Address]: 1
WithdrawRequest: 1
WithdrawConfirmation: 1
WithdrawExpired: 1
SecretRequest: 1
RevealSecret: 1
Unlock: 1
LockExpired: 1
RefundTransfer: 1
LockedTransfer: 1
Processed: 1
Delivered: 1
PFSConfig: 1
List[RouteMetadata]: 1
BlockHash: 1
Union[('ContractReceiveSecretReveal', 'ReceiveSecretReveal')]: 1
NodeNetworkStateMap: 1
List[ChannelID]: 1
RouteState: 1
Callable[([Optional[ST], StateChange], TransitionResult[ST])]: 1
Optional[ST]: 1
Balance: 1
'SendLockedTransfer': 1
ValueError: 1
EthClient: 1
AsyncResult: 1
PendingLocksState: 1
'TokenNetwork': 1
BoundLoggerBase: 1
SendSecretRequest: 1
List[ID]: 1
Iterable[Tuple[(Any, ...)]]: 1
StateManager[ST]: 1
TransferTask: 1
QueueIdentifier: 1
Random: 1
EnvelopeMessage: 1
LockedTransferBase: 1
MessageTypeId: 1
Sequence[gevent.Greenlet]: 1
Optional[List[DummyUser]]: 1
Dict[(str, UserPresence)]: 1
Union[(str, User)]: 1
Iterable[Port]: 1
Type[SC]: 1
Iterable[TM]: 1
TM: 1
List[TM]: 1
Type[StateChange]: 1
'ChainState': 1
StatelessFilter: 1
typing.Address: 1
typing.TargetAddress: 1
typing.PaymentAmount: 1
typing.PaymentID: 1
typing.Secret: 1
typing.SecretHash: 1
Callable[([bytes], bytes)]: 1
Optional[Union[(Address, TokenAddress)]]: 1
SQLiteStorage: 1
ContractProxy: 1
MintingMethod: 1
Greenlet: 1
RaidenAPI: 1
Optional[EXECUTOR_IO]: 1
Callable[([Any], Tuple[(bool, Optional[str])])]: 1
Optional[Union[(int, Tuple[(T_IO_OR_INT, T_IO_OR_INT, T_IO_OR_INT)])]]: 1
ContractCodeMismatch: 1
typing.NetworkTimeout: 1
Dict[(str, Address)]: 1
Optional[ServiceRegistry]: 1
Union[(Credentials, str)]: 1
Optional[Type[JSONEncoder]]: 1
Iterable[Notification]: 1
Union[(PayloadAlert, str, None)]: 1
'Optional[SSLContext]': 1
ChoraleDataset: 1
DurationType: 1
Dict[(str, Dict[(str, float)])]: 1
PoloniexPublicAPI: 1
AbstractTrade: 1
Union[(control.TransferFunction, control.StateSpace)]: 1
pyulog.ULog: 1
Student: 1
policy.Policy: 1
Terminal: 1
NPIStep: 1
StepInput: 1
AdditionProgramSet: 1
Callable[([codecs.StreamReader], None)]: 1
MqttConnection: 1
codecs.StreamReader: 1
ObjectDetector: 1
RobotSerialCommandsConverter: 1
FaceRecognitionProcessWrapper: 1
BackEndType: 1
FieldNetwork: 1
LongOpt: 1
pytz.timezone: 1
UserPrefs: 1
CharacterStats: 1
NDChar: 1
Race: 1
Union[(discord.TextChannel, discord.DMChannel)]: 1
List[discord.CategoryChannel]: 1
discord.CategoryChannel: 1
DailyType: 1
[str, tuple]: 1
pycoQC_plot: 1
'int {0,1,2}': 1
'bool': 1
'list of str': 1
'python function or method': 1
ListOfWords: 1
Broker: 1
Tasks: 1
'Tasks': 1
'Batch': 1
List[EmailMessage]: 1
Optional[StrictRedis]: 1
Workers: 1
SCOPE: 1
base_network.NetworkClient: 1
'MatchConfig': 1
Union[(Path, str, RawConfigParser, 'ConfigObject')]: 1
HelperProcessRequest: 1
AgentMetadata: 1
Rotator: 1
BallState: 1
GameInfoState: 1
Union[(game_data_struct.GameTickPacket, GameTickPacket.GameTickPacket)]: 1
game_data_struct.GameTickPacket: 1
game_data_struct.FieldInfoPacket: 1
RigidBodyTick: 1
BallPrediction: 1
MutatorSettings: 1
BotConfigBundle: 1
IncrementingInteger: 1
Iterable[Exercise]: 1
MatchConfig: 1
typing.Union[(str, Template)]: 1
typing.Union[('Response', 'ResponseMessage')]: 1
environ.RemoteConnection: 1
typing.List[STEP_RENAME]: 1
typing.List[projects.ProjectStep]: 1
typing.Union[(str, Project)]: 1
typing.List[ProjectStep]: 1
typing.List[dict]: 1
'scaffolds.ResultsTest': 1
environ.Response: 1
property: 1
typing.Union[(list, tuple)]: 1
typing.Union[(None, str)]: 1
typing.Union[(projects.Project, None)]: 1
typing.Union[(str, types.ModuleType)]: 1
'caching.SharedCache': 1
typing.Union[(dict, str)]: 1
typing.Union[(typing.Callable, str)]: 1
FILE_COPY_ENTRY: 1
FILE_WRITE_ENTRY: 1
STEP_DATA: 1
typing.Union[(list, tuple, COMPONENT)]: 1
COMPONENT: 1
definitions.FileDefinition: 1
typing.Union[(dict, SharedCache)]: 1
typing.Union[(Report, None)]: 1
typing.Union[(str, dict)]: 1
SequenceLoader: 1
BasePlugin: 1
CommandObject: 1
ipc.Client: 1
Tuple[(List[SelectorType], str, Tuple, Dict)]: 1
Optional[urllib.request.OpenerDirector]: 1
Union[('Decoder', Callable[(['Client', str, Mapping[(str, object)]], object)], None)]: 1
CachePolicy: 1
Mapping[(Union[(Locale, str)], str)]: 1
Type[str]: 1
FixtureOpener: 1
usage.Options: 1
MinerStatRemoteProtocol: 1
Union[(ProcessDone, ProcessTerminated)]: 1
Optional[IMiner]: 1
Rig: 1
IMiner: 1
failure.Failure: 1
cmf.project: 1
cmf.timeseries: 1
ocr_record: 1
Dict[(str, TorchSeqRecognizer)]: 1
Iterable[Tuple[(int, int, int, int)]]: 1
Sequence[ocr_record]: 1
torch.tensor: 1
Callable[([Any], torch.Tensor)]: 1
Optional[PytorchCodec]: 1
Union[(Dict[(str, Sequence[int])], Sequence[str], str)]: 1
Sequence[Tuple[(int, int, int, float)]]: 1
regex.Regex: 1
'PytorchCodec': 1
Callable[([float, float, float], float)]: 1
vgsl.TorchVGSLModel: 1
CenterNormalizer: 1
provider.Provider: 1
Optional[Union[(PayloadAlert, str)]]: 1
APNsConnection: 1
Union[(tuple, str)]: 1
BlockCompiler: 1
RssFeed: 1
Optional[InlineKeyboardMarkup]: 1
Entropy: 1
Union[(octets, int)]: 1
Union[(str, Sequence[int])]: 1
Optional[octets]: 1
Optional[Union[(int, tuple)]]: 1
LabeledExample: 1
List[Tuple[(str, Tuple[(float, float)])]]: 1
Callable[([], ndarray)]: 1
LabeledSpectrogram: 1
Callable[([LabeledExample], K)]: 1
List[Corpus]: 1
Callable[([LabeledExample], Any)]: 1
Recorder: 1
Callable[([E], K)]: 1
Callable[([E], V)]: 1
Callable[([Path], Corpus)]: 1
DataDirectories: 1
Callable[([], tf.nn.rnn_cell.RNNCell)]: 1
'PoseThumbnailsPreferences': 1
bpy.types.TimelineMarker: 1
StartEncodingRequest: 1
LiveStreamConfiguration: 1
List[LiveDashManifest]: 1
List[LiveHlsManifest]: 1
AutoRestartConfiguration: 1
MP4MuxingInformation: 1
AnalysisAudioStream: 1
ptr: 1
TaskQueue: 1
Subjob: 1
List['RouteNode']: 1
UrlBuilder: 1
'url to retrieve data': 1
'python requests params in url': 1
'returned [] value will be ignored': 1
'how much time to wait for a response': 1
'check if response has data or not': 1
TelegramMessage: 1
'BotChecker': 1
Suggestion: 1
Callable[([Dict], Dict)]: 1
Union[(str, uuid4)]: 1
DisabledReason: 1
TelegramUser: 1
Type[Tester]: 1
Type[Computer]: 1
Type[Eraser]: 1
Type[Benchmarker]: 1
Type[USBSneaky]: 1
Type[Installer]: 1
Benchmarker: 1
TorrentsDiff: 1
List[Cell]: 1
List[List[Cell]]: 1
List[BaseConfetti]: 1
Optional[http.cookiejar.CookieJar]: 1
Dict[(str, MultipartFile)]: 1
addinfo: 1
C_WithCustoms: 1
List[Type[BaseTracker]]: 1
List[Torrent]: 1
Optional[WithStat]: 1
Optional[TrackerStat]: 1
StatRecord: 1
Callable[([Torrent, BaseClient], str)]: 1
Optional[WithCustoms]: 1
Optional[BaseClient]: 1
xmlrpc.client.ServerProxy: 1
Optional[Dict[(str, Option)]]: 1
Optional[BaseTracker]: 1
Optional[TorrentsDiff]: 1
email.mime.multipart.MIMEMultipart: 1
SimpleContextTestParseBibFilesCommand: 1
Optional[Container[int]]: 1
Union[(T, int)]: 1
List[Union[(Any, List[Any])]]: 1
ProcessorJob: 1
OriginalFile: 1
Experiment: 1
List[Sample]: 1
Union[(None, MarkovChain, DynamicMarkovChain)]: 1
_io.TextIOWrapper: 1
BidForm: 1
Union[(pathlib.Path, str)]: 1
more_itertools.peekable: 1
Iterable[Extractor]: 1
Iterator[CaptureResult[Section]]: 1
extractors.common.Span: 1
[ResponseCode]: 1
SimulatorProtocolLabel: 1
SimulatorGotoAction: 1
SimulatorTriggerCommandAction: 1
SimulatorSleepAction: 1
SimulatorCounterAction: 1
SimulatorRule: 1
SimulatorRuleCondition: 1
ConditionType: 1
(ProtocolAnalyzer or ProtocolGroup): 1
Ruleset: 1
GenericCRC: 1
CommonRange: 1
FuzzMode: 1
BackendHandler: 1
VirtualDevice: 1
Backends: 1
QFocusEvent: 1
RuleExpressionValidator: 1
EditAction: 1
SectionComboBox: 1
QDragLeaveEvent: 1
ParticipantTableModel: 1
TibrvCmListener: 1
TibrvCmMsg: 1
TibrvListener: 1
tibrvftMemberCallback: 1
tibrvftMemberOnComplete: 1
tibrvftMonitorCallback: 1
tibrvftMonitorOnComplete: 1
tibrvDispatchable: 1
tibrvQueueOnComplete: 1
tibrvQueueLimitPolicy: 1
_ctypes.c_char_p: 1
tibrvEventVectorCallback: 1
tibrvEventOnComplete: 1
tibrv_status: 1
CourseOffering: 1
SimilarityResult: 1
ISignConnection: 1
Union[(str, ISignEnvironment)]: 1
Optional[Union[(str, ISignEnvironment)]]: 1
Optional[Union[(Files, List[Union[(File, Tuple[(str, str, str)])]])]]: 1
isign.Files: 1
Optional[ElementTree.Element]: 1
Union[(Element, Elements)]: 1
MongoTSMetadata: 1
SEPAAccount: 1
TableArgs: 1
BankAccount: 1
BackendError: 1
Type[UserLike]: 1
InitContextCallable: 1
List[IPv4Network]: 1
UserStatus: 1
typing.List[typing.Type[base.BaseTransform]]: 1
contract.Base: 1
typing.Iterable[T]: 1
Creds: 1
typing.Union[(dict, str, bytes)]: 1
'_camera.Camera': 1
Union[(str, int, float, bool)]: 1
List[AzureScaleSet]: 1
Iterable[Mapping]: 1
lekvar.BoundObject: 1
[Function]: 1
[FunctionType]: 1
SoftScope: 1
[(Object, Object)]: 1
(lambda Object: bool): 1
[Variable]: 1
bindings.Module: 1
llvm.Block: 1
llvm.Value: 1
llvm.Type: 1
[(Node, 'func')]: 1
(list, str, object): 1
COMMAND: 1
AbstractRouter: 1
AbstractSchema: 1
RequestData: 1
NotifiedUser: 1
List[MyPolygon]: 1
ProjectSerializer: 1
GeneratorType: 1
ServiceGmw: 1
QConfiguration: 1
BlogSync.Id: 1
Language.Code: 1
QLanguage: 1
BlogSeo: 1
BlogTheme.Id: 1
QBlogSeo: 1
BlogSeo.LastCId: 1
BlogSeo.Blog: 1
PermissionWithAuthenticated: 1
SolicitationPutHeader: 1
PermissionFilters: 1
Login.Session: 1
QRole: 1
RightType.Id: 1
QRight: 1
PostVerification: 1
User.Uuid: 1
PersonIcon.Id: 1
BlogTypePost: 1
QBlogTypePost: 1
BlogTypePostPersist: 1
BlogTypePost.Id: 1
BlogMediaType.Key: 1
BlogPost: 1
QBlogPostPublished: 1
BlogCollaborator: 1
Type.Name: 1
BlogComment: 1
UserMapped.Id: 1
Inlet.Key: 1
QQueryCriteria: 1
Article.Id: 1
ValidationResult: 1
List[Snapshot]: 1
Optional[ClientFactory]: 1
pykube.objects.APIObject: 1
Optional[Callable[(..., Serializable)]]: 1
Union[(pykube.objects.PersistentVolumeClaim, pykube.objects.PersistentVolume, SnapshotRule)]: 1
Iterable[timedelta]: 1
AWSDiskIdentifier: 1
DiskIdentifier: 1
GoogleDiskIdentifier: 1
kube.Resource: 1
LogGroup: 1
Iterable[LogGroup]: 1
Iterable[Tuple[(AudioSourceInfo, Iterable[Tuple[(int, float, float, int, str)]])]]: 1
List[TrackInfo]: 1
Tuple[TypeLike]: 1
Union[(str, io.IOBase)]: 1
Union[(str, List[str], io.IOBase)]: 1
typing.Optional[asyncio.Task]: 1
typing.Optional[LRUCache]: 1
typing.List[BlobInfo]: 1
typing.Optional[StreamDescriptor]: 1
'BlobInfo': 1
'StreamDescriptor': 1
typing.Optional['ConnectionManager']: 1
typing.List[blob_request_types]: 1
blob_request_types: 1
blob_response_types: 1
typing.Optional['DictDataStore']: 1
typing.Callable[([], int)]: 1
typing.List[typing.Tuple[(str, int)]]: 1
typing.Optional[asyncio.Queue]: 1
typing.Union[(int, bytes, bytearray, str, list, tuple, dict)]: 1
typing.Tuple[(str, int)]: 1
typing.List[typing.Tuple[(bytes, str, int)]]: 1
FindResponse: 1
typing.Iterable['KademliaPeer']: 1
FindNodeResponse: 1
FindValueResponse: 1
Type[BaseWalletManager]: 1
Type[BaseLedger]: 1
BlockHeightEvent: 1
Conductor: 1
MutableSequence[Wallet]: 1
MutableMapping[(Type[BaseLedger], BaseLedger)]: 1
List[basetransaction.BaseOutputEffectiveAmountEstimator]: 1
MutableSequence['baseaccount.BaseAccount']: 1
'baseledger.BaseLedger': 1
'basemanager.BaseWalletManager': 1
ErrorBase: 1
list('TypeBase'): 1
'TreeType': 1
'Symbol': 1
FunctionDeclarationNode: 1
'Scope': 1
GlobalScope: 1
list('ASTNode'): 1
'ASTNode': 1
Gtk.IconSize: 1
Gedit.Document: 1
DictonatorStates: 1
Union[(str, Arrow)]: 1
'Tuple[str]': 1
Dogbot: 1
'Exec': 1
Callable[([], sqlite3.Connection)]: 1
'Optional[Type]': 1
Stats: 1
elm_parser.PortInfo: 1
'ProjectConfig': 1
List[Tuple[(str, ExactVersion)]]: 1
ExactVersion: 1
List[SearchEntry]: 1
List[ElmPackage]: 1
ChunkType: 1
TemplateNode: 1
ViewModel: 1
Bindable: 1
tk.Widget: 1
typing.Iterable['Outcome']: 1
typing.Iterable['Reward']: 1
typing.Iterable['NextState']: 1
Outcome: 1
mdp.MDPSpec: 1
typing.List[Node]: 1
mdp.Reward: 1
mdp.NextState: 1
Union[(datetime, None)]: 1
Scan: 1
List[Tuple[(list, dict)]]: 1
Dict[(str, GroupEvaluation)]: 1
'PluginManager': 1
AgentConfig: 1
BackpropNetwork: 1
CoreV1Api: 1
List[ServiceAdapterABC]: 1
ServiceAdapterABC: 1
ChatParser.EmoticonContext: 1
ChatParser.LinkContext: 1
ChatParser.MessageContext: 1
ChatParser.CommandContext: 1
ChatParser.ChatContext: 1
BoundaryDirection: 1
BoundaryType: 1
Union[(Iterable[BoundaryType], BoundaryType)]: 1
Dict[(str, BoxBoundary)]: 1
Tuple[(np.ndarray, np.ndarray)]: 1
Optional[Constraints]: 1
Optional[Union[(LinearConstraints, Constraints)]]: 1
List[ExecutorBase]: 1
Universe: 1
Union[(List, set)]: 1
Optional[tomodachi.watcher.Watcher]: 1
Optional[Union[(str, int)]]: 1
Optional[Union[(logging.Formatter, str, bool)]]: 1
RSA: 1
Union[(str, Dict, int)]: 1
(bool or Engine): 1
'BuildConfig': 1
Union[('Repo', 'ExternalRepo')]: 1
Union[(Dict, Event)]: 1
'ExperimentJob': 1
Union[(AwareDT, NaiveDT)]: 1
'EventContextSpec': 1
ops_params.ParamSpec: 1
'DockerJob': 1
'RegistryAccess': 1
'BaseOperatorCondition': 1
Any[(object, Iterable, QuerySet)]: 1
ApprovalModel: 1
Optional[tempfile.TemporaryDirectory]: 1
Requirement: 1
Optional[BinaryIO]: 1
Optional[JobRetryState]: 1
List[BlockVisibility]: 1
ConvolutionFunction: 1
GridData: 1
EarthLocation: 1
hug.types.one_of(['mei', 'msm', 'midi', 'wav', 'mp3']): 1
hug.types.one_of(SB_FILES.keys()): 1
Union[(DataArray, Dataset, Variable)]: 1
Sequence[Hashable]: 1
'AbstractCoordinates': 1
'DataArray': 1
'Union[DataArray, Dataset]': 1
Mapping[(Hashable, Variable)]: 1
Mapping[(Any, Variable)]: 1
Mapping[(Any, Union[(slice, Variable)])]: 1
Report: 1
RawData: 1
ReportSet: 1
ChartType: 1
EventSeries: 1
IPSecInfo: 1
docker.DockerClient: 1
iptc.Table: 1
iptc.Chain: 1
nltk.RegexpParser: 1
nltk.Tree: 1
api.ResourceFile: 1
OAuth: 1
FPNode: 1
{'policy', 'value'}: 1
{'w', 'b'}: 1
Gio.Menu: 1
Gio.MenuItem: 1
ComparisonState: 1
Union[(Gtk.ButtonsType, Sequence[Tuple[(str, int)]])]: 1
Optional[Gtk.Window]: 1
'ConsoleStream': 1
Sequence[Pattern]: 1
Optional[Callable[([int, int], None)]]: 1
GtkSource.StyleScheme: 1
Gtk.IconLookupFlags: 1
ChunkAction: 1
Gtk.RecentFilterInfo: 1
List[GObject.Object]: 1
ctypes.POINTER(xlclass.XLportHandle): 1
xlclass.XLaccess: 1
ctypes.POINTER(xlclass.XLaccess): 1
ctypes.POINTER(xlclass.XLuint64): 1
ctypes.POINTER(xlclass.XLhandle): 1
ctypes.POINTER(xlclass.XLevent): 1
ctypes.POINTER(xlclass.XLcanRxEvent): 1
can.typechecking.Channel: 1
BusState: 1
Optional[typechecking.Channel]: 1
Optional[typechecking.CanData]: 1
Optional[Union[(float, int)]]: 1
BusABC: 1
Optional[asyncio.events.AbstractEventLoop]: 1
Tuple[(Message, ...)]: 1
typechecking.Channel: 1
'BusABC': 1
ContactModel: 1
[(str or tuple)]: 1
Join: 1
Union[(dict, str, None)]: 1
Union[(str, Tuple[str])]: 1
Union[(Dict[(str, int)], int, None)]: 1
LocalizedIntegerValue: 1
TradingSession: 1
MachineCurrentState: 1
SmartDatabaseClient: 1
'glotaran.models.doas.DoasModel': 1
'KMatrix': 1
DatasetDescriptor: 1
typing.Dict[(str, typing.Union[(typing.Dict, typing.List)])]: 1
typing.List[typing.Union[(float, typing.List)]]: 1
LmParameter: 1
typing.Union[(int, float, typing.List)]: 1
'glotaran.parameter.ParameterGroup': 1
typing.Union[(xr.DataArray, xr.Dataset)]: 1
typing.Type['glotaran.model.Model']: 1
typing.Type[DatasetDescriptor]: 1
typing.Union[(MatrixFunction, IndexDependedMatrixFunction)]: 1
GlobalMatrixFunction: 1
ConstrainMatrixFunction: 1
PenaltyFunction: 1
FinalizeFunction: 1
typing.Dict[(str, typing.Union[(xr.Dataset, xr.DataArray)])]: 1
typing.Union[(typing.Any, typing.Dict[(str, typing.Dict[(str, typing.Any)])])]: 1
typing.Dict[(str, any)]: 1
EventQueue: 1
typing.List[int]: 1
mz.preprocessors.units.MatchingHistogram: 1
typing.List['mz.auto.tuner.callbacks.Callback']: 1
typing.Union[(typing.List[str], typing.List[base_metric.BaseMetric], str, base_metric.BaseMetric)]: 1
'BaseModel': 1
typing.Union[(np.ndarray, typing.List[np.ndarray])]: 1
typing.Callable[(..., hyperopt.pyll.Apply)]: 1
typing.Optional[SpaceType]: 1
typing.Optional[typing.Callable[([typing.Any], bool)]]: 1
SpaceType: 1
typing.Callable[([typing.Any], bool)]: 1
typing.Union[(str, typing.Type[BaseMetric], BaseMetric)]: 1
'base_task.BaseTask': 1
typing.Union[(dict, mz.preprocessors.units.Vocabulary.TermIndex)]: 1
typing.Union[(list, np.array)]: 1
StatefulUnit: 1
typing.List[Unit]: 1
typing.List[typing.List[str]]: 1
dircmp: 1
ComponentOptions: 1
LayoutOptions: 1
QtWidgets.QApplication: 1
SimulantData: 1
SimulationClock: 1
ValuesManager: 1
PopulationView: 1
Union[(List[ScalarValue], Tuple[ScalarValue])]: 1
Union[(ScalarValue, pd.DataFrame, List[ScalarValue], Tuple[ScalarValue])]: 1
EventManager: 1
Callable[([Event], None)]: 1
Union[(ConfigTree, List)]: 1
List[Tuple[(str, Tuple[str])]]: 1
Union[(type, Tuple[type])]: 1
ComponentManager: 1
IngestMessage: 1
Commissie: 1
GraphQLObjectType: 1
Sequence[KvetchShard]: 1
List[StoredIdEdgeDefinition]: 1
ExecutionResult: 1
Dict[(str, Type)]: 1
GrappleTypeRef: 1
List[KvetchData]: 1
StoredIdEdgeDefinition: 1
List[Callable[([np.ndarray], int)]]: 1
Tuple[(Union[(slice, np.ndarray, int)], Union[(slice, np.ndarray, int)])]: 1
loompy.LayerManager: 1
Union[(str, Tuple[(Union[(int, np.ndarray, slice)], Union[(int, np.ndarray, slice)])])]: 1
loompy.LoomConnection: 1
ttk.Label: 1
ttk.Checkbutton: 1
chrono.Date: 1
Sequence[Menu]: 1
Sequence[Union[(MenuItem, str)]]: 1
List['account.Account']: 1
Optional[Union[(chrono.Date, str)]]: 1
Optional[chrono.Date]: 1
Dict[(str, Observable)]: 1
config.RowID: 1
Union[('Register', Any)]: 1
Union[(str, UIKeyInput)]: 1
KeyEventHandler: 1
List[KeyEventHandler]: 1
List[BaseLoader]: 1
builtins.bool: 1
builtins.int: 1
builtins.float: 1
builtins.tuple: 1
builtins.set: 1
builtins.dict: 1
'Favorite': 1
'NamedColour': 1
Union[(float, 'datetime.datetime')]: 1
'WbMainWindow': 1
'WbApp': 1
Optional[Callable[([Any], bool)]]: 1
Union[(Type[BaseException], Sequence[Type[BaseException]])]: 1
Hostmask: 1
'EventManager.Events': 1
ParsedLine: 1
BufferLine: 1
typing.Union[(str, typing.Pattern[str])]: 1
Exports: 1
typing.List[typing.Tuple[(str, typing.Optional[str])]]: 1
BaseModule: 1
Config.Config: 1
typing.List[ModuleDefinition]: 1
Database.Database: 1
typing.List[typing.Tuple[(str, dict)]]: 1
Timers: 1
TriggerEventType: 1
typing.Optional[typing.Callable[([], typing.Any)]]: 1
EventManager.Event: 1
typing.Optional[utils.irc.IRCConnectionParameters]: 1
IRCChannel.Channel: 1
'EventRoot': 1
typing.Callable[(['Socket', str], None)]: 1
typing.List[typing.Tuple[(str, typing.List[str])]]: 1
typing.Dict[(typing.Any, typing.Any)]: 1
typing.Callable[([], typing.List[str])]: 1
'Database.Database': 1
IRCLine.ParsedLine: 1
'DesertBotFactory': 1
ResponseType: 1
IRCUser: 1
Optional[IRCChannel]: 1
IRCChannel: 1
task.LoopingCall: 1
QJsonValue.Type: 1
Qt.Orientation: 1
GObject.Object: 1
Header: 1
header.Header: 1
SCN_LOAD_DATA: 1
SCN_DATA_LOADED: 1
SCN_ATTACH_BEHAVIOR: 1
EVENT_GROUPS: 1
BEHAVIOR_EVENTS: 1
PHASE_MASK: 1
CLICK_REASON: 1
DATA_ARRIVED_PARAMS: 1
HTTP_WRAPPER_TYPE: 1
MiddlewareType: 1
Callable[([], Awaitable[None])]: 1
'HTTPParser': 1
mqtt.Client: 1
(str or int or list): 1
(int or list): 1
'aiomongo.Database': 1
Optional[CodecOptions]: 1
Optional[Union[_ALL_READ_PREFERENCES]]: 1
Optional[WriteConcern]: 1
Optional[ReadConcern]: 1
ClientOptions: 1
'aiomongo.Connection': 1
'aiomongo.Collection': 1
List[DeterministicHyperparameterSweeper]: 1
VAEWrappedEnv: 1
TorchTrainer: 1
ExplorationStrategy: 1
StepCollector: 1
GoogleCredentials: 1
typing.Iterable[AccountPermissionType]: 1
typing.Set[AccountPermissionType]: 1
UsernameForm: 1
DiskFileFacade: 1
typing.Optional[GoogleDocsFacade]: 1
SessionRequest: 1
typing.Optional[Session]: 1
HttpMethod: 1
'FileSource': 1
typing.Optional[SocialToken]: 1
typing.Set[ProjectRole]: 1
ProjectRole: 1
DirectoryEntryType: 1
typing.Optional[datetime]: 1
ProjectSourcePuller: 1
GithubSource: 1
GitHubFacade: 1
typing.Iterable[Source]: 1
typing.Iterable[ProjectPermissionType]: 1
typing.Union[(User, Team)]: 1
typing.Optional[AbstractUser]: 1
typing.Optional[typing.Iterable[Team]]: 1
ProjectPermissionType: 1
RestClientBase: 1
FileSource: 1
Display: 1
Viewport: 1
ProfileManager: 1
Xrandr: 1
Hooks: 1
IntegrityCheckType: 1
'requests.auth.AuthBase': 1
FileProgress: 1
regexp('^(\\d+)(?:d(-?\\d+)(?::(-?\\d+))?)?$'): 1
(lambda s: (s == 's')): 1
range_int(1): 1
asynqp.IncomingMessage: 1
List[QueueBinding]: 1
asynqp.Queue: 1
Callable[([List[Message]], Coroutine[(Any, Any, None)])]: 1
List[ConnectionParams]: 1
pt.DataType: 1
TranslationUnit: 1
ContestProblemPlag: 1
PrintCode: 1
qiime2.CategoricalMetadataColumn: 1
qiime2.NumericMetadataColumn: 1
SingleIntFormat: 1
RedundantSingleIntDirectoryFormat: 1
MappingFormat: 1
FourIntsDirectoryFormat: 1
UnimportableFormat: 1
collections.Counter: 1
(str, None): 1
Union[(str, Node)]: 1
TextChannel: 1
typing.Union[(None, mx.context.Context)]: 1
spacy.tokens.Token: 1
CustomClient: 1
Dict[(Regex, str)]: 1
(str or Callable): 1
usb.core.Interface: 1
ReportType: 1
CollectionType: 1
Designator: 1
Qualifier: 1
Bias: 1
XKNX: 1
GatewayDescriptor: 1
KNXIPFrame: 1
UDPClient: 1
Dict[(str, Union[(str, int, Dict, List)])]: 1
Optional[Dict[(str, List[Union[(str, int)]])]]: 1
List[Channel]: 1
TList[Channel]: 1
Standalone: 1
dic.rel.Lazy(Part): 1
dic.rel.Factory(Part): 1
dic.rel.Factory(Row): 1
dic.rel.Factory(Song): 1
SongDatabase: 1
CertStoreEntry: 1
typing.List[bytes]: 1
color_tracker.ColorTracker: 1
TrackedObject: 1
Camera: 1
Callable[(['ColorTracker'], None)]: 1
Union[(Camera, cv2.VideoCapture)]: 1
CowsayClient: 1
RandomQuoteRequest: 1
CowsayStub: 1
QuoteRequest: 1
Serialiser: 1
CrossValidatedAnalysis: 1
Dict[(str, 'DiscreteSpecification')]: 1
'DiscreteSpecification': 1
List[Dict[(str, bayesianpy.model.Distribution)]]: 1
ScriptEngine: 1
CtaManager: 1
CtaEngine: 1
Sequence[BaseGateway]: 1
QtGui.QPainter: 1
QtWidgets.QStyleOptionGraphicsItem: 1
'callable': 1
AccountData: 1
LogData: 1
Sequence[OrderRequest]: 1
Sequence[CancelRequest]: 1
Sequence['BarData']: 1
Sequence['TickData']: 1
QtWidgets.QMenu: 1
'OesMdApi': 1
MdsApiClientEnvT: 1
SGeneralClientChannelT: 1
SMsgHeadT: 1
'ToraMdApi': 1
'BaseGateway': 1
CTORATstpRspUserLoginField: 1
CTORATstpUserLogoutField: 1
CTORATstpMarketDataField: 1
AsyncDispatchException: 1
NetworkMeta: 1
('batch',): 1
('batch', 'embedding'): 1
DriverName: 1
RepositoryInterface: 1
PresenterInterface: 1
Union[(ChangeType, str)]: 1
Union[(Gender, None)]: 1
RunicAlphabetName: 1
t.Iterable[Chair]: 1
t.List[Chair]: 1
t.Tuple[(float, float)]: 1
RunDataStatsHelper: 1
t.List[int]: 1
ParallelRunWorkerPool: 1
AbstractRunDriver: 1
CPUSet: 1
t.Optional[t.List[t.Dict[(str, t.Any)]]]: 1
t.List[t.Dict[(str, t.Any)]]: 1
t.Union[(str, int)]: 1
BuilderQueueItem: 1
'RecordedError': 1
Union[(str, TextIOWrapper, BufferedRandom, BufferedRWPair, BufferedWriter, IOBase)]: 1
t.Optional[list]: 1
t.Callable[([t.Any], t.Any)]: 1
t.List[float]: 1
Selection: 1
actions.ActionDefinition: 1
application.ChangeType: 1
player.PlayState: 1
urls.URL: 1
type((lambda : None)): 1
Z3SolverFactory: 1
Dict[(int, SignalsTuple)]: 1
Tuple[Signal]: 1
Dict[(BinOp, SignalsTuple)]: 1
'truncate-able query storage': 1
EncoderInterface: 1
(Node or AHTNode): 1
CoreachEncoder: 1
Dict[(Prop, Automaton)]: 1
Iterable[Automaton]: 1
Dict[(Signal, bool)]: 1
Iterable[Tuple[('Node', bool)]]: 1
Set[Signal]: 1
LabelsMap: 1
Union[(spot.twa, spot.twa_graph)]: 1
buddy.bdd: 1
spot.bdd_dict: 1
(AHT or None): 1
NBWNode: 1
NBWAutomaton: 1
Iterable[Process]: 1
plugin.CommandFinalizationData: 1
cmd2.Cmd: 1
HANDLE: 1
'pytypes.tests.testhelpers.typechecker_testhelper_py3.testClass2': 1
testClass: 1
Mapping[(str, Union[(int, str)])]: 1
Sequence[Tuple[(int, str)]]: 1
Generator[(int, Union[(str, None)], Any)]: 1
T_1_py3: 1
Custom_Generic[str]: 1
Sequence[InlineToken]: 1
(list, int): 1
List[NodeService]: 1
msg.NewEventData: 1
msg.SubscriptionDropReason: 1
Credential: 1
messages_pb2.ResolvedEvent: 1
SubscriptionResult: 1
WordsData: 1
request: 1
ConnectionObject: 1
List[dbWorkLine]: 1
re.match: 1
SearchResult: 1
List[MorphPossibilityObject]: 1
Roles: 1
People: 1
Samples: 1
Inner: 1
ast.Num: 1
ast.AugAssign: 1
_NOState: 1
GenQuadDrudge.Swapper: 1
typing.Iterable[Vec]: 1
typing.Mapping[(typing.Tuple[(Vec, Vec)], typing.Union[(ATerms, typing.Tuple[(ATerms, Expr)])])]: 1
MongoSession: 1
Union[(str, CALLABLE_T)]: 1
TwenteMilieu: 1
FroniusAdapter: 1
type(permissions.BasePermission): 1
moderngl.Framebuffer: 1
FontMeta: 1
DistinguishedName: 1
List[Union[(Service, int)]]: 1
Optional[Sequence[Union[(ExtraService, int)]]]: 1
Union[(Service, int)]: 1
Union[(Decimal, str, float)]: 1
ShippingLabel: 1
SenderAddress: 1
Dict[(str, TrackingCode)]: 1
Union[('ZipCode', int, str)]: 1
Optional[Sequence[Union[('ExtraService', int)]]]: 1
Union[('Service', int, str)]: 1
Union[('ExtraService', int)]: 1
Union[(str, FederalTaxNumber)]: 1
Optional[Union[(str, StateTaxNumber)]]: 1
'Contract': 1
Union[(str, int, 'RegionalDirection')]: 1
'PostingCard': 1
Union[('RegionalDirection', int)]: 1
MicroService: 1
MtcnnBridge: 1
FacenetBridge: 1
'1234_5678_90ab_cdef': 1
SvySlice: 1
ShiftOperator: 1
StudentRepoBase: 1
CustomEndpoint: 1
RestEndpoint: 1
BoardConfigModel: 1
PostAction: 1
ModeratorAction: 1
ModeratorBoardAction: 1
ManageReportDetails: 1
VerificationMethod: 1
UploadQueueFiles: 1
PostResultModel: 1
ModeratorLogType: 1
VerificationsModel: 1
ModeratorLogModel: 1
RegCodeModel: 1
UchanConfiguration: 1
FX: 1
ExtendedFX: 1
PollingRate: 1
FXModule: 1
EffectBits: 1
typing.Union[(int, str, typing.List[typing.Union[(int, str)]])]: 1
Optional[Union[(str, bytes)]]: 1
'CustomYamlObject': 1
Optional['flyingcircus.core.Stack']: 1
Union[('_Function', str)]: 1
Optional[CheckSource]: 1
Callable[([Container], bool)]: 1
DockerImageHelper: 1
DockerHelper: 1
ch.Chroma: 1
Union[(Type[pykka.Actor], str)]: 1
Type[BaseHTTPRequestHandler]: 1
Union[(Branch, Tag)]: 1
[Branch]: 1
PostparsingData: 1
'StateChange': 1
InstructionID: 1
ROMType: 1
List[Union[(Iterable[str], Callable, None)]]: 1
IntranetAPI: 1
List[Tuple[(List[float], int)]]: 1
'Heap': 1
MinMaxHeap: 1
HashTable: 1
MinHeap: 1
MaxHeap: 1
Union[('ExtraTree.Node', 'ExtraTree.Leaf')]: 1
List[IssueDescription]: 1
BotCommands: 1
itemID: 1
cp.ConfigParser: 1
'KtrResult': 1
KtrModule: 1
KtrMetaTask: 1
KtrConfig: 1
EntityType: 1
List[Stm]: 1
Stm.Stm: 1
Exp.Exp: 1
List[Exp]: 1
Lex.Token: 1
Int.Interpreter: 1
Union[(Exp.Exp, Stm.Stm)]: 1
UserTagging: 1
('dual', 'buy', 'sell'): 1
SnapshotName: 1
futures.ThreadPoolExecutor: 1
io.RawIOBase: 1
List[Egg]: 1
Type[Scope]: 1
Union[(str, Type)]: 1
Type[Application]: 1
PumpInterface: 1
ExtraPumpInterface: 1
IPump: 1
PropertyArray: 1
StoragePluginBase: 1
io.StringIO: 1
FlowNode: 1
Flow: 1
CertificateType: 1
RSAPrivateKeyWithSerialization: 1
Optional[PKCS12CertificatePayload]: 1
'DjangoCommunicator': 1
CoroutineType: 1
DjangoCommunicator: 1
'Cell': 1
TurnState: 1
'AvatarWrapper': 1
Dict[(Tuple[(int, int)], List[Dict])]: 1
Semester: 1
TableFileSet: 1
PlateFileSet: 1
